<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MacX 常用软件汇总</title>
    <url>/2015/09/08/Apps/</url>
    <content><![CDATA[<p>#Mac软件</p>
<ul>
<li>Paw</li>
<li>Go2Shell</li>
<li>iOS App Signer</li>
<li>Dash</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Failed to start LSB Start Jenkins at boot time</title>
    <url>/2020/10/18/Failed-to-start-LSB-Start-Jenkins-at-boot-time/</url>
    <content><![CDATA[<p>#Failed to start LSB: Start Jenkins at boot time.</p>
<h2 id="启动时报错"><a href="#启动时报错" class="headerlink" title="启动时报错"></a>启动时报错</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart jenkins.service</span><br><span class="line">systemctl status jenkins.service</span><br><span class="line">journalctl -xe</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>报错:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Job for jenkins.service failed because the control process exited with error code.</span><br><span class="line">See &quot;systemctl status jenkins.service&quot; and &quot;journalctl -xe&quot; for details.</span><br><span class="line">invoke-rc.d: initscript jenkins, action &quot;start&quot; failed.</span><br><span class="line">● jenkins.service - LSB: Start Jenkins at boot time</span><br><span class="line">     Loaded: loaded (/etc/init.d/jenkins; generated)</span><br><span class="line">     Active: failed (Result: exit-code) since Fri 2020-10-16 08:13:34 UTC; 70ms ago</span><br><span class="line">       Docs: man:systemd-sysv-generator(8)</span><br><span class="line">    Process: 18357 ExecStart=/etc/init.d/jenkins start (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">Oct 16 08:13:32 ubuntu systemd[1]: Starting LSB: Start Jenkins at boot time...</span><br><span class="line">Oct 16 08:13:34 ubuntu jenkins[18357]: Found an incorrect Java version</span><br><span class="line">Oct 16 08:13:34 ubuntu jenkins[18357]: Java version found:</span><br><span class="line">Oct 16 08:13:34 ubuntu jenkins[18372]: openjdk version &quot;14.0.1&quot; 2020-04-14</span><br><span class="line">Oct 16 08:13:34 ubuntu jenkins[18372]: OpenJDK Runtime Environment (build 14.0.1+7-Ubuntu-1ubuntu1)</span><br><span class="line">Oct 16 08:13:34 ubuntu jenkins[18372]: OpenJDK Server VM (build 14.0.1+7-Ubuntu-1ubuntu1, mixed mode, sharing)</span><br><span class="line">Oct 16 08:13:34 ubuntu jenkins[18357]: Aborting</span><br><span class="line">Oct 16 08:13:34 ubuntu systemd[1]: jenkins.service: Control process exited, code=exited, status=1/FAILURE</span><br><span class="line">Oct 16 08:13:34 ubuntu systemd[1]: jenkins.service: Failed with result &#x27;exit-code&#x27;.</span><br><span class="line">Oct 16 08:13:34 ubuntu systemd[1]: Failed to start LSB: Start Jenkins at boot time.</span><br></pre></td></tr></table></figure>

<h3 id="主要原因是系统自带的tomcat-占用了8080端口"><a href="#主要原因是系统自带的tomcat-占用了8080端口" class="headerlink" title="主要原因是系统自带的tomcat 占用了8080端口"></a>主要原因是系统自带的tomcat 占用了8080端口</h3><p>如果你的<code>/etc/init.d/jenkins</code>文件无法启动Jenkins，编辑<code>/etc/default/jenkins</code>， 修改 —-HTTP_PORT&#x3D;8080—-<code>为----HTTP_PORT=8081----</code> 在这里，“8081”也可被换为其他可用端口。</p>
<p>###: 修改启动用户为root</p>
<p>###: 使用java14 </p>
<p>报错:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Oct 16 09:02:57 ubuntu jenkins[15764]: Found an incorrect Java version</span><br><span class="line">Oct 16 09:02:57 ubuntu jenkins[15764]: Java version found:</span><br><span class="line">Oct 16 09:02:57 ubuntu jenkins[15779]: openjdk version &quot;14.0.1&quot; 2020-04-14</span><br><span class="line">Oct 16 09:02:57 ubuntu jenkins[15779]: OpenJDK Runtime Environment (build 14.0.1+7-Ubuntu-1ubuntu1)</span><br><span class="line">Oct 16 09:02:57 ubuntu jenkins[15779]: OpenJDK Server VM (build 14.0.1+7-Ubuntu-1ubuntu1, mixed mode, sharing)</span><br><span class="line">Oct 16 09:02:57 ubuntu jenkins[15764]: Aborting</span><br><span class="line">Oct 16 09:02:57 ubuntu systemd[1]: jenkins.service: Control process exited, code=exited, status=1/FAILURE</span><br><span class="line">Oct 16 09:02:57 ubuntu systemd[1]: jenkins.service: Failed with result &#x27;exit-code&#x27;.</span><br><span class="line">Oct 16 09:02:57 ubuntu systemd[1]: Failed to start LSB: Start Jenkins at boot time.</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vi  /etc/default/jenkins</span><br><span class="line"># 将JENKINS_ARGS=&quot;--webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT&quot;</span><br><span class="line">改为</span><br><span class="line">#JENKINS_ARGS=&quot;--enable-future-java --webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo vi /etc/init.d/jenkins</span><br><span class="line"># 将JAVA_ALLOWED_VERSIONS=( &quot;18&quot; &quot;110&quot; ) 改为</span><br><span class="line"># JAVA_ALLOWED_VERSIONS=( &quot;18&quot; &quot;140&quot; )</span><br><span class="line"></span><br><span class="line">#刷新daemon</span><br><span class="line">sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart jenkins.service</span><br><span class="line">cat /var/log/jenkins/jenkins.log</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>环境安装</category>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>LSB</tag>
        <tag>Jenkins</tag>
        <tag>raspberry pi</tag>
      </tags>
  </entry>
  <entry>
    <title>PD11 for MacOS 11.5</title>
    <url>/2020/01/13/PD11/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -E -n youpassword | sudo -E -s</span><br><span class="line"><span class="built_in">cd</span> /Volumes/Parallels\ Desktop\ 11</span><br><span class="line"><span class="built_in">export</span> SYSTEM_VERSION_COMPAT=1</span><br><span class="line">open Install.app</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Vapor 3</title>
    <url>/2018/11/21/Vapor-%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97/</url>
    <content><![CDATA[<h1 id="Vapor-学习系列"><a href="#Vapor-学习系列" class="headerlink" title="Vapor 学习系列"></a>Vapor 学习系列</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="docker-建议"><a href="#docker-建议" class="headerlink" title="docker(建议)"></a>docker(建议)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">docker pull swift</span><br><span class="line">docker exec -it &quot;ID&quot; /bin/sh</span><br><span class="line">cd ~</span><br><span class="line">git clone https://github.com/vapor/toolbox.git</span><br><span class="line">cd toolbox</span><br><span class="line"># 可能需要挂代理</span><br><span class="line">swift update</span><br><span class="line">make install</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install  vapor</span><br></pre></td></tr></table></figure>

<h2 id="生成初始项目"><a href="#生成初始项目" class="headerlink" title="生成初始项目"></a>生成初始项目</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># step 1 先设置 git user </span><br><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line"># step 2 生成项目</span><br><span class="line">vapor new &quot;项目名&quot;</span><br></pre></td></tr></table></figure>
<p><strong>注意: macOS 12以下系统 需要修改文件 Package.swift</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- swift-tools-version:5.6</span><br><span class="line"># 改为你当前环境版本(最少要到 3.0 才有SPM,建议能最新就最新)</span><br><span class="line">+ swift-tools-version:5.5</span><br><span class="line"></span><br><span class="line"># macOS系统裸装才需要修改,给 xcode 和 xctool 识别的</span><br><span class="line">- .macOS(.v12)</span><br><span class="line"># 改为支持10以上系统 </span><br><span class="line">+ .macOS(.v10_15)</span><br></pre></td></tr></table></figure>


<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.swift.org/">SWIFT</a></li>
<li><a href="https://www.swift.org/package-manager/">SPM</a></li>
<li><a href="https://docs.vapor.codes/">Vapor Docs</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Ubuntu 16.04 install shadowsocks</title>
    <url>/2018/01/24/anything-install-Ubuntu-16-04-install-shadowsocks/</url>
    <content><![CDATA[<h1 id="Ubuntu-16-04-install-shadowsocks"><a href="#Ubuntu-16-04-install-shadowsocks" class="headerlink" title="Ubuntu 16.04 install shadowsocks"></a>Ubuntu 16.04 install shadowsocks</h1><h2 id="1-1更新apt"><a href="#1-1更新apt" class="headerlink" title="1.1更新apt"></a>1.1更新apt</h2><pre>
apt update &&apt upgrade
</pre>

<p>##1.2安装python pip </p>
<pre>
apt install python-pip python-dev
</pre>

<p>##1.3升级pip到9.0版本</p>
<pre>
pip install -U pip
</pre>

<p>###如果pip报错</p>
<pre>
Traceback (most recent call last):
  File "/usr/lib/python2.7/runpy.py", line 174, in _run_module_as_main
    "__main__", fname, loader, pkg_name)
  File "/usr/lib/python2.7/runpy.py", line 72, in _run_code
    exec code in run_globals
  File "/usr/lib/python2.7/dist-packages/pip/__main__.py", line 19, in <module>
    sys.exit(pip.main())
  File "/usr/lib/python2.7/dist-packages/pip/__init__.py", line 215, in main
    locale.setlocale(locale.LC_ALL, '')
  File "/usr/lib/python2.7/locale.py", line 581, in setlocale
    return _setlocale(category, locale)
locale.Error: unsupported locale setting
</pre>

<p>则需要设置locale环境变量</p>
<pre>
export LC_ALL=C
</pre>

<p>如果还报错则需要安装</p>
<pre>
apt install libssl-dev -y
apt install libffi-dev
</pre>

<p>##2.1安装shdowsocks</p>
<pre>
pip install shadowsocks
</pre>

<p>添加shadowsocks 配置文件</p>
<pre>
mkdir /config &&
mkdir /config/shadowsocks

echo "{\"server\":\"服务器IP\",\"server_port\":端口号,\"password\":\"密码\",\"timeout\":300,\"method\":\"aes-256-cfb\",\"fast_open\":true,\"workers\":1}" > /config/shadowsocks/shadowsocks.json
</pre>

<p>添加自启,将</p>
<pre>sudo ssserver -c /config/shadowsocks/shadowsocks.json -d start
</pre>
<p>添加到 &#x2F;etc&#x2F;rc.local exit 0 的前面</p>
]]></content>
      <categories>
        <category>环境安装</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>shadowsocks</tag>
        <tag>pip</tag>
        <tag>locale</tag>
      </tags>
  </entry>
  <entry>
    <title>cocostudio</title>
    <url>/2013/09/26/cocos-cocostudio/</url>
    <content><![CDATA[<ul>
<li><a href="cocostudio.org/downloads/1.0.zip">cocostudio 1.0</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>docker lite cookbook</title>
    <url>/2018/09/30/docker-docker-lite-cookbook/</url>
    <content><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://desktop.docker.com/mac/main/amd64/Docker.dmg">Docker Desktop for MacOS</a></li>
<li><ul>
<li><a href="https://desktop.docker.com/mac/main/amd64/Docker.dmg">Docker Desktop  for MacOS M1</a></li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Docker cli 在unbuntu下没有命令行补全功能</title>
    <url>/2021/06/06/docker-docker-no-bash-completion-for-unbuntu/</url>
    <content><![CDATA[<h1 id="Docker-cli-在unbuntu下没有命令行补全功能"><a href="#Docker-cli-在unbuntu下没有命令行补全功能" class="headerlink" title="Docker cli 在unbuntu下没有命令行补全功能"></a>Docker cli 在unbuntu下没有命令行补全功能</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>使用了docker swift 镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull swift</span><br></pre></td></tr></table></figure>

<p><code>问题原因:使用了精简版ubuntu</code></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="方式一-建议"><a href="#方式一-建议" class="headerlink" title="方式一 (建议)"></a>方式一 (建议)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># step 1</span></span><br><span class="line">apt install bash-completion -y</span><br><span class="line"><span class="comment"># lrwxrwxrwx 1 root root 4 Jun  8 01:24 /bin/sh -&gt; bash</span></span><br><span class="line"><span class="built_in">ls</span> -l /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">#debconf: unable to initialize frontend: Dialog</span></span><br><span class="line"><span class="comment">#debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76.)</span></span><br><span class="line"><span class="comment">#debconf: falling back to frontend: Readline</span></span><br><span class="line"><span class="comment">#Configuring dash</span></span><br><span class="line"><span class="comment"># ----------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#The system shell is the default command interpreter for shell scripts.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Using dash as the system shell will improve the system&#x27;s overall performance.</span></span><br><span class="line"><span class="comment"># It does not alter the shell presented to interactive users.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use dash as the default system shell (/bin/sh)? [yes/no] </span></span><br><span class="line"><span class="comment">## 选择 no</span></span><br><span class="line"></span><br><span class="line">dpkg-reconfigure dash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/share/bash-completion/bash_completion </span><br><span class="line">/usr/share/bash-completion/bash_completion</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt  remove vim-common</span><br><span class="line">apt  autoremove</span><br><span class="line">apt  install vim -y</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="方式三-不建议"><a href="#方式三-不建议" class="headerlink" title="方式三 (不建议)"></a>方式三 (不建议)</h3><p><code>直接使用 *bash* , 不建议 会出现一些不必要的权限问题</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># bash  --version</span><br><span class="line"># GNU bash, version 4.4.20(1)-release (x86_64-pc-linux-gnu)</span><br><span class="line"></span><br><span class="line">sh-4.4# bash</span><br><span class="line">root@22a56bf7248b:/# </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>儿童编程前言</title>
    <url>/2021/11/23/kid-edu-readme/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul>
<li><p>做这个的起因</p>
<blockquote>
<p>主要因为反感销售托利用父母间矛盾点造成焦虑促使孩子父母单方面冲动消费,其次是反感机器猫班销售(班主任)的电话骚扰及明确不付费后的气急败坏.
  </p>
</blockquote>
</li>
<li><p>事情的经过</p>
<blockquote>
<ul>
<li>使用孩子学校老师推荐的契机进入领课群,然后分配班主任和班级群,这期间还是比较正常的.</li>
<li>然后是每天分配班主任的电话 一般一天一个 不接他就一直打</li>
<li>从第二天开始有家长发孩子学习的图片,知道第五条发现这个家长是托(<strong>每天发的孩子都不一样,长得也完全不同,这托太不专业</strong>),知道第七天,开始缴费2580元. 这之后才是最气愤的,这个托开始诉苦,说什么孩子他爸爸不管学习,自己多么多么辛苦(<strong>这个确实是许多父母的通病,然后孩子妈妈们就共鸣了</strong>),之后呢就开始诉说自己条件不好,孩子爸爸不同意学习,自己多么多么无奈,然后自己瞒着他爸爸交费了,自己砸锅卖铁也要供孩子上这个课,然后群里发缴费成功截图(<strong>这时候就会有宝妈跟着她的思路走了,然后冲动消费进去了</strong>).</li>
<li>我反感的并不是这个学编程不好,而是为他们这种手段不耻.</li>
<li>班主任开始早上打了2个电话劝我缴费,第三个电话我才和他摊牌,说我就写代码的,如果我自己能够教孩子,并且不会缴费,这时候感觉这班主任就破防了 各种嘲讽…</li>
</ul>
</blockquote>
</li>
</ul>
<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><blockquote>
<p>该教程是基于Apple Playgrounds App for iPad 完成的</p>
</blockquote>
<ul>
<li><a href="https://apps.apple.com/app/id908519492">playgrounds for iPad</a><blockquote>
<p>备用</p>
</blockquote>
</li>
<li><a href="https://apps.apple.com/cn/app/swift-playgrounds/id1496833156?mt=12">playgrounds for MacOS</a></li>
</ul>
<blockquote>
<blockquote>
<p>不得不说<a href="#codemao">编程猫</a>是一个学习编程的好App</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>如果您是XP&#x2F;Win 系统推荐 <a href="#elogo">易Logo</a>   <a href="#elogo">麻省理工研发的scratch</a> **</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>土豪可食用 <a href="#lego">乐高机器人E3</a></p>
</blockquote>
</blockquote>
<h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p> 感谢Apple Teacher 的免费资料,及Playgrounds App.</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p>Win</p>
<blockquote>
<ul>
<li><a id="elogo" /> <a href="http://www.dywt.com.cn/elogo/">易Logo</a></li>
<li><a id="scratch" /> <a href="http://scratch.mit.edu/">Scratch</a></li>
</ul>
</blockquote>
</blockquote>
<blockquote>
<p>App</p>
<blockquote>
<ul>
<li><a id="codemao" /><a href="https://nemo.codemao.cn/">编程猫</a></li>
</ul>
</blockquote>
</blockquote>
<blockquote>
<p>苹果旗下</p>
<blockquote>
<ul>
<li><a href="https://apps.apple.com/app/id908519492">playgrounds for iPad</a></li>
<li><a href="https://apps.apple.com/cn/app/swift-playgrounds/id1496833156?mt=12">playgrounds for MacOS</a></li>
</ul>
</blockquote>
</blockquote>
<blockquote>
<p>乐高</p>
<blockquote>
<ul>
<li><a href="https://www.lego.com/kids">乐高 Kids 网页</a></li>
<li><a id="lego" /> <a href="https://www.lego.com/zh-cn/product/robot-inventor-51515">乐高机器人-实物</a></li>
</ul>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>儿童编程</category>
      </categories>
      <tags>
        <tag>LGO</tag>
        <tag>Kids</tag>
        <tag>机器猫</tag>
      </tags>
  </entry>
  <entry>
    <title>博客推荐</title>
    <url>/2005/10/02/other-feedDev/</url>
    <content><![CDATA[<h1 id="值得关注的网站"><a href="#值得关注的网站" class="headerlink" title="值得关注的网站"></a>值得关注的网站</h1><p>##个人博客<br>-	<a href="http://liaoxuefeng.com/">廖雪峰的博客</a><br>-	<a href="http://blog.ruanyifeng.com/">阮一峰</a></p>
<h2 id="公司技术团队"><a href="#公司技术团队" class="headerlink" title="公司技术团队"></a>公司技术团队</h2><ul>
<li>   <a href="https://tech.meituan.com/">美团前端技术团队</a></li>
</ul>
<h2 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h2><ul>
<li>   <a href="http://springboot.fun/#blogs">Spring Boot 中文索引</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>电影列表</title>
    <url>/2013/10/01/other-see/</url>
    <content><![CDATA[<p>#自己的必看电影列表</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 切尔诺贝利</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>自己的必看书籍列表</title>
    <url>/2014/02/13/todolist-read/</url>
    <content><![CDATA[<h1 id="自己的必看书籍列表"><a href="#自己的必看书籍列表" class="headerlink" title="自己的必看书籍列表"></a>自己的必看书籍列表</h1><h2 id="CS-专业书籍"><a href="#CS-专业书籍" class="headerlink" title="CS 专业书籍"></a>CS 专业书籍</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 算法导论</li>
<li><input checked="" disabled="" type="checkbox"> 深入理解计算机系统</li>
<li><input checked="" disabled="" type="checkbox"> C++ Primer</li>
<li><input disabled="" type="checkbox"> 神经智能 何振亚</li>
<li><input checked="" disabled="" type="checkbox"> 自适应信号处理  何振亚</li>
</ul>
<h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><ul>
<li><input disabled="" type="checkbox"> 深入解析 MAC OS X &amp; iOS 操作系统</li>
<li><input disabled="" type="checkbox"> <a href="https://opensource.apple.com/">Apple源码</a></li>
</ul>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h2 id="SHELl"><a href="#SHELl" class="headerlink" title="SHELl"></a>SHELl</h2><h2 id="思想类书籍"><a href="#思想类书籍" class="headerlink" title="思想类书籍"></a>思想类书籍</h2><ul>
<li><input disabled="" type="checkbox"> 正义论 (哈佛大学教授约翰·罗尔斯)</li>
<li><input disabled="" type="checkbox"> 马克思恩格斯全集</li>
</ul>
<h2 id="古籍"><a href="#古籍" class="headerlink" title="古籍"></a>古籍</h2><h2 id="iOS-1"><a href="#iOS-1" class="headerlink" title="iOS"></a>iOS</h2><ul>
<li><a href="http://www.macosforge.org/">osXApp源码</a></li>
<li><a href="https://www.macports.org/install.php">https://www.macports.org/install.php</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Phicomm K2P A1</title>
    <url>/2018/04/13/%E8%B7%AF%E7%94%B1%E5%99%A8-K2P/</url>
    <content><![CDATA[<h1 id="Phicomm-K2P-A1"><a href="#Phicomm-K2P-A1" class="headerlink" title="Phicomm K2P A1"></a>Phicomm K2P A1</h1><hr>
<h2 id="硬件参数"><a href="#硬件参数" class="headerlink" title="硬件参数"></a>硬件参数</h2><ul>
<li>CPU MT7621A&#x2F;N</li>
</ul>
<h2 id="CPU-MT7621A-N"><a href="#CPU-MT7621A-N" class="headerlink" title="CPU MT7621A&#x2F;N"></a>CPU MT7621A&#x2F;N</h2><h3 id="Specifications"><a href="#Specifications" class="headerlink" title="Specifications"></a>Specifications</h3><h4 id="CPU-GPU"><a href="#CPU-GPU" class="headerlink" title="CPU &amp; GPU"></a>CPU &amp; GPU</h4><ul>
<li>CPU Type: MIPS1004Kc</li>
<li>CPU Bit:32-bit</li>
<li>CPU Core:	Dual (2)</li>
<li>CPU Frequency:880MHz</li>
</ul>
<h4 id="Connectivity"><a href="#Connectivity" class="headerlink" title="Connectivity"></a>Connectivity</h4><ul>
<li>Ethernet:5 port Fast Ethernet Switch + RGMII</li>
<li>PCI-Express:Host(3)</li>
<li>USB:USB 3.0 (1), USB 2.0 (1)</li>
<li>I&#x2F;O:GPIO,  I2C,  JTAG,  MDC,  MDIO,  UART(3)</li>
</ul>
<h4 id="Hardware-Features"><a href="#Hardware-Features" class="headerlink" title="Hardware Features"></a>Hardware Features</h4><ul>
<li>Network Accelerator:2Gbps IPv4&#x2F;6 routing,  NAT,  NAPT+HQoS</li>
<li>DRAM:16b DDR2,  16b DDR3</li>
<li>Flash:SPI,  SLC NAND</li>
<li>Storage Accelerator:Yes</li>
<li>Audio Interface:I2S,  PCM,  S&#x2F;PDIF</li>
</ul>
<h4 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h4><ul>
<li>Crypto:		200Mbps Crypto Suite</li>
<li>iNIC:		Linux 2.4&#x2F;2.6 (RGMII)</li>
<li>OS:			Linux 2.6.36 SDK,  Linux 3.10 SDK,  OpenWRT</li>
</ul>
<h4 id="Bundled-Platform"><a href="#Bundled-Platform" class="headerlink" title="Bundled Platform"></a>Bundled Platform</h4><ul>
<li>MT7621A:embedded 5p GbE Switch</li>
<li>MT7621N:no 5p GbE Switch</li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://openwrt.org/toh/phicomm/phicomm_k2p">https://openwrt.org/toh/phicomm/phicomm_k2p</a></p>
]]></content>
  </entry>
  <entry>
    <title>phicomm K3</title>
    <url>/2018/04/13/%E8%B7%AF%E7%94%B1%E5%99%A8-K3/</url>
    <content><![CDATA[<p><a href="https://openwrt.org/toh/phicomm/phicomm_k3_a1">https://openwrt.org/toh/phicomm/phicomm_k3_a1</a></p>
<h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 上传文件</span><br><span class="line">scp /本地file [user@local:] setFilePath</span><br><span class="line"># 找到 linux 位置 mtd3/mtd2 我之前是mtd2 刷完梅林会变mtd3</span><br><span class="line">cat /proc/mtd</span><br><span class="line"># mtdblock3 对应mtd3 mtdblock2 对应mtd2</span><br><span class="line">cat /tmp/K3.bin &gt;/dev/mtdblock3 &amp;&amp; reboot</span><br><span class="line"></span><br><span class="line">报错:Segmentation fault </span><br><span class="line">#不用管它 等待5分钟后 将设备重启</span><br><span class="line"></span><br><span class="line">#LEDE Open互刷使用</span><br><span class="line">mtd -r write /tmp/k3.bin firmware</span><br></pre></td></tr></table></figure>


<ul>
<li><a href="https://tbvv.net/posts/0101-k3.html#%E7%89%88%E6%9C%AC%E4%BA%92%E5%88%B7%EF%BC%9A">K3.bin</a></li>
</ul>
<h2 id="TTL-刷机"><a href="#TTL-刷机" class="headerlink" title="TTL 刷机"></a>TTL 刷机</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen /dev/tty.usbserial-14710 115200</span><br><span class="line"># 设置ip</span><br><span class="line">ifconfig -addr=192.168.2.1 -mask=255.255.255.0 </span><br><span class="line"># tftp</span><br><span class="line">sudo launchctl start com.apple.tftpd</span><br><span class="line">sudo chmod 777  /private/tftpboot</span><br><span class="line"># 将 k3.bin 放入 /private/tftpboot</span><br><span class="line">cp k3.bin /private/tftpboot/k3.bin </span><br><span class="line"></span><br><span class="line"># 设置本机地址 192.168.2.2/24</span><br><span class="line"></span><br><span class="line"># 刷机</span><br><span class="line">show devices</span><br><span class="line"></span><br><span class="line">flash -noheader 192.168.1.2:k3.bin nflash0.trx</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Open WRT Make Help Doc</title>
    <url>/2018/10/18/%E8%B7%AF%E7%94%B1%E5%99%A8-OpenWRTmakeHelp/</url>
    <content><![CDATA[<p><img src="/include/logo.png" alt="OpenWrt logo"></p>
<p>OpenWrt Project is a Linux operating system targeting embedded devices. Instead<br>of trying to create a single, static firmware, OpenWrt provides a fully<br>writable filesystem with package management. This frees you from the<br>application selection and configuration provided by the vendor and allows you<br>to customize the device through the use of packages to suit any application.<br>For developers, OpenWrt is the framework to build an application without having<br>to build a complete firmware around it; for users this means the ability for<br>full customization, to use the device in ways never envisioned.</p>
<p>Sunshine!</p>
<h2 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h2><p>To build your own firmware you need a GNU&#x2F;Linux, BSD or MacOSX system (case<br>sensitive filesystem required). Cygwin is unsupported because of the lack of a<br>case sensitive file system.</p>
<h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><p>You need the following tools to compile OpenWrt, the package names vary between<br>distributions. A complete list with distribution specific packages is found in<br>the <a href="https://openwrt.org/docs/guide-developer/build-system/install-buildsystem">Build System Setup</a><br>documentation.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">binutils bzip2 diff find flex gawk gcc-6+ getopt grep install libc-dev libz-dev</span><br><span class="line">make4.1+ perl python3.6+ rsync subversion unzip which</span><br></pre></td></tr></table></figure>

<h3 id="Quickstart"><a href="#Quickstart" class="headerlink" title="Quickstart"></a>Quickstart</h3><ol>
<li><p>Run <code>./scripts/feeds update -a</code> to obtain all the latest package definitions<br>defined in feeds.conf &#x2F; feeds.conf.default</p>
</li>
<li><p>Run <code>./scripts/feeds install -a</code> to install symlinks for all obtained<br>packages into package&#x2F;feeds&#x2F;</p>
</li>
<li><p>Run <code>make menuconfig</code> to select your preferred configuration for the<br>toolchain, target system &amp; firmware packages.</p>
</li>
<li><p>Run <code>make</code> to build your firmware. This will download all sources, build the<br>cross-compile toolchain and then cross-compile the GNU&#x2F;Linux kernel &amp; all chosen<br>applications for your target system.</p>
</li>
</ol>
<h3 id="Related-Repositories"><a href="#Related-Repositories" class="headerlink" title="Related Repositories"></a>Related Repositories</h3><p>The main repository uses multiple sub-repositories to manage packages of<br>different categories. All packages are installed via the OpenWrt package<br>manager called <code>opkg</code>. If you’re looking to develop the web interface or port<br>packages to OpenWrt, please find the fitting repository below.</p>
<ul>
<li><p><a href="https://github.com/openwrt/luci">LuCI Web Interface</a>: Modern and modular<br>interface to control the device via a web browser.</p>
</li>
<li><p><a href="https://github.com/openwrt/packages">OpenWrt Packages</a>: Community repository<br>of ported packages.</p>
</li>
<li><p><a href="https://github.com/openwrt/routing">OpenWrt Routing</a>: Packages specifically<br>focused on (mesh) routing.</p>
</li>
<li><p><a href="https://github.com/openwrt/video">OpenWrt Video</a>: Packages specifically<br>focused on display servers and clients (Xorg and Wayland).</p>
</li>
</ul>
<h2 id="Support-Information"><a href="#Support-Information" class="headerlink" title="Support Information"></a>Support Information</h2><p>For a list of supported devices see the <a href="https://openwrt.org/supported_devices">OpenWrt Hardware Database</a></p>
<h3 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h3><ul>
<li><a href="https://openwrt.org/docs/guide-quick-start/start">Quick Start Guide</a></li>
<li><a href="https://openwrt.org/docs/guide-user/start">User Guide</a></li>
<li><a href="https://openwrt.org/docs/guide-developer/start">Developer Documentation</a></li>
<li><a href="https://openwrt.org/docs/techref/start">Technical Reference</a></li>
</ul>
<h3 id="Support-Community"><a href="#Support-Community" class="headerlink" title="Support Community"></a>Support Community</h3><ul>
<li><a href="https://forum.openwrt.org/">Forum</a>: For usage, projects, discussions and hardware advise.</li>
<li><a href="https://webchat.oftc.net/#openwrt">Support Chat</a>: Channel <code>#openwrt</code> on <strong>oftc.net</strong>.</li>
</ul>
<h3 id="Developer-Community"><a href="#Developer-Community" class="headerlink" title="Developer Community"></a>Developer Community</h3><ul>
<li><a href="https://bugs.openwrt.org/">Bug Reports</a>: Report bugs in OpenWrt</li>
<li><a href="https://lists.openwrt.org/mailman/listinfo/openwrt-devel">Dev Mailing List</a>: Send patches</li>
<li><a href="https://webchat.oftc.net/#openwrt-devel">Dev Chat</a>: Channel <code>#openwrt-devel</code> on <strong>oftc.net</strong>.</li>
</ul>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>OpenWrt is licensed under GPL-2.0</p>
]]></content>
  </entry>
  <entry>
    <title>Ubuntu 玩转openwrt(LEDE)</title>
    <url>/2017/08/14/%E8%B7%AF%E7%94%B1%E5%99%A8-openwrt/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line"><span class="comment">#sudo apt upgrade -y #建议更新到最新</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo apt install build-essential ccache ecj fastjar file g++ gawk \</span><br><span class="line">gettext git java-propose-classpath libelf-dev libncurses5-dev \</span><br><span class="line">libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \</span><br><span class="line">python3-distutils python3-setuptools python3-dev rsync subversion \</span><br><span class="line">swig time xsltproc zlib1g-dev  -y</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment">#git clone git@github.com:openwrt/openwrt.git</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/openwrt/openwrt.git</span><br><span class="line">git pull</span><br><span class="line"><span class="comment">#git checkout lede-17.01 #LEDE</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="编译前工作"><a href="#编译前工作" class="headerlink" title="编译前工作"></a>编译前工作</h2><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 生成配置文件 使用按键 Y M N</span><br><span class="line"># Y    &lt;*&gt;		编译并放入固件 </span><br><span class="line"># M    &lt;M&gt;		编译后不进入固件,放在buildsystem下</span><br><span class="line"># N    &lt; &gt;		排除</span><br><span class="line">make menuconfig </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="提前下载软件包及编译工具"><a href="#提前下载软件包及编译工具" class="headerlink" title="提前下载软件包及编译工具"></a>提前下载软件包及编译工具</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./scripts/feeds update -a &amp;&amp; ./scripts/feeds install -a</span><br></pre></td></tr></table></figure>

<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># make 显示详情 V=99  </span></span><br><span class="line"><span class="comment"># make 用几个核心 -j 1|2|4...</span></span><br><span class="line"><span class="comment">#预下载包</span></span><br><span class="line">make download V=s</span><br><span class="line">make V=99</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="编译完成"><a href="#编译完成" class="headerlink" title="编译完成"></a>编译完成</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">build_dir用于解压缩所有源档案并编译它们。</span><br><span class="line">staging_dir用于将所有已编译的程序“安装”到其中，准备用于构建更多包或准备固件映像。</span><br><span class="line"></span><br><span class="line">编译完成固件位于 bin文件夹下</span><br><span class="line"></span><br><span class="line"># 清空  已经编译的固件 软件包</span><br><span class="line">make clean</span><br><span class="line"># 清空 已经编译的固件 软件包 交叉编译工具</span><br><span class="line">make dirclean</span><br><span class="line"># 完全清空(初始化)</span><br><span class="line"> make distclean</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="由于中断操作导致二次编译不通过报toptool错误"><a href="#由于中断操作导致二次编译不通过报toptool错误" class="headerlink" title="由于中断操作导致二次编译不通过报toptool错误"></a>由于中断操作导致二次编译不通过报toptool错误</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># make -j1 V=s</span></span><br><span class="line"><span class="comment">#删除预编译包</span></span><br><span class="line"><span class="built_in">rm</span> -rf ./build_dir</span><br><span class="line"></span><br><span class="line">make clean</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://github.com/Lienol/openwrt-packages">Lienol Packages 地址</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>How to use macOS build OpenWRT</title>
    <url>/2019/10/13/%E8%B7%AF%E7%94%B1%E5%99%A8-openwrtBuidWithMacOS/</url>
    <content><![CDATA[<h2 id="准备容器"><a href="#准备容器" class="headerlink" title="准备容器"></a>准备容器</h2><p><code>注意:这一步并非必要的,比如我就是整个系统都是识别大小写的,所以新建一个文件夹即可</code></p>
<p><strong>更好的实现是,我在自己的服务器(PVE)创建了一个专门进行编译的ubuntu,这样编译不占用本地性能</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建一个识别大小写的盘</span></span><br><span class="line">hdiutil create -size 20g -type SPARSE -fs &quot;Case-sensitive HFS+&quot; -volname OpenWRT OpenWRT.sparseimage</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">挂载镜像</span></span><br><span class="line">hdiutil attach OpenWRT.sparseimage</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><figcaption><span>GUI * 未验证是否能够成功</span></figcaption><table><tr><td class="code"><pre><span class="line">磁盘工具 添加卷宗 选择大小20GB 保留20GB 选择 APFS(区分大小写)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /Volumes/OpenWRT</span><br></pre></td></tr></table></figure>
<p>使用Brew安装需要的包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install coreutils findutils gawk grep gnu-getopt gnu-tar wget diffutils git-extras quilt make ncurses pkg-config --verbose</span><br></pre></td></tr></table></figure>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>For x86_64 Apple hardware:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PATH=&quot;/usr/local/opt/gnu-getopt/bin:$PATH&quot;</span><br><span class="line">PATH=&quot;/usr/local/opt/make/libexec/gnubin:$PATH&quot;</span><br><span class="line">PATH=&quot;/usr/local/opt/gettext/bin:$PATH&quot;</span><br><span class="line">PATH=&quot;/usr/local/opt/coreutils/bin:$PATH&quot;</span><br><span class="line">PATH=&quot;/usr/local/opt/findutils/libexec/gnubin:$PATH&quot;</span><br><span class="line">export PATH</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注释掉的变量反正我是没用到过</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> PATH=<span class="string">&quot;/usr/local/opt/grep/libexec/gnubin:<span class="variable">$PATH</span>&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">PATH=<span class="string">&quot;/usr/local/opt/gnu-tar/libexec/gnubin:<span class="variable">$PATH</span>&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">PATH=<span class="string">&quot;/usr/local/opt/gnu-sed/libexec/gnubin:<span class="variable">$PATH</span>&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>For arm64 (Apple Silicon(M1)) Apple hardware:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PATH=&quot;/opt/homebrew/opt/make/libexec/gnubin:$PATH&quot;</span><br><span class="line">PATH=&quot;/opt/homebrew/opt/gnu-getopt/bin:$PATH&quot;</span><br><span class="line">PATH=&quot;/opt/homebrew/opt/gettext/bin:$PATH&quot;</span><br><span class="line">PATH=&quot;/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH&quot;</span><br><span class="line">PATH=&quot;/opt/homebrew/opt/findutils/libexec/gnubin:$PATH&quot;</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Build前使用</span></span><br><span class="line">source /Volumes/OpenWRT/env.sh</span><br></pre></td></tr></table></figure>

<p>或者运行一下命令行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://blog.songkunda.cn/files/路由器/doENV.sh)</span>&quot;</span></span></span><br><span class="line">/bin/bash -c &quot;$(curl -fsSL https://blog.songkunda.cn/files/%E8%B7%AF%E7%94%B1%E5%99%A8/doENV.sh)&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="准备物料"><a href="#准备物料" class="headerlink" title="准备物料"></a>准备物料</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /Volumes/OpenWRT</span><br><span class="line">git clone https://github.com/openwrt/openwrt.git</span><br><span class="line">cd openwrt</span><br><span class="line">git pull</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新 所有feeds到最新</span></span><br><span class="line"></span><br><span class="line">./scripts/feeds update -a</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载所有menuconfig 需要的feeds</span> </span><br><span class="line">./scripts/feeds install &lt;package_name&gt;</span><br><span class="line">./scripts/feeds install -a</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如需其他版本</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">git branch -a</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">git tag</span></span><br></pre></td></tr></table></figure>

<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 检查环境</span><br><span class="line">make defconfig  download clean world</span><br><span class="line"></span><br><span class="line"># 配置软件镜像及内核</span><br><span class="line">make menuconfig</span><br><span class="line">make kernel_menuconfig</span><br><span class="line"># 制作自己的配置文件(diffconfig)</span><br><span class="line">./scripts/diffconfig.sh &gt; K3.config</span><br><span class="line"></span><br><span class="line"># 编译软件镜像</span><br><span class="line"># make -j $(nproc)  V=99 </span><br><span class="line"># verbose 在后面添加&quot; V=99 &quot;</span><br><span class="line">make -j $(nproc) </span><br></pre></td></tr></table></figure>


<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h4 id="make-报错"><a href="#make-报错" class="headerlink" title="make 报错"></a>make 报错</h4><p>&#x2F;Volumes&#x2F;OpenWrt&#x2F;openwrt&#x2F;include&#x2F;toplevel.mk:29: *** Please use a newer version of GNU make. The version shipped by Apple is not supported.  Stop.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh /Volumes/OpenWRT/doENV.sh</span><br><span class="line"># 如果你已经运行过上面命令 只需要再source就行了</span><br><span class="line">source /Volumes/OpenWrt/env.sh</span><br></pre></td></tr></table></figure>

<h4 id="menuconfig没有找到"><a href="#menuconfig没有找到" class="headerlink" title="menuconfig没有找到"></a>menuconfig没有找到</h4><p>make: *** No rule to make target ‘menuconfig’.  Stop.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">你可能没有在源码目录上</span></span><br><span class="line">cd /Volumes/OpenWRT/openwrt</span><br><span class="line">make menuconfig</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="Failed-to-install-stub"><a href="#Failed-to-install-stub" class="headerlink" title="Failed to install stub"></a>Failed to install stub</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Checking &#x27;ldconfig-stub&#x27;... failed.</span><br><span class="line"></span><br><span class="line">Build dependency: Failed to install stub</span><br><span class="line"></span><br><span class="line">Prerequisite check failed. Use FORCE=1 to override.</span><br><span class="line">gmake: *** [/Volumes/OpenWrt/openwrt/include/toplevel.mk:180: staging_dir/host/.prereq-build] Error 1</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>解决办法:</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf ./feeds</span><br><span class="line">rm -rf ./staging_dir </span><br><span class="line">rm -rf ./tmp </span><br><span class="line">./scripts/feeds clean -f</span><br></pre></td></tr></table></figure>

<h4 id="luci-fatal-过早的文件结束符（EOF）"><a href="#luci-fatal-过早的文件结束符（EOF）" class="headerlink" title="luci fatal: 过早的文件结束符（EOF）"></a>luci fatal: 过早的文件结束符（EOF）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Updating feed &#x27;luci&#x27; from &#x27;https://git.openwrt.org/project/luci.git;openwrt-21.02&#x27; ...</span><br><span class="line">正克隆到 &#x27;./feeds/luci&#x27;...</span><br><span class="line">remote: Enumerating objects: 8917, done.</span><br><span class="line">remote: Counting objects: 100% (8917/8917), done.</span><br><span class="line">remote: Compressing objects: 100% (4380/4380), done.</span><br><span class="line">error: RPC 失败。curl 18 transfer closed with outstanding read data remaining</span><br><span class="line">fetch-pack: unexpected disconnect while reading sideband packet</span><br><span class="line">fatal: 过早的文件结束符（EOF）</span><br><span class="line">fatal: fetch-pack：无效的 index-pack 输出</span><br><span class="line">failed.</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>解决方法</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd  ./feeds</span><br><span class="line">git clone git://git.openwrt.org/project/luci.git -j 4 -b openwrt-21.02  -v --depth 1</span><br><span class="line">#正克隆到 &#x27;luci&#x27;...</span><br><span class="line">#查找 git.openwrt.org ...完成。</span><br><span class="line">#连接到 git.openwrt.org（端口 9418）... 46.101.214.210 完成。</span><br><span class="line">#remote: Enumerating objects: 8917, done.</span><br><span class="line">#remote: Counting objects: 100% (8917/8917), done.</span><br><span class="line">#remote: Compressing objects: 100% (4380/4380), done.</span><br><span class="line">#remote: Total 8917 (delta 2897), reused 6031 (delta 712), pack-reused 0</span><br><span class="line">#接收对象中: 100% (8917/8917), 7.50 MiB | 18.00 KiB/s, 完成.</span><br><span class="line">#处理 delta 中: 100% (2897/2897), 完成.</span><br><span class="line">#正在更新文件: 100% (4474/4474), 完成.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 完成后 运行命令让他重建luci.index  package info 和 target info</span><br><span class="line">#Updating feed &#x27;luci&#x27; from &#x27;https://git.openwrt.org/project/luci.git;openwrt-21.02&#x27; ...</span><br><span class="line">#已经是最新的。</span><br><span class="line">#Create index file &#x27;./feeds/luci.index&#x27; </span><br><span class="line">#Collecting package info: done</span><br><span class="line">#Collecting target info: done</span><br><span class="line">./scripts/feeds update luci -a</span><br><span class="line"></span><br><span class="line">## 注意 以下安装命令要运行2次 第一次 会有部分依赖luci的缺失 第二次正常安装</span><br><span class="line">./scripts/feeds install -a</span><br></pre></td></tr></table></figure>

<h4 id="编译后固件位置"><a href="#编译后固件位置" class="headerlink" title="编译后固件位置"></a>编译后固件位置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/bcm53xx/xxx-squashfs-sysupgrade.bin</span><br><span class="line">bin/bcm53xx/xxx-squashfs-sysupgrade.bin</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Fuck Mou</title>
    <url>/2015/09/10/apps-Mou-fuckMou/</url>
    <content><![CDATA[<p>延期半年了,看起来罗晨是做出不来了,跳票3次了还不退钱,可惜了99$.</p>
<p><a href="http://www.indiegogo.com/projects/mou-1-0-markdown-editor-on-os-x-for-you">众筹网页</a></p>
]]></content>
  </entry>
  <entry>
    <title>Mou</title>
    <url>/2012/05/05/apps-Mou-mou/</url>
    <content><![CDATA[<p>Mou这个软件写markdown 比Ulysses好用,主要是对国人友好.<br><a href="http://mouapp.com/">下载地址</a></p>
]]></content>
  </entry>
  <entry>
    <title>修复Hexo NexT theme 无法加载</title>
    <url>/2022/01/13/apps-hexo-fix-dark-mode/</url>
    <content><![CDATA[<h1 id="Hexo-NexT-Theme-无法显示博客内容"><a href="#Hexo-NexT-Theme-无法显示博客内容" class="headerlink" title="Hexo NexT Theme 无法显示博客内容"></a>Hexo NexT Theme 无法显示博客内容</h1><p>初次发现是是在21年底jsDelivr 因SSL证书过期问题无法访问,最近发现SSl证书已经更新但家里网络不科学依然无法访问<br>随查到是备案问题被拒绝访问了.</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>方案一: 切换next的cdn源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在_config.next.yml 文件中添加如下字段(切换到unpkg)</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 切换cdn 默认 jsDelivr</span></span></span><br><span class="line">vendor:</span><br><span class="line">  plugins : unpkg</span><br></pre></td></tr></table></figure>

<p>方案二: 仅使用了darkmode的next</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在_config.next.yml  修改</span></span><br><span class="line">darkmode_js:</span><br><span class="line">  libUrl: https://unpkg.com/darkmode-js@1.5.7/lib/darkmode-js.min.js </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>NexT</tag>
        <tag>darkmode</tag>
      </tags>
  </entry>
  <entry>
    <title>RA2</title>
    <url>/1999/12/31/bak-2000-RA2/</url>
    <content><![CDATA[<p>RA2: 222V-D252-2N22-8D9N</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
      <tags>
        <tag>CDK</tag>
      </tags>
  </entry>
  <entry>
    <title>Win95</title>
    <url>/1999/12/31/bak-2000-Win95/</url>
    <content><![CDATA[<p>插入软盘 进入界面显示Microsoft Windows 62 Setup ,摁ENTER 2次,<br>等屏幕出现 Boot Disk is in drive A 再次摁 ENTER,等完成后插入第二张,等一会再摁ENTER,等完成,在插入第三张盘,点击 继续,等到出现许可协议点是 一直点 下一步到产品标识输入包装上的KEY ,然后再一直下一步,把编号24放入软驱,直到提示插入磁盘 然后根据编号放进去直到编号23,然后一直下一步,点击确定,等待重启 输入口令的地方点取消</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>CS1.5</title>
    <url>/2000/12/31/bak-2001-%E5%8D%8A%E6%9D%A1%E5%91%BD/</url>
    <content><![CDATA[<p>cdkey: 3333333333333</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
      <tags>
        <tag>CDK</tag>
      </tags>
  </entry>
  <entry>
    <title>做一颗网线</title>
    <url>/2002/02/08/bak-2002-2002-2-9-%E5%81%9A%E4%B8%80%E9%A2%97%E7%BD%91%E7%BA%BF/</url>
    <content><![CDATA[<p>怎么弄一颗网线<br>第一步 将线的两端的四颗线整理出来<br>第二部 把四颗线插入头里面 要注意把线插进有统片的里面<br>第三部 看看两个头的颜色顺序是不是一样<br>最后 用钳子把头夹紧 把网线插交换机上 使用拨号上网看看能不能上网</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>E语言下载</title>
    <url>/2005/08/24/bak-2005-e/</url>
    <content><![CDATA[<p>一、下载2.53<br><a href="http://www.dywt.com.cn/download/echs_ins.exe">http://www.dywt.com.cn/download/echs_ins.exe</a><br>二、基础信息<br>_启动窗口 &#x3D; MDI窗体  main Form<br>子程序集 &#x3D; function<br>常量表 &#x3D; #define<br>全局变量 &#x3D; Public<br>局部变量 &#x3D; Dim<br>自定义数据类型 &#x3D; type<br>资源表 &#x3D; files<br>程序数据 包含 程序集,全局变量,自定义数据类型,dll命令,窗口,常量表,资源表<br>三、命令</p>
<p>注意事项:<br>1.出现无法输入 不弹代码提示?<br>Ctrl+S 保存 退出程序.重新开启程序,如果还不行 摁住Shift 右键打开程序知道进入界面(清空程序设置)</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>website</title>
    <url>/2004/12/31/bak-2005-website/</url>
    <content><![CDATA[<p>听歌<br><a href="http://www.pc6.com/softview/SoftView_312.html">http://www.pc6.com/softview/SoftView_312.html</a></p>
<p>易语言 <a href="http://www.dywt.com.cn/">www.dywt.com.cn</a></p>
<p><a href="http://www.ztgame.com/download">http://www.ztgame.com/download</a></p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>website</title>
    <url>/2005/09/30/bak-2005-xiaoshuo/</url>
    <content><![CDATA[<p>0x1:<br>金麟岂是池中物.txt 文件太大 如何截取<br>读取文件  100*1000 bit 截取,分为 48个文件</p>
<p>0x2:<br>文件的开头和结尾出现乱码,查询资料是因为汉字占8字位,改为:<br>读取文件  100*1024 bit 截取,分为 48个文件</p>
<p>0x3:<br>文件可能切断句子 所以在每个字节前查找句号.</p>
<p>定义变量名:out<br>类型:整数型<br>数组:0</p>
<p>定义变量名: 文件名<br>类型:  文本型<br>文件名 &#x3D; “金麟岂是池中物.txt”</p>
<p>FSO.创建 (“Scripting.FileSystemObject”, )<br>文本 ＝ FSO.对象型方法 (“GetFile”,文件名 )<br>文本长度 &#x3D; GetFile.读数值属性 (“Size”, )<br>循环首(out.最后 +102400 &lt; 文本长度)<br>写到文件(输出文件名+out.长度+”.txt”,到字节集(文本.取文本(out.最后,out.最后 + 102400)))<br>循环尾;</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>website</title>
    <url>/2005/12/31/bak-2006-website/</url>
    <content><![CDATA[<p>sf999.com<br>52345.com<br>听歌</p>
<p>kuwo.cn<br>玄殿社区 <a href="http://www.xdjz.net/">http://www.xdjz.net/</a></p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>AMD 8300 超频</title>
    <url>/2008/11/22/bak-2008-2008-11-23-AMD-8300/</url>
    <content><![CDATA[<p>AMD 8300 超频</p>
<p>技嘉970A 进入BIOS MIT</p>
<p>CPU Frequency &#x3D;  4.20GHz<br>CPB Ratio &#x3D; 42.00</p>
<p>机型侧盖不要盖.</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>文件版本控制(SVN)</title>
    <url>/2008/09/30/bak-2008-subversion/</url>
    <content><![CDATA[<p>2008&#x2F;10&#x2F;01<br>文件版本控制</p>
<p>下载地址: <a href="http://subversion.tigris.org/downloads/subversion-1.5.2.zip">http://subversion.tigris.org/downloads/subversion-1.5.2.zip</a><br>GUI TortoiseSVN: <a href="http://tortoisesvn.net/downloads/1.4.5">http://tortoisesvn.net/downloads/1.4.5</a><br>官网:<br><a href="http://subversion.tigris.org/">http://subversion.tigris.org/</a><br><a href="http://svn.collab.net/">http://svn.collab.net</a></p>
<p>常用命令:<br>1:<br>    svn checkout svn项目地址(<a href="http://192.168.1.240:9834/repos">http://192.168.1.240:9834/repos</a> | file:&#x2F;&#x2F;&#x2F;var&#x2F;svn&#x2F;repos)<br>    * 使用rsa 使用前缀 svn+ssh:&#x2F;&#x2F;<br>    * svn list</p>
<p>2:<br>    svn commit [files] -m “做了什么”<br>    commit 之前需要 update File ‘&#x2F;sandwich.txt’ is out of date<br>3: </p>
<pre><code>svn update
svn update -r BASE item (丢弃修改)
svn status ? 没加入 A 新增 C 已修改并且add D 删除 M 已修改未add

svn mkdir [dir name]
svn add [dir name] (需要先mkdir)
svn copy [from] [to]
svn delete
svn move

svn diff -r(-c) [time1:time2] file &gt; patchfile
svn resolve

svn log -r [[time1:time2]]|file |http://192.168.1.240/svn/trunk/todolist]
svn revert 
svn lock/unlock 手动限定只可以锁自己的文件 避免锁冲突

svnadmin create newrepos
</code></pre>
<p>注意事项:<br> svn项目一定要copy到局域网svn服务器,在使用本机去chekout,否则 每次chekout 都会下载新的文件占用网速过多</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>website</title>
    <url>/2007/12/31/bak-2008-website/</url>
    <content><![CDATA[<p><a href="http://www.ebaio.com/">www.ebaio.com</a><br>52pojie.cn</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>2010 MacBook Pro 超频</title>
    <url>/2010/10/03/bak-2010-2010-10-4-MacBook-Pro/</url>
    <content><![CDATA[<p>2010 MacBook Pro</p>
<ul>
<li>参数 </li>
<li>15.4寸</li>
<li>Intel Core 2 Duo 2.66 i7</li>
<li>8G 1066 MHz DDR3</li>
<li>NVIDIA GeForce GT 330M 512MB</li>
<li>500GB 5400</li>
<li>Mac OS X 10.6.4</li>
</ul>
<p>需要先使用istatmenus 3.03 将风扇调到最高,否则黑屏</p>
<p>#import &lt;Foundation&#x2F;Foundation.h&gt;<br>#import <sstream><br>#import <vector></p>
<p>io_connect_t con ;<br>typedef struct {<br>UInt32 action;<br>UInt32 msr;<br>UInt64 param;<br>} ioStruct;</p>
<p>inout inputStruct;<br>inout outputStruct;</p>
<p>inputStruct-&gt;action &#x3D; 1;<br>inputStruct-&gt;param &#x3D; 330</p>
<p>IOConnectCallStructMethod(con,<br>0,<br>&amp;inputStruct,<br>sizeof(inputStruct),<br>&amp;outputStruct,<br>sizeof(outputStruct)<br>);</p>
<p>参考自:<a href="http://www.tanhao.me/pieces/1547.html">http://www.tanhao.me/pieces/1547.html</a></p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>iphone4s</title>
    <url>/2010/07/15/bak-2010-2010-7-16-iphone4s/</url>
    <content><![CDATA[<p>iPhone4S </p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>32G 800万像素 iOS5.0</p>
<h1 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h1><ul>
<li>价格 2000+5000(渠道费用,美版) &#x3D; 7000</li>
</ul>
<p>帮代购</p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>sqlite</title>
    <url>/2010/10/04/bak-2010-sqlite/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>Homebrew</title>
    <url>/2011/03/15/bak-2011-Homebrew/</url>
    <content><![CDATA[<p>##简介<br>突然发现这个 Max Howell 用Ruby写的好东西,Mac上安装东西太费劲了,这个用着就很舒服.</p>
<p><a href="http://mxcl.dev/">Max Howell 博客</a><br><a href="http://github.com/mxcl/">Max Howell 代码地址</a></p>
<p>##官网</p>
<p><a href="http://wiki.github.com/mxcl/homebrew">http://wiki.github.com/mxcl/homebrew</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">首先要安装Xcode Tools Line</span></span><br><span class="line">xcode-select --install</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装 /usr/local</span></span><br><span class="line">cd /usr/local</span><br><span class="line">mkdir homebrew</span><br><span class="line">curl -LsSf https://github.com/mxcl/homebrew/tarball/master | sudo /usr/bin/tar xvz -C/usr/local --strip 1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用</span></span><br><span class="line">brew search</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MacTools</category>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>联通封了80端口</title>
    <url>/2013/06/04/bak-2013-80/</url>
    <content><![CDATA[<p>昨天发现自己的网址打不开了,问了身边人才知道是昨天80端口被封了,用8080吧<br><a href="http://www.songkunda.com:8080/">www.songkunda.com:8080</a></p>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>site</title>
    <url>/2013/02/09/bak-2013-site/</url>
    <content><![CDATA[<ul>
<li>[Obj-C] <a href="http://www.objc.io/">www.objc.io</a></li>
</ul>
]]></content>
      <categories>
        <category>bak</category>
      </categories>
  </entry>
  <entry>
    <title>LoLBot 脚本编写教程</title>
    <url>/2012/06/11/bak-2014-2014-4-12-leaguebot/</url>
    <content><![CDATA[<p>LoLBot 脚本解析</p>
<p><a href="http://botoflegends.com/forum/">http://botoflegends.com/forum/</a></p>
]]></content>
  </entry>
  <entry>
    <title>BBB(狗板)开发板做SNES</title>
    <url>/2013/11/16/bak-2014-beagleboard/</url>
    <content><![CDATA[<h2 id="需要物品"><a href="#需要物品" class="headerlink" title="需要物品"></a>需要物品</h2><ul>
<li>BBB Black</li>
<li>小霸王手柄</li>
</ul>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>ttl(r232) 排序<br>从J1端开始数1-6, 1 &#x3D; GND,4 &#x3D; RxD ,5 &#x3D; TxD</p>
<h3 id="如何获取"><a href="#如何获取" class="headerlink" title="如何获取"></a>如何获取</h3><ol>
<li>官网购买(不建议,贵,1000多快)</li>
<li>flightradar24 免费薅取(注意,在为刷机前不要连接网络,中国禁止未注册的设备将信号发送至国外,注册后等邮件发送至UPS代收仓库转发回来大约60块钱)</li>
</ol>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="http://beagleboard.org/getting-started">狗板</a></li>
<li><a href="http://beagleboard.org/latest-images">Debian下载地址</a></li>
<li><a href="http://github.com/beagleboard/beaglebone-black/wiki">wiki</a></li>
<li><a href="https://elinux.org/Beagleboard:Super_Nintendo_(SNES)_on_Beagle_Bone_Black">SNES</a></li>
<li><a href="http://beaglesnes.sourceforge.net/BeagleSNES_Guide.pdf">BeagleSNES_Guide.pdf</a></li>
</ul>
]]></content>
      <tags>
        <tag>开发板</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2015/01/04/bak-2015-2015-1-5-github/</url>
    <content><![CDATA[<p>####为什么使用github pages?</p>
<ul>
<li>自从天津13年封禁80端口后,使用阿里云作为服务器,服务器到期后才使用github pages.(原先花钱现在免费)</li>
</ul>
<h4 id="2015-8-15-更新"><a href="#2015-8-15-更新" class="headerlink" title="2015&#x2F;8&#x2F;15 更新"></a>2015&#x2F;8&#x2F;15 更新</h4><ul>
<li>原 <a href="http://www.songkunda.com/">http://www.songkunda.com</a> 续费太贵了(万网续费 230一年&#x2F;2760 十年,原先才8块钱一年) 改为了 <a href="http://blog.songkunda.cn/">http://blog.songkunda.cn</a> (380十年) 和 <a href="http://songkunda.github.io/">http://songkunda.github.io</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Clutch</title>
    <url>/2015/12/27/cracker-ios-Clutch/</url>
    <content><![CDATA[<h1 id="Clutch"><a href="#Clutch" class="headerlink" title="Clutch"></a>Clutch</h1>]]></content>
  </entry>
  <entry>
    <title>frida</title>
    <url>/2015/12/27/cracker-ios-Frida/</url>
    <content><![CDATA[<p>##简介</p>
<ul>
<li><p><a href="https://frida.re/">frida 主站</a></p>
</li>
<li><p><a href="https://github.com/AloneMonkey/frida-ios-dump">dump 脚本</a></p>
</li>
<li><p>越狱设备需要安装frida</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cydia 增加源:https://build.frida.re</span><br><span class="line">安装 frida</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="列出安装的所有App"><a href="#列出安装的所有App" class="headerlink" title="列出安装的所有App"></a>列出安装的所有App</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida-ps -Uai</span><br></pre></td></tr></table></figure>

<p>参考<br><a href="http://www.cocoachina.com/articles/895939">http://www.cocoachina.com/articles/895939</a></p>
]]></content>
      <tags>
        <tag>iOS hack</tag>
      </tags>
  </entry>
  <entry>
    <title>ipa</title>
    <url>/2021/10/01/cracker-ios-tools/</url>
    <content><![CDATA[<h3 id="获取ipa"><a href="#获取ipa" class="headerlink" title="获取ipa"></a>获取ipa</h3><p>通过Apple Configurator 2 -&gt;所有设备 -&gt;选中当前设备 -&gt; 添加 -&gt;应用 -&gt;选择需要的应用 -&gt;点击添加 <em><strong>注意:当出现替换提示 不要点击任何按钮,运行一下命令,所下载ipa会出现在左面的ipas文件夹下</strong></em></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -riv ~/Library/Group\ Containers/K36BKF7T3D.group.com.apple.configurator/Library/Caches/Assets/TemporaryItems/MobileApps/  ~/Desktop/ipas</span><br></pre></td></tr></table></figure>


<h3 id="查壳"><a href="#查壳" class="headerlink" title="查壳"></a>查壳</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看库文件</span><br><span class="line">lipo -info .a</span><br><span class="line">#查看app/ipa文件</span><br><span class="line">otool -l ./*.app | grep crypt</span><br></pre></td></tr></table></figure>

<ul>
<li><p>MonkeyDev</p>
</li>
<li><p><a href="https://github.com/QMUI/LookinServer">LookinServer and GUI</a></p>
<ul>
<li>Revel</li>
</ul>
</li>
<li><p>fishhook</p>
</li>
<li><p><a href="https://github.com/theos/theos">theos</a></p>
</li>
</ul>
<h3 id="越狱"><a href="#越狱" class="headerlink" title="越狱"></a>越狱</h3><ul>
<li><a href="https://tweak-box.com/uncover/">uncover iOS11.0-14.5.1</a><ul>
<li><a href="https://github.com/pwn20wndstuff">github网址</a> </li>
<li><a href="https://unc0ver.dev/">unc0ver dev 官网</a></li>
<li><em><strong>注意假网站:<a href="https://tweak-box.com/uncover/">https://tweak-box.com/uncover/</a></strong></em></li>
</ul>
</li>
<li><a href="https://i4.cn/i4mac/">爱思助手 iOS11 一下用越狱助手</a></li>
<li><a href="">checkra1n 11以下用这个 A11以上U的设备不建议使用 会禁用A11 BPR</a><ul>
<li><a href="https://github.com/checkra1n/pongoOS">github</a> </li>
<li><a href="./oneweirdtrick.pdf">‘checkm8’ bootrom 漏洞 黑皮书(讲述checkra1n如何工作的)</a></li>
</ul>
</li>
<li><a href="https://www.idownloadblog.com/tag/jailbreak/">越狱消息</a></li>
</ul>
<h3 id="砸壳"><a href="#砸壳" class="headerlink" title="砸壳"></a>砸壳</h3><ul>
<li><a href="https://archive.org/details/gridrunner-ios">archive</a></li>
<li>iOS<ul>
<li><a href="https://frida.re/docs/ios/">frida(main used)</a></li>
<li><a href="https://github.com/KJCracks/Clutch">Clutch(used)</a></li>
<li><a href="https://github.com/stefanesser/dumpdecrypted">dumpdecrypted</a></li>
<li><a href="https://github.com/JohnCoates/flexdecrypt">flexdecrypt</a></li>
<li><a href="https://github.com/as0ler/r2flutch">r2flutch</a></li>
</ul>
</li>
<li>MacOS<ul>
<li><a href="https://github.com/subdiox/UnFairPlay">UnFairPlay</a></li>
<li><a href="http://stevenygard.com/projects/class-dump/">class-dump</a></li>
</ul>
</li>
</ul>
<p>###Mach-O View</p>
<ul>
<li><a href="">MachOView</a></li>
<li><a href="#%E5%BC%83%E7%94%A8">Hopper Disassembler</a></li>
</ul>
<p>#越狱后设备</p>
<ul>
<li>cydia  add <a href="http://cydia.iphonecake.com/">http://cydia.iphonecake.com</a></li>
<li>越狱后 openSSH 账号:root  密码:alpine</li>
<li>CrackerXI 脱壳</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cocoapods</span></span><br><span class="line">target <span class="string">&#x27;DYDylib&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  use_frameworks!</span><br><span class="line">  pod <span class="string">&#x27;LookinServer&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://blackhat.com/">blackhat</a></li>
</ul>
<p>#iOS 实用视频<br><a href="https://mrmad.com.tw/category/siri-shortcuts">https://mrmad.com.tw/category/siri-shortcuts</a></p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取CPU线程</span></span><br><span class="line">sysctl -n hw.logicalcpu  </span><br></pre></td></tr></table></figure>

<p>##<a name="弃用"></a>弃用</p>
<ul>
<li><a href="">Hopper Disassembler</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>秘狐灵丹</title>
    <url>/2021/01/05/game-%E4%B8%80%E5%BF%B5%E9%80%8D%E9%81%A5-%E4%B8%B9%E6%96%B9/</url>
    <content><![CDATA[<h2 id="顺序"><a href="#顺序" class="headerlink" title="顺序 :"></a>顺序 :</h2><ol>
<li>千年灵芝</li>
<li>百年玄黄</li>
<li>万年首乌</li>
</ol>
<h2 id="药笺"><a href="#药笺" class="headerlink" title="药笺"></a>药笺</h2><ul>
<li>平凡的药笺: 5 5 5&#x2F;6 6 6</li>
<li>普通的药笺: 4 4 4</li>
<li>无用的药笺: 1 1 1</li>
<li>一般的药笺:  17 1 1</li>
</ul>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><ul>
<li>明目方(8):  2 1 3</li>
<li>舒经方: 1 3 1</li>
<li>续骨方(12):  2 8 2</li>
<li>保元方:(12):  1 4 7</li>
</ul>
<p>玄参白术笺:  6 1 7<br>温里固涩笺:  10 9 3</p>
]]></content>
  </entry>
  <entry>
    <title>Centos6.X install Nodejs</title>
    <url>/2018/01/22/install-system-centos-centos6-X-install-nodejs/</url>
    <content><![CDATA[<p><a href="http://people.redhat.com/~rjones/virt-what/files/">http://people.redhat.com/~rjones/virt-what/files/</a></p>
<p>wget <a href="http://people.redhat.com/~rjones/virt-what/files/virt-what-1.18.tar.gz">http://people.redhat.com/~rjones/virt-what/files/virt-what-1.18.tar.gz</a><br>tar zxvf virt-what-1.18.tar.gz<br>cd virt-what-1.18&#x2F;<br>.&#x2F;configure<br>make &amp;&amp; make install<br>virt-what</p>
<p>#centos 6.x 安装nodejs</p>
<p>##1.安装g++ 4.9.4 以上版本</p>
<ul>
<li><p>1.1需要安装gcc-c++老版本 </p>
<pre>
yum -y install make clang clang++ gcc gcc-c++;
</pre>
<p>不然编译时会报错:</p>
<pre>
make[2]: *** [all-stage1-target-libgcc] 错误 2
make[2]: Leaving directory '/gcc-4.9.4/gcc-build'
make[1]: *** [stage1-bubble] 错误 2
make[1]: Leaving directory '/gcc-4.9.4/gcc-build'
make: *** [all] 错误 2
</pre>
</li>
<li><p>1.2下载gcc 4.9.4 </p>
<pre>
wget http://ftp.gnu.org/gnu/gcc/gcc-4.9.4/gcc-4.9.4.tar.bz2 &&tar -xf gcc-4.9.4.tar.bz2 &&cd gcc-4.9.4 &&./contrib/download_prerequisites
</pre>
</li>
<li><p>1.3 生成编译目录</p>
<pre>
mkdir gcc-build && cd gcc-build
</pre>
</li>
<li><p>1.4 生成makefile</p>
<pre>
../configure --enable-checking=release --enable-languages=c,c++ --disable-multilib
</pre>
</li>
<li><p>1.5 编译（注意：此步骤非常耗时，搬瓦工单核我用了大约30分钟）</p>
<pre>
make
//如果是多核服务器请加上 -j4 会快一些
</pre>
</li>
<li><p>1.6 安装</p>
<pre>make install 
//如果安装失败 请加上sudo权限
//成功后验证版本
gcc -v  
</pre></li>
</ul>
<p>##2.安装nodejs最新版本</p>
<ul>
<li><p>2.1 下载nodejs code</p>
<pre>
wget https://nodejs.org/dist/v8.9.4/node-v8.9.4.tar.gz && tar -xf node-v8.9.4.tar.gz &&cd node-v8.9.4
</pre>
</li>
<li><p>2.2 开始安装</p>
<pre>
./configure --coverage &&make coverage &&make install
//如果失败 需要加上sudo
</pre></li>
</ul>
]]></content>
      <categories>
        <category>环境安装</category>
      </categories>
      <tags>
        <tag>Centos6</tag>
        <tag>nodejs</tag>
        <tag>g++</tag>
      </tags>
  </entry>
  <entry>
    <title>old pc install macos12</title>
    <url>/2022/05/17/install-system-macos-old-pc-install-macos12/</url>
    <content><![CDATA[<h1 id="被苹果判定过时设备升级12-4-macOS-Monterey"><a href="#被苹果判定过时设备升级12-4-macOS-Monterey" class="headerlink" title="被苹果判定过时设备升级12.4(macOS Monterey)"></a>被苹果判定过时设备升级12.4(macOS Monterey)</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p><mark><b>本文章只是阐述操作可能性,请您在操作前仔细确认,该篇文章可能造成 变砖,数据丢失,损坏硬件等等一切后果由您自己衡量,本作者不主张操作且不负任何责任</b></mark></p>
<h2 id="前提简介"><a href="#前提简介" class="headerlink" title="前提简介"></a>前提简介</h2><p>鄙人一直在用macbookpro 11,5 (2014 mid), 新系统macos12 不允许安装了,本文主要阐述安装过程,其他老旧设备安装原理相同.</p>
<h2 id="工具集合"><a href="#工具集合" class="headerlink" title="工具集合"></a>工具集合</h2><ul>
<li><a href="https://github.com/dortania/OpenCore-Legacy-Patcher/releases/download/0.4.5/OpenCore-Patcher-GUI.app.zip">OpenCore-Legacy-Patcher 0.4.5</a></li>
<li>Terminal</li>
<li>macos</li>
<li>32G U盘 (我使用16GU盘都完事就差几十MB就满了,所以32GB更稳妥一些)</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="前置步骤"><a href="#前置步骤" class="headerlink" title="前置步骤"></a>前置步骤</h3><ul>
<li>打开 OpenCore-Legacy-Patcher.app</li>
<li>Create macOS Installer</li>
<li>Download macOS installer</li>
<li>选择macOS 12.4 (21F79 -12.1GB)</li>
<li>等待下载完成 选择你的U盘(注意:该步骤会格式化U盘,您的U盘内数据会全部丢失,请谨慎操作)</li>
<li>等待安装完成(大约40分钟,如果你不是苹果设备,那么直接点继续就行) </li>
<li>我是用自己的序列号和主板序列号,这里我没有点击继续,如果你没有自己的请点击继续 选择盘符安装 OpenCore(EFI)<br><code>如果你点了继续那么下面的步骤不需要操作了 直接重启选择U盘启动就行了 </code></li>
<li>自己的序列号可以通过 关于本机 查看 我是使用了terminal 运行了下面的代码 <code>system_profiler SPHardwareDataType |grep Ser |cut -f 2 -d: </code></li>
<li>主板序列号 需要拆开本,在主板最下面有印刷</li>
<li>返回了App的Main menu 选择 Setting -&gt; 序列号填进去 并摁回车键 点击Return to Settings -&gt; return to main menu</li>
<li>Build and Install OpenCore</li>
<li>Build OpenCore  并查看log 中 序列号是否一致</li>
<li>Install to disk -&gt; 选择你的Upan(TransMemory)</li>
<li>disk2s1 -EFI - 209.7MB</li>
<li>reboot</li>
</ul>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ul>
<li>解决GVA内核崩溃问题(如果你没崩溃过不需要操作)</li>
<li>下载 <a href="./AppleGVA.framework.zip">AppleGVA.framework.zip</a>和<a href="./AppleGVACore.framework.zip">AppleGVACore.framework.zip</a> 解压到 <code>/System/Library/PrivateFrameworks</code>目录下 SMBIOS Setting 将获取的</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://github.com/dortania/OpenCore-Legacy-Patcher">OpenCore-Legacy-Patcher</a></li>
</ul>
]]></content>
      <tags>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>MAAS for ubuntu</title>
    <url>/2021/07/12/install-system-pve-maas/</url>
    <content><![CDATA[<h2 id="安装MAAS"><a href="#安装MAAS" class="headerlink" title="安装MAAS"></a>安装MAAS</h2><p><del>目前还是不建议使用snap, 一个是因为国内环境网络经常不通上代理只能上一部分,第二就是安装没有进度中断后需要abort 才能继续安装.</del></p>
<p>&#x3D;&#x3D;2021-8-30更新<br>使用一个月后还是要用snap…, apt 安装的maas 虽然版本一样但是功能运行总是出现奇奇怪怪的问题…&#x3D;&#x3D;</p>
<p>&#x3D;&#x3D;2021-9-16更新<br>lxc exec 没办法进入安装centos的虚拟机,明明宣传支持就是连接不上,换成ubuntu 一切又都好了&#x3D;&#x3D;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># in root user or add sudo</span></span><br><span class="line"><span class="comment">#apt-add-repository ppa:maas/3.0</span></span><br><span class="line"><span class="comment">#apt install maas -y</span></span><br><span class="line"></span><br><span class="line">snap install maas</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="打开网页"><a href="#打开网页" class="headerlink" title="打开网页"></a>打开网页</h3><p><code>http://192.168.2.150:5240/MAAS/</code><br><em>没有账号会提示使用sudo maas createadmin创建账号</em></p>
<h3 id="创建账号"><a href="#创建账号" class="headerlink" title="创建账号"></a>创建账号</h3><p>You will need to create a MAAS administrator user to access the web UI:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo maas createadmin --username=admin --email=574779754@qq.com --password=111111</span><br><span class="line"></span><br><span class="line"><span class="comment">#报错fe_sendauth: no password supplied,运行如下命令:</span></span><br><span class="line">sudo snap install maas-test-db</span><br><span class="line">sudo maas init region+rack --database-uri maas-test-db:///</span><br></pre></td></tr></table></figure>

<hr>
<p>验证状态<br><code>maas status</code><br>输出output如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#这是使用apt安装的</span></span><br><span class="line"><span class="comment">#bind9                            RUNNING   pid 7999, uptime 0:09:17</span></span><br><span class="line"><span class="comment">#dhcpd                            STOPPED   Not started</span></span><br><span class="line"><span class="comment">#dhcpd6                           STOPPED   Not started</span></span><br><span class="line"><span class="comment">#ntp                              RUNNING   pid 8598, uptime 0:05:42</span></span><br><span class="line"><span class="comment">#postgresql                       RUNNING   pid 8001, uptime 0:09:17</span></span><br><span class="line"><span class="comment">#proxy                            STOPPED   Not started</span></span><br><span class="line"><span class="comment">#rackd                            RUNNING   pid 8000, uptime 0:09:17</span></span><br><span class="line"><span class="comment">#regiond:regiond-0                RUNNING   pid 8003, uptime 0:09:17</span></span><br><span class="line"><span class="comment">#regiond:regiond-1                RUNNING   pid 8008, uptime 0:09:17</span></span><br><span class="line"><span class="comment">#regiond:regiond-2                RUNNING   pid 8005, uptime 0:09:17</span></span><br><span class="line"><span class="comment">#regiond:regiond-3                RUNNING   pid 8015, uptime 0:09:17</span></span><br><span class="line"><span class="comment">#tgt                              RUNNING   pid 8040, uptime 0:09:15</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#这是使用snap 安装的</span></span><br><span class="line">bind9                            RUNNING   pid 1952, <span class="built_in">uptime</span> 0:06:24</span><br><span class="line">dhcpd                            STOPPED   Not started</span><br><span class="line">dhcpd6                           STOPPED   Not started</span><br><span class="line">http                             RUNNING   pid 2241, <span class="built_in">uptime</span> 0:05:28</span><br><span class="line">ntp                              RUNNING   pid 2129, <span class="built_in">uptime</span> 0:05:37</span><br><span class="line">proxy                            RUNNING   pid 2297, <span class="built_in">uptime</span> 0:05:23</span><br><span class="line">rackd                            RUNNING   pid 1956, <span class="built_in">uptime</span> 0:06:24</span><br><span class="line">regiond                          RUNNING   pid 1957, <span class="built_in">uptime</span> 0:06:24</span><br><span class="line">syslog                           RUNNING   pid 2102, <span class="built_in">uptime</span> 0:05:38</span><br></pre></td></tr></table></figure>
<hr>
<p><a href="https://maas.io/docs/snap/3.0/ui/maas-installation#heading--init-maas-production">生产环境使用参考</a></p>
<p>使用webUI登录操作<br><code>http://192.168.2.150:5240/MAAS/</code></p>
<h2 id="LXD"><a href="#LXD" class="headerlink" title="LXD"></a>LXD</h2><p><code>snap install lxd --channel=latest/stable</code></p>
<p>首次使用运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lxd init</span><br><span class="line">Would you like to use LXD clustering? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Do you want to configure a new storage pool? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">Name of the new storage pool [default=default]: lxd</span><br><span class="line">Name of the storage backend to use (btrfs, <span class="built_in">dir</span>, lvm, zfs, ceph) [default=zfs]: </span><br><span class="line">Create a new ZFS pool? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">Would you like to use an existing empty block device (e.g. a disk or partition)? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Size <span class="keyword">in</span> GB of the new loop device (1GB minimum) [default=30GB]: 300GB</span><br><span class="line">Would you like to connect to a MAAS server? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Would you like to create a new <span class="built_in">local</span> network bridge? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">What should the new bridge be called? [default=lxdbr0]: </span><br><span class="line">What IPv4 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: </span><br><span class="line">What IPv6 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: </span><br><span class="line">Would you like the LXD server to be available over the network? (<span class="built_in">yes</span>/no) [default=no]: <span class="built_in">yes</span></span><br><span class="line">Address to <span class="built_in">bind</span> LXD to (not including port) [default=all]: </span><br><span class="line">Port to <span class="built_in">bind</span> LXD to [default=8443]: </span><br><span class="line">Trust password <span class="keyword">for</span> new clients: </span><br><span class="line">Again: </span><br><span class="line">Would you like stale cached images to be updated automatically? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>] </span><br><span class="line">Would you like a YAML <span class="string">&quot;lxd init&quot;</span> preseed to be printed? (<span class="built_in">yes</span>/no) [default=no]: <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 安装文件在 /var/snap/lxd/common/lxd/disks/default.img</span></span><br><span class="line">lxc storage list </span><br><span class="line">查看文件具体位置</span><br><span class="line">lxd shutdown</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">config:</span></span><br><span class="line">  <span class="attr">core.https_address:</span> <span class="string">&#x27;[::]:8443&#x27;</span></span><br><span class="line">  <span class="attr">core.trust_password:</span> <span class="string">&quot;111111&quot;</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">config:</span></span><br><span class="line">    <span class="attr">ipv4.address:</span> <span class="string">auto</span></span><br><span class="line">    <span class="attr">ipv6.address:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">lxdbr0</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">project:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">storage_pools:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">config:</span></span><br><span class="line">    <span class="attr">size:</span> <span class="string">300GB</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">lxd</span></span><br><span class="line">  <span class="attr">driver:</span> <span class="string">zfs</span></span><br><span class="line"><span class="attr">profiles:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">config:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">description:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">devices:</span></span><br><span class="line">    <span class="attr">eth0:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">eth0</span></span><br><span class="line">      <span class="attr">network:</span> <span class="string">lxdbr0</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">nic</span></span><br><span class="line">    <span class="attr">root:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">      <span class="attr">pool:</span> <span class="string">lxd</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">disk</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">projects:</span> []</span><br><span class="line"><span class="attr">cluster:</span> <span class="literal">null</span></span><br></pre></td></tr></table></figure>

<h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 列出支持x86_64 CPU的所有ubuntu</span><br><span class="line">lxc image list ubuntu: amd64</span><br><span class="line"></span><br><span class="line">f: ubuntu 20.04 LTS amd64 (release) (20210819)</span><br><span class="line">x: ubuntu 16.04 LTS amd64 (release) (20210429)</span><br><span class="line">lxc launch ubuntu: f dev1</span><br><span class="line"># 新版本</span><br><span class="line">lxc launch ubuntu:20.04 dev1</span><br></pre></td></tr></table></figure>
<h3 id="连接MAAS"><a href="#连接MAAS" class="headerlink" title="连接MAAS"></a>连接MAAS</h3><p><a href="https://linuxcontainers.org/lxd/advanced-guide/#add-remote-servers">参考</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lxc config set core.https_address :8443</span><br><span class="line">lxc config set core.trust_password 111111</span><br></pre></td></tr></table></figure>
<h3 id="删除lxcbr0"><a href="#删除lxcbr0" class="headerlink" title="删除lxcbr0"></a>删除lxcbr0</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#需要卸载lxd lxc</span><br><span class="line">apt remove lxd lxc -y</span><br><span class="line">apt autoremove -y</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Ubuntu</tag>
        <tag>MAAS</tag>
      </tags>
  </entry>
  <entry>
    <title>阻止笔记本合盖休眠</title>
    <url>/2017/11/22/install-system-pve-no-sleep-for-laptop/</url>
    <content><![CDATA[<p>###阻止笔记本合盖休眠</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在PVE7.0 中vim 出现乱码 具体原因未知 使用nano</span><br><span class="line">vi /etc/systemd/logind.conf</span><br><span class="line"># 1</span><br><span class="line">#HandleLidSwitch=suspend</span><br><span class="line">#修改后如下</span><br><span class="line">HandleLidSwitch=ignore</span><br><span class="line"># 2 修改完退出并保存</span><br><span class="line">Ctrl+X -&gt; y -&gt;Enter</span><br><span class="line"># 3 重启 </span><br><span class="line"></span><br><span class="line"># 重启机器 reboot 或者重启服务 </span><br><span class="line">systemctl restart systemd-logind.service</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>PVE</tag>
        <tag>laptop</tag>
      </tags>
  </entry>
  <entry>
    <title>pve reset rootpassword</title>
    <url>/2019/03/08/install-system-pve-pve-reset-root-password/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>FAQ for PVE</title>
    <url>/2019/02/13/install-system-pve-pve/</url>
    <content><![CDATA[<h1 id="删除EFI-Boot-多余启动项"><a href="#删除EFI-Boot-多余启动项" class="headerlink" title="删除EFI Boot 多余启动项"></a>删除EFI Boot 多余启动项</h1><p>sudo efibootmgr  &#x2F;&#x2F;显示efi的启动项<br>sudo efibootmgr -b 0000 -B  &#x2F;&#x2F;删除多余的启动项,其中0000是要删除的引导项编号</p>
<h1 id="PVE-中vim-出现乱码"><a href="#PVE-中vim-出现乱码" class="headerlink" title="PVE 中vim 出现乱码"></a>PVE 中vim 出现乱码</h1><p> ** 原因是系统只安装了 vim-core 阉割版 **</p>
<p> 方法一: 安装完整版vim </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">apt install vim -y</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p> 方法二: 使用nano</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano [file]</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>PVE</tag>
        <tag>BOOT</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE 系统汇总</title>
    <url>/2020/06/01/install-system-pve-systems/</url>
    <content><![CDATA[<h1 id="PVE系统汇总"><a href="#PVE系统汇总" class="headerlink" title="PVE系统汇总"></a>PVE系统汇总</h1><h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><ul>
<li><a href="https://releases.ubuntu.com/20.04.3/ubuntu-20.04.3-live-server-amd64.iso?_ga=2.48566438.1432390385.1635749708-2047457822.1635749708">ubuntu-20.04.3-live-server-amd64.iso</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Units of information</title>
    <url>/2017/05/19/programming-language-and-tools-Kotlin-%E7%90%86%E8%AE%BA-%E4%BF%A1%E6%81%AF%E7%9A%84%E5%8D%95%E4%BD%8D-Units-of-information/</url>
    <content><![CDATA[<h1 id="理论-信息的单位-Units-of-information"><a href="#理论-信息的单位-Units-of-information" class="headerlink" title="理论:信息的单位(Units of information)"></a>理论:信息的单位(Units of information)</h1><h2 id="最小的单位-bit"><a href="#最小的单位-bit" class="headerlink" title="最小的单位 bit"></a>最小的单位 bit</h2>]]></content>
  </entry>
  <entry>
    <title>R cookbook</title>
    <url>/2018/02/10/programming-language-and-tools-R-do/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://cran.ism.ac.jp/bin/macosx/R-3.3.3.pkg">点击下载 <em>R-3.3.3</em> 这里考虑选择了日本CRAN 对国内网速快管子粗</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#使用brew</span><br><span class="line">brew install r</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>[RStudio v1.1.383] (<a href="https://download1.rstudio.org/desktop/macos/RStudio-1.1.383.dmg">https://download1.rstudio.org/desktop/macos/RStudio-1.1.383.dmg</a>)</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.r-project.org/">R</a></li>
<li>Thomas Rahlf. Data Visualisation with R. Springer International Publishing, New York, 2017. ISBN 978-3-319-49750-1. </li>
<li><a href="https://static-content.springer.com/esm/chp%3A10.1007%2F978-3-030-28444-2_1/MediaObjects/370574_2_En_1_MOESM1_ESM.zip">978-3-030-28444-2_1.MediaObjects</a></li>
<li><a href="https://www.rstudio.com/">rstudio</a></li>
</ul>
]]></content>
      <tags>
        <tag>R</tag>
      </tags>
  </entry>
  <entry>
    <title>shell nc help</title>
    <url>/2018/09/13/programming-language-and-tools-shell-nc/</url>
    <content><![CDATA[<p>#nc</p>
<h4 id="man"><a href="#man" class="headerlink" title="man"></a>man</h4><h4 id="help"><a href="#help" class="headerlink" title="help"></a>help</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -h</span><br><span class="line">nc [-46AacCDdEFhklMnOortUuvz] [-K tc] [-b boundif] [-i interval] [-p source_port]</span><br><span class="line">    [--apple-recv-anyif] [--apple-awdl-unres]</span><br><span class="line">    [--apple-boundif ifbound]</span><br><span class="line">    [--apple-no-cellular] [--apple-no-expensive]</span><br><span class="line">    [--apple-no-flowadv] [--apple-tcp-timeout conntimo]</span><br><span class="line">    [--apple-tcp-keepalive keepidle] [--apple-tcp-keepintvl keepintvl]</span><br><span class="line">    [--apple-tcp-keepcnt keepcnt] [--apple-tclass tclass]</span><br><span class="line">    [--tcp-adp-rtimo num_probes] [--apple-initcoproc-allow]</span><br><span class="line">    [--apple-tcp-adp-wtimo num_probes]</span><br><span class="line">    [--setsockopt-later] [--apple-no-connectx]</span><br><span class="line">    [--apple-delegate-pid pid] [--apple-delegate-uuid uuid]</span><br><span class="line">    [--apple-kao] [--apple-ext-bk-idle]</span><br><span class="line">    [--apple-netsvctype svc] [---apple-nowakefromsleep]</span><br><span class="line">    [--apple-notify-ack] [--apple-sockev]</span><br><span class="line">    [--apple-tos tos] [--apple-tos-cmsg]</span><br><span class="line">    [-s source_ip_address] [-w <span class="built_in">timeout</span>] [-X proxy_version]</span><br><span class="line">    [-x proxy_address[:port]] [hostname] [port[s]]</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>shell常用命令</title>
    <url>/2018/09/13/programming-language-and-tools-shell-shell/</url>
    <content><![CDATA[<p>#常用命令</p>
<h5 id="扫描端口-nc"><a href="#扫描端口-nc" class="headerlink" title="扫描端口(nc)"></a>扫描端口(<a href="./shell/nc">nc</a>)</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用检测端口可用 </span></span><br><span class="line">nc [IP] [端口] -zv</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>MacOS 硬件信息查看命令</title>
    <url>/2011/06/11/system-darwin-MacOS/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看Mac 硬盘列表</span></span><br><span class="line">diskutil list</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有信息</span></span><br><span class="line">sysctl -a</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看CPU</span></span><br><span class="line">sysctl -n machdep.cpu.brand_string</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>命令行</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS Bash转zsh 错误汇总</title>
    <url>/2019/09/01/system-darwin-ZSH-ERR/</url>
    <content><![CDATA[<h1 id="MacOS-Bash转zsh-错误汇总"><a href="#MacOS-Bash转zsh-错误汇总" class="headerlink" title="MacOS Bash转zsh 错误汇总"></a>MacOS Bash转zsh 错误汇总</h1><p>–</p>
<h3 id="0x0"><a href="#0x0" class="headerlink" title="0x0:"></a>0x0:</h3><h4 id="Error-declare-usage-declare-afFirtx-p-name-value"><a href="#Error-declare-usage-declare-afFirtx-p-name-value" class="headerlink" title="Error:declare: usage: declare [-afFirtx] [-p] [name[=value] ...]"></a>Error:<code>declare: usage: declare [-afFirtx] [-p] [name[=value] ...]</code></h4><p>&#x2F;&#x2F; update Bash3.2 to Bash 5.0+</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install bash</span><br><span class="line">brew upgrade bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置默认shell</span></span><br><span class="line">chsh -s /usr/local/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#升级系统bash</span></span><br><span class="line">// sudo <span class="built_in">rm</span> /bin/bash</span><br><span class="line">sudo <span class="built_in">mv</span> /bin/bash /bin/bash.bak</span><br><span class="line">sudo <span class="built_in">ln</span> -s /usr/local/bin/bash /bin/bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// out :<span class="built_in">ln</span>: /bin/bash: Operation not permitted</span><br><span class="line"><span class="comment"># 需要关闭系统[SIP](https://developer.apple.com/library/archive/documentation/Security/Conceptual/System_Integrity_Protection_Guide/Introduction/Introduction.html)</span></span><br><span class="line"></span><br><span class="line">进入系统Recovery模式 ,重启cmd+R进入:</span><br><span class="line"></span><br><span class="line">csrutil <span class="built_in">disable</span></span><br><span class="line">csrutil <span class="built_in">enable</span> </span><br><span class="line"></span><br><span class="line">// <span class="built_in">mv</span>: rename /bin/bash to /bin/bash.bak: Read-only file system</span><br><span class="line">// <span class="built_in">ln</span>: /bin/bash: File exists</span><br><span class="line"><span class="comment"># 第一步</span></span><br><span class="line">//先检查 </span><br><span class="line"> csrutil status</span><br><span class="line"> // System Integrity Protection status: disabled.</span><br><span class="line"><span class="comment"># 第二步</span></span><br><span class="line">sudo mount -uw /  </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>for Jenkins:</p>
<ul>
<li>给jenkins设置shell 路径 ,这里需要给系统用户操作jenkins目录的权限</li>
<li>还是升级系统bash划算</li>
</ul>
<h3 id="0x1"><a href="#0x1" class="headerlink" title="0x1:"></a>0x1:</h3><h5 id="Error-zsh-bad-set-of-key-value-pairs-for-associative-array"><a href="#Error-zsh-bad-set-of-key-value-pairs-for-associative-array" class="headerlink" title="Error:zsh: bad set of key/value pairs for associative array"></a>Error:<code>zsh: bad set of key/value pairs for associative array</code></h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zsh --version </span><br><span class="line">// out: zsh 5.7.1</span><br><span class="line">// 错误提要 <span class="built_in">local</span> 和<span class="built_in">declare</span> 报相同错误</span><br><span class="line">// <span class="built_in">declare</span> bash 4.0以上才支持</span><br><span class="line">TAGS=<span class="string">&#x27;a 1 b 2 c 3&#x27;</span></span><br><span class="line"><span class="built_in">local</span> -A tag=(<span class="variable">$TAGS</span>)</span><br><span class="line">// out :zsh: bad <span class="built_in">set</span> of key/value pairs <span class="keyword">for</span> associative array</span><br><span class="line"></span><br><span class="line">//该问题为zsh的bug</span><br><span class="line">// 需要将zsh改为5.8+</span><br><span class="line">brew install zsh</span><br><span class="line">brew upgrade zsh</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc </span><br><span class="line">// 如果为更新成功 需要运行如下语句</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/ncurses/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">//更改为</span><br><span class="line"><span class="built_in">local</span> -A tag=($(<span class="built_in">echo</span> <span class="variable">$TAGS</span>))</span><br><span class="line"></span><br><span class="line">//declare取值不需要 <span class="built_in">declare</span> -x version=<span class="variable">$&#123;tag[a]&#125;</span></span><br><span class="line">NS=<span class="string">&#x27;a&#x27;</span></span><br><span class="line">// 改为直接取值</span><br><span class="line">version =<span class="variable">$&#123;tag[<span class="variable">$&#123;NS&#125;</span>]&#125;</span>.<span class="variable">$&#123;BUILD_NUMBER&#125;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>脚本</category>
      </categories>
      <tags>
        <tag>macos</tag>
        <tag>Bash</tag>
        <tag>zsh</tag>
        <tag>err</tag>
      </tags>
  </entry>
  <entry>
    <title>man screen</title>
    <url>/2016/03/20/system-darwin-manScreen/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Last login: Sun Mar 20 10:15:05 on ttys000</span><br><span class="line">skd@mdm ~ % screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.mdm	(Attached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.mdm	(Attached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.mdm	(Detached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.mdm	(Attached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % man  screen</span><br><span class="line">skd@mdm ~ % man  screen &gt; screen.md</span><br><span class="line">skd@mdm ~ % ls</span><br><span class="line">Applications  Documents	Library		Music		Public		同步空间</span><br><span class="line">Desktop    Downloads	Movies		Pictures	screen.md</span><br><span class="line">skd@mdm ~ % cat screen.md </span><br><span class="line">SCREEN(1)                                                            SCREEN(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       screen - screen manager with VT100/ANSI terminal emulation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       screen [ -options ] [ cmd [ args ] ]</span><br><span class="line">       screen -r [[pid.]tty[.host]]</span><br><span class="line">       screen -r sessionowner/[[pid.]tty[.host]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       Screen is a full-screen window manager that multiplexes a physical ter-</span><br><span class="line">       minal between several processes (typically interactive  shells).   Each</span><br><span class="line">       virtual terminal provides the functions of a DEC VT100 terminal and, in</span><br><span class="line">       addition, several control functions from the ISO 6429  (ECMA  48,  ANSI</span><br><span class="line">       X3.64)  and ISO 2022 standards (e.g. insert/delete line and support for</span><br><span class="line">       multiple character sets).  There is a  scrollback  history  buffer  for</span><br><span class="line">       each virtual terminal and a copy-and-paste mechanism that allows moving</span><br><span class="line">       text regions between windows.</span><br><span class="line"></span><br><span class="line">       When screen is called, it creates a single window with a  shell  in  it</span><br><span class="line">       (or  the  specified  command) and then gets out of your way so that you</span><br><span class="line">       can use the program as you normally would.  Then, at any time, you  can</span><br><span class="line">       create new (full-screen) windows with other programs in them (including</span><br><span class="line">       more shells), kill existing windows, view a list of windows, turn  out-</span><br><span class="line">       put  logging  on and off, copy-and-paste text between windows, view the</span><br><span class="line">       scrollback history, switch between windows in whatever manner you wish,</span><br><span class="line">       etc.  All  windows  run  their  programs completely independent of each</span><br><span class="line">       other. Programs continue to run when their window is currently not vis-</span><br><span class="line">       ible and even when the whole screen session is detached from the user&#x27;s</span><br><span class="line">       terminal.  When a program terminates, screen (per  default)  kills  the</span><br><span class="line">       window  that  contained  it.  If this window was in the foreground, the</span><br><span class="line">       display switches to the previous  window;  if  none  are  left,  screen</span><br><span class="line">       exits.</span><br><span class="line"></span><br><span class="line">       Everything  you type is sent to the program running in the current win-</span><br><span class="line">       dow.  The only exception to this is the one keystroke that is  used  to</span><br><span class="line">       initiate  a  command  to  the window manager.  By default, each command</span><br><span class="line">       begins with a control-a (abbreviated C-a from now on), and is  followed</span><br><span class="line">       by one other keystroke.  The command character and all the key bindings</span><br><span class="line">       can be fully customized to be anything you like, though they are always</span><br><span class="line">       two characters in length.</span><br><span class="line"></span><br><span class="line">       Screen does not understand the prefix &quot;C-&quot; to mean control.  Please use</span><br><span class="line">       the caret notation (&quot;^A&quot; instead of &quot;C-a&quot;) as  arguments  to  e.g.  the</span><br><span class="line">       escape  command  or  the -e option.  Screen will also print out control</span><br><span class="line">       characters in caret notation.</span><br><span class="line"></span><br><span class="line">       The standard way to create a new window is to type &quot;C-a c&quot;.  This  cre-</span><br><span class="line">       ates  a  new window running a shell and switches to that window immedi-</span><br><span class="line">       ately, regardless of the state of the process running  in  the  current</span><br><span class="line">       window.   Similarly,  you can create a new window with a custom command</span><br><span class="line">       in it by first binding the command to a keystroke  (in  your  .screenrc</span><br><span class="line">       file  or  at  the &quot;C-a :&quot; command line) and then using it just like the</span><br><span class="line">       &quot;C-a c&quot; command.  In addition, new windows can be created by running  a</span><br><span class="line">       command like:</span><br><span class="line"></span><br><span class="line">              screen emacs prog.c</span><br><span class="line"></span><br><span class="line">       from  a shell prompt within a previously created window.  This will not</span><br><span class="line">       run another copy of screen, but will instead supply  the  command  name</span><br><span class="line">       and its arguments to the window manager (specified in the $STY environ-</span><br><span class="line">       ment variable) who will use it to create the  new  window.   The  above</span><br><span class="line">       example would start the emacs editor (editing prog.c) and switch to its</span><br><span class="line">       window.</span><br><span class="line"></span><br><span class="line">       If &quot;/etc/utmp&quot; is writable by screen, an  appropriate  record  will  be</span><br><span class="line">       written  to  this  file for each window, and removed when the window is</span><br><span class="line">       terminated.  This is useful for working with &quot;talk&quot;,  &quot;script&quot;,  &quot;shut-</span><br><span class="line">       down&quot;,  &quot;rsend&quot;,  &quot;sccs&quot;  and  other similar programs that use the utmp</span><br><span class="line">       file to determine who you are. As long as screen is active on your ter-</span><br><span class="line">       minal,  the  terminal&#x27;s  own  record is removed from the utmp file. See</span><br><span class="line">       also &quot;C-a L&quot;.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GETTING STARTED</span><br><span class="line">       Before you begin to use screen you&#x27;ll need to make sure you  have  cor-</span><br><span class="line">       rectly  selected  your  terminal  type, just as you would for any other</span><br><span class="line">       termcap/terminfo program.  (You can do this by using tset for example.)</span><br><span class="line"></span><br><span class="line">       If  you&#x27;re  impatient  and want to get started without doing a lot more</span><br><span class="line">       reading, you should remember this one command:  &quot;C-a ?&quot;.  Typing  these</span><br><span class="line">       two characters will display a list of the available screen commands and</span><br><span class="line">       their bindings. Each keystroke is discussed in the section &quot;DEFAULT KEY</span><br><span class="line">       BINDINGS&quot;.  The  manual section &quot;CUSTOMIZATION&quot; deals with the contents</span><br><span class="line">       of your .screenrc.</span><br><span class="line"></span><br><span class="line">       If your terminal is a &quot;true&quot; auto-margin terminal (it doesn&#x27;t allow the</span><br><span class="line">       last position on the screen to be updated without scrolling the screen)</span><br><span class="line">       consider using a version of your terminal&#x27;s termcap that has  automatic</span><br><span class="line">       margins  turned off. This will ensure an accurate and optimal update of</span><br><span class="line">       the screen in all circumstances. Most terminals nowadays  have  &quot;magic&quot;</span><br><span class="line">       margins  (automatic margins plus usable last column). This is the VT100</span><br><span class="line">       style type and perfectly suited for screen.  If all  you&#x27;ve  got  is  a</span><br><span class="line">       &quot;true&quot;  auto-margin  terminal  screen  will  be  content to use it, but</span><br><span class="line">       updating a character put into the last position on the screen  may  not</span><br><span class="line">       be  possible  until the screen scrolls or the character is moved into a</span><br><span class="line">       safe position in some other way. This delay can be shortened by using a</span><br><span class="line">       terminal with insert-character capability.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">COMMAND-LINE OPTIONS</span><br><span class="line">       Screen has the following command-line options:</span><br><span class="line"></span><br><span class="line">       -a   include all capabilities (with some minor exceptions) in each win-</span><br><span class="line">            dow&#x27;s termcap, even if screen must redraw parts of the display  in</span><br><span class="line">            order to implement a function.</span><br><span class="line"></span><br><span class="line">       -A   Adapt  the  sizes of all windows to the size of the current termi-</span><br><span class="line">            nal.  By default, screen tries to restore  its  old  window  sizes</span><br><span class="line">            when  attaching  to  resizable  terminals  (those with &quot;WS&quot; in its</span><br><span class="line">            description, e.g. suncmd or some xterm).</span><br><span class="line"></span><br><span class="line">       -c file</span><br><span class="line">            override the default configuration file from &quot;$HOME/.screenrc&quot;  to</span><br><span class="line">            file.</span><br><span class="line"></span><br><span class="line">       -d|-D [pid.tty.host]</span><br><span class="line">            does  not  start screen, but detaches the elsewhere running screen</span><br><span class="line">            session. It has the same effect as typing &quot;C-a  d&quot;  from  screen&#x27;s</span><br><span class="line">            controlling  terminal.  -D  is  the equivalent to the power detach</span><br><span class="line">            key.  If no session can be detached, this option  is  ignored.  In</span><br><span class="line">            combination  with  the  -r/-R  option more powerful effects can be</span><br><span class="line">            achieved:</span><br><span class="line"></span><br><span class="line">       -d -r   Reattach a session and if necessary detach it first.</span><br><span class="line"></span><br><span class="line">       -d -R   Reattach a session and if necessary detach or  even  create  it</span><br><span class="line">               first.</span><br><span class="line"></span><br><span class="line">       -d -RR  Reattach  a  session  and if necessary detach or create it. Use</span><br><span class="line">               the first session if more than one session is available.</span><br><span class="line"></span><br><span class="line">       -D -r   Reattach a session. If necessary  detach  and  logout  remotely</span><br><span class="line">               first.</span><br><span class="line"></span><br><span class="line">       -D -R   Attach here and now. In detail this means: If a session is run-</span><br><span class="line">               ning, then reattach. If necessary detach  and  logout  remotely</span><br><span class="line">               first.   If  it  was not running create it and notify the user.</span><br><span class="line">               This is the author&#x27;s favorite.</span><br><span class="line"></span><br><span class="line">       -D -RR  Attach here and now. Whatever that means, just do it.</span><br><span class="line"></span><br><span class="line">            Note: It is always a good idea to check the status  of  your  ses-</span><br><span class="line">            sions by means of &quot;screen -list&quot;.</span><br><span class="line"></span><br><span class="line">       -e xy</span><br><span class="line">            specifies the command character to be x and the character generat-</span><br><span class="line">            ing a literal command character to y (when typed after the command</span><br><span class="line">            character).   The default is &quot;C-a&quot; and `a&#x27;, which can be specified</span><br><span class="line">            as &quot;-e^Aa&quot;.  When creating a screen session, this option sets  the</span><br><span class="line">            default  command character. In a multiuser session all users added</span><br><span class="line">            will start off with this command character. But when attaching  to</span><br><span class="line">            an  already  running session, this option changes only the command</span><br><span class="line">            character of the attaching user.  This  option  is  equivalent  to</span><br><span class="line">            either the commands &quot;defescape&quot; or &quot;escape&quot; respectively.</span><br><span class="line"></span><br><span class="line">       -f, -fn, and -fa</span><br><span class="line">            turns  flow-control  on, off, or &quot;automatic switching mode&quot;.  This</span><br><span class="line">            can also be defined through the &quot;defflow&quot; .screenrc command.</span><br><span class="line"></span><br><span class="line">       -h num</span><br><span class="line">            Specifies the history scrollback buffer to be num lines high.</span><br><span class="line"></span><br><span class="line">       -i   will cause the interrupt key (usually C-c) to interrupt  the  dis-</span><br><span class="line">            play  immediately  when  flow-control  is  on.   See the &quot;defflow&quot;</span><br><span class="line">            .screenrc command for details.  The use of this option is discour-</span><br><span class="line">            aged.</span><br><span class="line"></span><br><span class="line">       -l and -ln</span><br><span class="line">            turns  login  mode  on  or off (for /etc/utmp updating).  This can</span><br><span class="line">            also be defined through the &quot;deflogin&quot; .screenrc command.</span><br><span class="line"></span><br><span class="line">       -ls and -list</span><br><span class="line">            does not start screen, but prints a list of  pid.tty.host  strings</span><br><span class="line">            identifying  your screen sessions.  Sessions marked `detached&#x27; can</span><br><span class="line">            be resumed with &quot;screen -r&quot;. Those marked `attached&#x27;  are  running</span><br><span class="line">            and  have a controlling terminal. If the session runs in multiuser</span><br><span class="line">            mode, it is  marked  `multi&#x27;.  Sessions  marked  as  `unreachable&#x27;</span><br><span class="line">            either  live  on  a  different host or are `dead&#x27;.  An unreachable</span><br><span class="line">            session is considered dead, when its name matches either the  name</span><br><span class="line">            of the local host, or the specified parameter, if any.  See the -r</span><br><span class="line">            flag for a description how to construct matches.  Sessions  marked</span><br><span class="line">            as `dead&#x27; should be thoroughly checked and removed.  Ask your sys-</span><br><span class="line">            tem administrator if you are not sure. Remove  sessions  with  the</span><br><span class="line">            -wipe option.</span><br><span class="line"></span><br><span class="line">       -L   tells  screen to turn on automatic output logging for the windows.</span><br><span class="line"></span><br><span class="line">       -m   causes screen  to  ignore  the  $STY  environment  variable.  With</span><br><span class="line">            &quot;screen  -m&quot;  creation  of  a  new session is enforced, regardless</span><br><span class="line">            whether screen is called from within  another  screen  session  or</span><br><span class="line">            not.  This  flag has a special meaning in connection with the `-d&#x27;</span><br><span class="line">            option:</span><br><span class="line"></span><br><span class="line">       -d -m   Start screen in &quot;detached&quot; mode. This creates a new session but</span><br><span class="line">               doesn&#x27;t  attach  to  it.  This  is  useful  for  system startup</span><br><span class="line">               scripts.</span><br><span class="line"></span><br><span class="line">       -D -m   This also starts screen in &quot;detached&quot; mode, but doesn&#x27;t fork  a</span><br><span class="line">               new process. The command exits if the session terminates.</span><br><span class="line"></span><br><span class="line">       -O   selects  a  more optimal output mode for your terminal rather than</span><br><span class="line">            true VT100 emulation (only affects auto-margin  terminals  without</span><br><span class="line">            `LP&#x27;).   This can also be set in your .screenrc by specifying `OP&#x27;</span><br><span class="line">            in a &quot;termcap&quot; command.</span><br><span class="line"></span><br><span class="line">       -p number_or_name</span><br><span class="line">            Preselect a window. This is usefull when you want to reattach to a</span><br><span class="line">            specific  windor or you want to send a command via the &quot;-X&quot; option</span><br><span class="line">            to a specific window. As with screen&#x27;s select commant, &quot;-&quot; selects</span><br><span class="line">            the  blank  window.  As a special case for reattach, &quot;=&quot; brings up</span><br><span class="line">            the windowlist on the blank window.</span><br><span class="line"></span><br><span class="line">       -q   Suppress printing of error messages. In combination with &quot;-ls&quot; the</span><br><span class="line">            exit  value  is  as  follows: 9 indicates a directory without ses-</span><br><span class="line">            sions. 10 indicates a directory with running  but  not  attachable</span><br><span class="line">            sessions.  11 (or more) indicates 1 (or more) usable sessions.  In</span><br><span class="line">            combination with &quot;-r&quot; the exit value is as follows:  10  indicates</span><br><span class="line">            that  there  is  no session to resume. 12 (or more) indicates that</span><br><span class="line">            there are 2 (or more) sessions to resume and  you  should  specify</span><br><span class="line">            which one to choose.  In all other cases &quot;-q&quot; has no effect.</span><br><span class="line"></span><br><span class="line">       -r [pid.tty.host]</span><br><span class="line">       -r sessionowner/[pid.tty.host]</span><br><span class="line">            resumes  a detached screen session.  No other options (except com-</span><br><span class="line">            binations with -d/-D) may be specified, though an optional  prefix</span><br><span class="line">            of  [pid.]tty.host  may  be needed to distinguish between multiple</span><br><span class="line">            detached screen sessions.  The second form is used to  connect  to</span><br><span class="line">            another  user&#x27;s  screen session which runs in multiuser mode. This</span><br><span class="line">            indicates that screen should look for sessions in  another  user&#x27;s</span><br><span class="line">            directory. This requires setuid-root.</span><br><span class="line"></span><br><span class="line">       -R   attempts to resume the first detached screen session it finds.  If</span><br><span class="line">            successful, all other command-line options  are  ignored.   If  no</span><br><span class="line">            detached  session exists, starts a new session using the specified</span><br><span class="line">            options, just as if -R had not been specified. The option  is  set</span><br><span class="line">            by default if screen is run as a login-shell (actually screen uses</span><br><span class="line">            &quot;-xRR&quot; in that case).  For combinations with the -d/-D option  see</span><br><span class="line">            there.</span><br><span class="line"></span><br><span class="line">       -s   sets  the  default  shell to the program specified, instead of the</span><br><span class="line">            value in the environment variable  $SHELL  (or  &quot;/bin/sh&quot;  if  not</span><br><span class="line">            defined).   This can also be defined through the &quot;shell&quot; .screenrc</span><br><span class="line">            command.</span><br><span class="line"></span><br><span class="line">       -S sessionname</span><br><span class="line">            When creating a new session, this option can be used to specify  a</span><br><span class="line">            meaningful  name for the session. This name identifies the session</span><br><span class="line">            for &quot;screen -list&quot; and &quot;screen -r&quot;  actions.  It  substitutes  the</span><br><span class="line">            default [tty.host] suffix.</span><br><span class="line"></span><br><span class="line">       -t name</span><br><span class="line">            sets  the  title  (a.k.a.) for the default shell or specified pro-</span><br><span class="line">            gram.  See also the &quot;shelltitle&quot; .screenrc command.</span><br><span class="line"></span><br><span class="line">       -U   Run screen in UTF-8 mode. This option tells screen that your  ter-</span><br><span class="line">            minal sends and understands UTF-8 encoded characters. It also sets</span><br><span class="line">            the default encoding for new windows to `utf8&#x27;.</span><br><span class="line"></span><br><span class="line">       -v   Print version number.</span><br><span class="line"></span><br><span class="line">       -wipe [match]</span><br><span class="line">            does the same as &quot;screen  -ls&quot;,  but  removes  destroyed  sessions</span><br><span class="line">            instead of marking them as `dead&#x27;.  An unreachable session is con-</span><br><span class="line">            sidered dead, when its name matches either the name of  the  local</span><br><span class="line">            host,  or the explicitly given parameter, if any.  See the -r flag</span><br><span class="line">            for a description how to construct matches.</span><br><span class="line"></span><br><span class="line">       -x   Attach to a not detached screen session. (Multi display mode).</span><br><span class="line"></span><br><span class="line">       -X   Send the specified command to a running screen  session.  You  can</span><br><span class="line">            use  the  -d or -r option to tell screen to look only for attached</span><br><span class="line">            or detached screen sessions. Note that this command  doesn&#x27;t  work</span><br><span class="line">            if the session is password protected.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DEFAULT KEY BINDINGS</span><br><span class="line">       As  mentioned,  each screen command consists of a &quot;C-a&quot; followed by one</span><br><span class="line">       other character.  For your convenience, all commands that are bound  to</span><br><span class="line">       lower-case  letters  are also bound to their control character counter-</span><br><span class="line">       parts (with the exception of &quot;C-a a&quot;; see below), thus, &quot;C-a c&quot; as well</span><br><span class="line">       as  &quot;C-a  C-c&quot;  can be used to create a window. See section &quot;CUSTOMIZA-</span><br><span class="line">       TION&quot; for a description of the command.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       The following table shows the default key bindings:</span><br><span class="line"></span><br><span class="line">       C-a &#x27;       (select)      Prompt for a window name or number to  switch</span><br><span class="line">                                 to.</span><br><span class="line"></span><br><span class="line">       C-a &quot;       (windowlist -b)</span><br><span class="line">                                 Present  a list of all windows for selection.</span><br><span class="line"></span><br><span class="line">       C-a 0       (select 0)</span><br><span class="line">        ...           ...</span><br><span class="line">       C-a 9       (select 9)</span><br><span class="line">       C-a -       (select -)    Switch to window number 0  -  9,  or  to  the</span><br><span class="line">                                 blank window.</span><br><span class="line"></span><br><span class="line">       C-a tab     (focus)       Switch the input focus to the next region.</span><br><span class="line"></span><br><span class="line">       C-a C-a     (other)       Toggle  to  the  window displayed previously.</span><br><span class="line">                                 Note that this binding defaults to  the  com-</span><br><span class="line">                                 mand  character  typed twice, unless overrid-</span><br><span class="line">                                 den.  For instance, if  you  use  the  option</span><br><span class="line">                                 &quot;-e]x&quot;, this command becomes &quot;]]&quot;.</span><br><span class="line"></span><br><span class="line">       C-a a       (meta)        Send  the  command character (C-a) to window.</span><br><span class="line">                                 See escape command.</span><br><span class="line"></span><br><span class="line">       C-a A       (title)       Allow the user to enter a name for  the  cur-</span><br><span class="line">                                 rent window.</span><br><span class="line"></span><br><span class="line">       C-a b</span><br><span class="line">       C-a C-b     (break)       Send a break to window.</span><br><span class="line"></span><br><span class="line">       C-a B       (pow_break)   Reopen the terminal line and send a break.</span><br><span class="line"></span><br><span class="line">       C-a c</span><br><span class="line">       C-a C-c     (screen)      Create  a  new window with a shell and switch</span><br><span class="line">                                 to that window.</span><br><span class="line"></span><br><span class="line">       C-a C       (clear)       Clear the screen.</span><br><span class="line"></span><br><span class="line">       C-a d</span><br><span class="line">       C-a C-d     (detach)      Detach screen from this terminal.</span><br><span class="line"></span><br><span class="line">       C-a D D     (pow_detach)  Detach and logout.</span><br><span class="line"></span><br><span class="line">       C-a f</span><br><span class="line">       C-a C-f     (flow)        Toggle flow on, off or auto.</span><br><span class="line"></span><br><span class="line">       C-a F       (fit)         Resize the window to the current region size.</span><br><span class="line"></span><br><span class="line">       C-a C-g     (vbell)       Toggles screen&#x27;s visual bell mode.</span><br><span class="line"></span><br><span class="line">       C-a h       (hardcopy)    Write a hardcopy of the current window to the</span><br><span class="line">                                 file &quot;hardcopy.n&quot;.</span><br><span class="line"></span><br><span class="line">       C-a H       (log)         Begins/ends logging of the current window  to</span><br><span class="line">                                 the file &quot;screenlog.n&quot;.</span><br><span class="line"></span><br><span class="line">       C-a i</span><br><span class="line">       C-a C-i     (info)        Show info about this window.</span><br><span class="line"></span><br><span class="line">       C-a k</span><br><span class="line">       C-a C-k     (kill)        Destroy current window.</span><br><span class="line"></span><br><span class="line">       C-a l</span><br><span class="line">       C-a C-l     (redisplay)   Fully refresh current window.</span><br><span class="line"></span><br><span class="line">       C-a L       (login)       Toggle  this  windows  login  slot. Available</span><br><span class="line">                                 only if screen is configured  to  update  the</span><br><span class="line">                                 utmp database.</span><br><span class="line"></span><br><span class="line">       C-a m</span><br><span class="line">       C-a C-m     (lastmsg)     Repeat the last message displayed in the mes-</span><br><span class="line">                                 sage line.</span><br><span class="line"></span><br><span class="line">       C-a M       (monitor)     Toggles monitoring of the current window.</span><br><span class="line"></span><br><span class="line">       C-a space</span><br><span class="line">       C-a n</span><br><span class="line">       C-a C-n     (next)        Switch to the next window.</span><br><span class="line"></span><br><span class="line">       C-a N       (number)      Show the number (and title)  of  the  current</span><br><span class="line">                                 window.</span><br><span class="line"></span><br><span class="line">       C-a backspace</span><br><span class="line">       C-a h</span><br><span class="line">       C-a p</span><br><span class="line">       C-a C-p     (prev)        Switch to the previous window (opposite of C-</span><br><span class="line">                                 a n).</span><br><span class="line"></span><br><span class="line">       C-a q</span><br><span class="line">       C-a C-q     (xon)         Send a control-q to the current window.</span><br><span class="line"></span><br><span class="line">       C-a Q       (only)        Delete all regions but the current one.</span><br><span class="line"></span><br><span class="line">       C-a r</span><br><span class="line">       C-a C-r     (wrap)        Toggle the current window&#x27;s line-wrap setting</span><br><span class="line">                                 (turn  the current window&#x27;s automatic margins</span><br><span class="line">                                 on and off).</span><br><span class="line"></span><br><span class="line">       C-a s</span><br><span class="line">       C-a C-s     (xoff)        Send a control-s to the current window.</span><br><span class="line"></span><br><span class="line">       C-a S       (split)       Split the current region into two new ones.</span><br><span class="line"></span><br><span class="line">       C-a t</span><br><span class="line">       C-a C-t     (time)        Show system information.</span><br><span class="line"></span><br><span class="line">       C-a v       (version)     Display the version and compilation date.</span><br><span class="line"></span><br><span class="line">       C-a C-v     (digraph)     Enter digraph.</span><br><span class="line"></span><br><span class="line">       C-a w</span><br><span class="line">       C-a C-w     (windows)     Show a list of window.</span><br><span class="line"></span><br><span class="line">       C-a W       (width)       Toggle 80/132 columns.</span><br><span class="line"></span><br><span class="line">       C-a x</span><br><span class="line">       C-a C-x     (lockscreen)  Lock this terminal.</span><br><span class="line"></span><br><span class="line">       C-a X       (remove)      Kill the current region.</span><br><span class="line"></span><br><span class="line">       C-a z</span><br><span class="line">       C-a C-z     (suspend)     Suspend screen.   Your  system  must  support</span><br><span class="line">                                 BSD-style job-control.</span><br><span class="line"></span><br><span class="line">       C-a Z       (reset)       Reset  the virtual terminal to its &quot;power-on&quot;</span><br><span class="line">                                 values.</span><br><span class="line"></span><br><span class="line">       C-a .       (dumptermcap) Write out a &quot;.termcap&quot; file.</span><br><span class="line"></span><br><span class="line">       C-a ?       (help)        Show key bindings.</span><br><span class="line"></span><br><span class="line">       C-a C-\     (quit)        Kill all windows and terminate screen.</span><br><span class="line"></span><br><span class="line">       C-a :       (colon)       Enter command line mode.</span><br><span class="line"></span><br><span class="line">       C-a [</span><br><span class="line">       C-a C-[</span><br><span class="line">       C-a esc     (copy)        Enter copy/scrollback mode.</span><br><span class="line"></span><br><span class="line">       C-a ]       (paste .)     Write the contents of the paste buffer to the</span><br><span class="line">                                 stdin queue of the current window.</span><br><span class="line"></span><br><span class="line">       C-a &#123;</span><br><span class="line">       C-a &#125;       (history)     Copy and paste a previous (command) line.</span><br><span class="line"></span><br><span class="line">       C-a &gt;       (writebuf)    Write paste buffer to a file.</span><br><span class="line"></span><br><span class="line">       C-a &lt;       (readbuf)     Reads the screen-exchange file into the paste</span><br><span class="line">                                 buffer.</span><br><span class="line"></span><br><span class="line">       C-a =       (removebuf)   Removes the file used by C-a &lt; and C-a &gt;.</span><br><span class="line"></span><br><span class="line">       C-a ,       (license)     Shows where screen comes from, where it  went</span><br><span class="line">                                 to and why you can use it.</span><br><span class="line"></span><br><span class="line">       C-a _       (silence)     Start/stop  monitoring the current window for</span><br><span class="line">                                 inactivity.</span><br><span class="line"></span><br><span class="line">       C-a *       (displays)    Show a listing of all currently attached dis-</span><br><span class="line">                                 plays.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CUSTOMIZATION</span><br><span class="line">       The  &quot;socket  directory&quot;  defaults either to $HOME/.screen or simply to</span><br><span class="line">       /tmp/screens or preferably to  /usr/local/screens  chosen  at  compile-</span><br><span class="line">       time. If screen is installed setuid-root, then the administrator should</span><br><span class="line">       compile screen with an adequate (not NFS mounted) socket directory.  If</span><br><span class="line">       screen  is  not  running setuid-root, the user can specify any mode 700</span><br><span class="line">       directory in the environment variable $SCREENDIR.</span><br><span class="line"></span><br><span class="line">       When screen is invoked, it executes initialization  commands  from  the</span><br><span class="line">       files  &quot;/usr/local/etc/screenrc&quot;  and  &quot;.screenrc&quot;  in  the user&#x27;s home</span><br><span class="line">       directory. These are the &quot;programmer&#x27;s defaults&quot; that can be overridden</span><br><span class="line">       in the following ways: for the global screenrc file screen searches for</span><br><span class="line">       the environment variable $SYSSCREENRC (this  override  feature  may  be</span><br><span class="line">       disabled  at compile-time). The user specific screenrc file is searched</span><br><span class="line">       in $SCREENRC, then $HOME/.screenrc.  The command line option  -c  takes</span><br><span class="line">       precedence over the above user screenrc files.</span><br><span class="line"></span><br><span class="line">       Commands  in  these  files  are  used to set options, bind functions to</span><br><span class="line">       keys, and to automatically establish one or more windows at the  begin-</span><br><span class="line">       ning  of  your  screen session.  Commands are listed one per line, with</span><br><span class="line">       empty lines being ignored.  A command&#x27;s arguments are separated by tabs</span><br><span class="line">       or  spaces,  and  may  be surrounded by single or double quotes.  A `#&#x27;</span><br><span class="line">       turns the rest of the line into a comment, except in quotes.   Unintel-</span><br><span class="line">       ligible  lines are warned about and ignored.  Commands may contain ref-</span><br><span class="line">       erences to environment variables. The syntax is the shell-like &quot;$VAR  &quot;</span><br><span class="line">       or &quot;$&#123;VAR&#125;&quot;. Note that this causes incompatibility with previous screen</span><br><span class="line">       versions, as now the &#x27;$&#x27;-character has to be protected with &#x27;\&#x27;  if  no</span><br><span class="line">       variable  substitution shall be performed. A string in single-quotes is</span><br><span class="line">       also protected from variable substitution.</span><br><span class="line"></span><br><span class="line">       Two configuration files are shipped as examples with your  screen  dis-</span><br><span class="line">       tribution:  &quot;etc/screenrc&quot; and &quot;etc/etcscreenrc&quot;. They contain a number</span><br><span class="line">       of useful examples for various commands.</span><br><span class="line"></span><br><span class="line">       Customization can also be done &#x27;on-line&#x27;. To  enter  the  command  mode</span><br><span class="line">       type  `C-a  :&#x27;.  Note  that commands starting with &quot;def&quot; change default</span><br><span class="line">       values, while others change current settings.</span><br><span class="line"></span><br><span class="line">       The following commands are available:</span><br><span class="line"></span><br><span class="line">       acladd usernames [crypted-pw]</span><br><span class="line">       addacl usernames</span><br><span class="line"></span><br><span class="line">       Enable users to fully access this screen session. Usernames can be  one</span><br><span class="line">       user or a comma separated list of users. This command enables to attach</span><br><span class="line">       to the screen session and performs the equivalent of `aclchg  usernames</span><br><span class="line">       +rwx  &quot;#?&quot;&#x27;.   executed.  To add a user with restricted access, use the</span><br><span class="line">       `aclchg&#x27; command below.  If an optional second parameter  is  supplied,</span><br><span class="line">       it  should  be  a crypted password for the named user(s). `Addacl&#x27; is a</span><br><span class="line">       synonym to `acladd&#x27;.  Multi user mode only.</span><br><span class="line"></span><br><span class="line">       aclchg usernames permbits list</span><br><span class="line">       chacl usernames permbits list</span><br><span class="line"></span><br><span class="line">       Change permissions for a comma separated list of users. Permission bits</span><br><span class="line">       are  represented  as `r&#x27;, `w&#x27; and `x&#x27;. Prefixing `+&#x27; grants the permis-</span><br><span class="line">       sion, `-&#x27; removes it. The third parameter is a comma separated list  of</span><br><span class="line">       commands and/or windows (specified either by number or title). The spe-</span><br><span class="line">       cial list `#&#x27; refers to all windows, `?&#x27; to all commands. if  usernames</span><br><span class="line">       consists  of a single `*&#x27;, all known users are affected.  A command can</span><br><span class="line">       be executed when the user has the `x&#x27; bit for it.  The  user  can  type</span><br><span class="line">       input to a window when he has its `w&#x27; bit set and no other user obtains</span><br><span class="line">       a writelock for this window.  Other bits  are  currently  ignored.   To</span><br><span class="line">       withdraw  the writelock from another user in window 2: `aclchg username</span><br><span class="line">       -w+w 2&#x27;.  To allow read-only access to the session: `aclchg username -w</span><br><span class="line">       &quot;#&quot;&#x27;.  As soon as a user&#x27;s name is known to screen he can attach to the</span><br><span class="line">       session and (per default) has full permissions for all command and win-</span><br><span class="line">       dows. Execution permission for the acl commands, `at&#x27; and others should</span><br><span class="line">       also be removed or the user may be able  to  regain  write  permission.</span><br><span class="line">       Rights  of  the special username nobody cannot be changed (see the &quot;su&quot;</span><br><span class="line">       command).  `Chacl&#x27; is a synonym to `aclchg&#x27;.  Multi user mode only.</span><br><span class="line"></span><br><span class="line">       acldel username</span><br><span class="line"></span><br><span class="line">       Remove a user from screen&#x27;s access control list. If currently attached,</span><br><span class="line">       all the user&#x27;s displays are detached from the session. He cannot attach</span><br><span class="line">       again.  Multi user mode only.</span><br><span class="line"></span><br><span class="line">       aclgrp username [groupname]</span><br><span class="line"></span><br><span class="line">       Creates groups of users that share common access rights.  The  name  of</span><br><span class="line">       the group is the username of the group leader. Each member of the group</span><br><span class="line">       inherits the permissions that are granted to  the  group  leader.  That</span><br><span class="line">       means,  if  a user fails an access check, another check is made for the</span><br><span class="line">       group leader.  A user is removed from  all  groups  the  special  value</span><br><span class="line">       &quot;none&quot;  is  used for groupname.  If the second parameter is omitted all</span><br><span class="line">       groups the user is in are listed.</span><br><span class="line"></span><br><span class="line">       aclumask [[users]+bits |[users]-bits .... ]</span><br><span class="line">       umask [[users]+bits |[users]-bits .... ]</span><br><span class="line"></span><br><span class="line">       This specifies the access other users have to windows that will be cre-</span><br><span class="line">       ated  by  the  caller  of the command.  Users may be no, one or a comma</span><br><span class="line">       separated list of known usernames. If no users are specified, a list of</span><br><span class="line">       all  currently  known  users  is  assumed.   Bits is any combination of</span><br><span class="line">       access control bits allowed defined with the &quot;aclchg&quot; command. The spe-</span><br><span class="line">       cial  username  &quot;?&quot; predefines the access that not yet known users will</span><br><span class="line">       be granted to any window initially.  The special username  &quot;??&quot;  prede-</span><br><span class="line">       fines  the  access that not yet known users are granted to any command.</span><br><span class="line">       Rights of the special username nobody cannot be changed (see  the  &quot;su&quot;</span><br><span class="line">       command).  `Umask&#x27; is a synonym to `aclumask&#x27;.</span><br><span class="line"></span><br><span class="line">       activity message</span><br><span class="line"></span><br><span class="line">       When  any  activity  occurs  in a background window that is being moni-</span><br><span class="line">       tored, screen displays a notification in the message line.  The notifi-</span><br><span class="line">       cation  message  can  be re-defined by means of the &quot;activity&quot; command.</span><br><span class="line">       Each occurrence of `%&#x27; in message is replaced by the number of the win-</span><br><span class="line">       dow  in  which  activity  has  occurred, and each occurrence of `^G&#x27; is</span><br><span class="line">       replaced by the definition for bell in your termcap (usually an audible</span><br><span class="line">       bell).  The default message is</span><br><span class="line"></span><br><span class="line">                   &#x27;Activity in window %n&#x27;</span><br><span class="line"></span><br><span class="line">       Note  that  monitoring  is  off  for all windows by default, but can be</span><br><span class="line">       altered by use of the &quot;monitor&quot; command (C-a M).</span><br><span class="line"></span><br><span class="line">       allpartial on|off</span><br><span class="line"></span><br><span class="line">       If set to on, only the current  cursor  line  is  refreshed  on  window</span><br><span class="line">       change.   This  affects  all  windows  and  is useful for slow terminal</span><br><span class="line">       lines. The previous setting of full/partial refresh for each window  is</span><br><span class="line">       restored with &quot;allpartial off&quot;.  This is a global flag that immediately</span><br><span class="line">       takes effect on all windows overriding the &quot;partial&quot; settings. It  does</span><br><span class="line">       not change the default redraw behavior of newly created windows.</span><br><span class="line"></span><br><span class="line">       altscreen on|off</span><br><span class="line"></span><br><span class="line">       If  set  to on, &quot;alternate screen&quot; support is enabled in virtual termi-</span><br><span class="line">       nals, just like in xterm.  Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       at [identifier][#|*|%] command [args ... ]</span><br><span class="line"></span><br><span class="line">       Execute a command at other displays  or  windows  as  if  it  had  been</span><br><span class="line">       entered there.  &quot;At&quot; changes the context (the `current window&#x27; or `cur-</span><br><span class="line">       rent display&#x27; setting) of the command. If the first parameter describes</span><br><span class="line">       a  non-unique  context, the command will be executed multiple times. If</span><br><span class="line">       the first parameter is of the form  `identifier*&#x27;  then  identifier  is</span><br><span class="line">       matched against user names.  The command is executed once for each dis-</span><br><span class="line">       play of the selected user(s). If the first parameter  is  of  the  form</span><br><span class="line">       `identifier%&#x27;  identifier  is  matched  against  displays. Displays are</span><br><span class="line">       named after the ttys they attach. The prefix `/dev/&#x27; or `/dev/tty&#x27;  may</span><br><span class="line">       be  omitted  from  the  identifier.  If identifier has a `#&#x27; or nothing</span><br><span class="line">       appended it is matched against window numbers and titles.  Omitting  an</span><br><span class="line">       identifier in front of the `#&#x27;, `*&#x27; or `%&#x27;-character selects all users,</span><br><span class="line">       displays or windows because a prefix-match is performed. Note  that  on</span><br><span class="line">       the  affected  display(s)  a short message will describe what happened.</span><br><span class="line">       Permission is checked for initiator of the &quot;at&quot; command,  not  for  the</span><br><span class="line">       owners  of  the affected display(s).  Note that the &#x27;#&#x27; character works</span><br><span class="line">       as a comment introducer when it is preceded by whitespace. This can  be</span><br><span class="line">       escaped by prefixing a &#x27;\&#x27;.  Permission is checked for the initiator of</span><br><span class="line">       the &quot;at&quot; command, not for the owners of the affected display(s).</span><br><span class="line">       Caveat: When matching against windows, the command is executed at least</span><br><span class="line">       once  per window. Commands that change the internal arrangement of win-</span><br><span class="line">       dows (like &quot;other&quot;) may be called again. In shared windows the  command</span><br><span class="line">       will be repeated for each attached display. Beware, when issuing toggle</span><br><span class="line">       commands like &quot;login&quot;!  Some commands (e.g. &quot;process&quot;) require  that  a</span><br><span class="line">       display  is associated with the target windows.  These commands may not</span><br><span class="line">       work correctly under &quot;at&quot; looping over windows.</span><br><span class="line"></span><br><span class="line">       attrcolor attrib [attribute/color-modifier]</span><br><span class="line"></span><br><span class="line">       This command can be used to highlight attributes by changing the  color</span><br><span class="line">       of  the  text.  If  the  attribute  attrib  is  in  use,  the specified</span><br><span class="line">       attribute/color modifier is also applied. If no modifier is given,  the</span><br><span class="line">       current one is deleted. See the &quot;STRING ESCAPES&quot; chapter for the syntax</span><br><span class="line">       of the modifier. Screen understands two pseudo-attributes,  &quot;i&quot;  stands</span><br><span class="line">       for  high-intensity  foreground  color and &quot;I&quot; for high-intensity back-</span><br><span class="line">       ground color.</span><br><span class="line"></span><br><span class="line">       Examples:</span><br><span class="line"></span><br><span class="line">              attrcolor b &quot;R&quot;</span><br><span class="line"></span><br><span class="line">       Change the color to bright red if bold text is to be printed.</span><br><span class="line"></span><br><span class="line">              attrcolor u &quot;-u b&quot;</span><br><span class="line"></span><br><span class="line">       Use blue text instead of underline.</span><br><span class="line"></span><br><span class="line">              attrcolor b &quot;.I&quot;</span><br><span class="line"></span><br><span class="line">       Use bright colors for  bold  text.  Most  terminal  emulators  do  this</span><br><span class="line">       already.</span><br><span class="line"></span><br><span class="line">              attrcolor i &quot;+b&quot;</span><br><span class="line"></span><br><span class="line">       Make bright colored text also bold.</span><br><span class="line"></span><br><span class="line">       autodetach on|off</span><br><span class="line"></span><br><span class="line">       Sets  whether screen will automatically detach upon hangup, which saves</span><br><span class="line">       all your running programs until they are resumed with a screen -r  com-</span><br><span class="line">       mand.   When  turned off, a hangup signal will terminate screen and all</span><br><span class="line">       the processes it contains. Autodetach is on by default.</span><br><span class="line"></span><br><span class="line">       autonuke on|off</span><br><span class="line"></span><br><span class="line">       Sets whether a clear screen sequence should nuke all  the  output  that</span><br><span class="line">       has not been written to the terminal. See also &quot;obuflimit&quot;.</span><br><span class="line"></span><br><span class="line">       backtick id lifespan autorefresh cmd args...</span><br><span class="line">       backtick id</span><br><span class="line"></span><br><span class="line">       Program  the  backtick command with the numerical id id.  The output of</span><br><span class="line">       such a command is used for substitution of the &quot;%`&quot; string escape.  The</span><br><span class="line">       specified  lifespan  is  the number of seconds the output is considered</span><br><span class="line">       valid. After this time, the command is run  again  if  a  corresponding</span><br><span class="line">       string  escape  is  encountered.  The autorefresh parameter triggers an</span><br><span class="line">       automatic refresh for caption and hardstatus strings after  the  speci-</span><br><span class="line">       fied  number  of seconds. Only the last line of output is used for sub-</span><br><span class="line">       stitution.</span><br><span class="line">       If both the lifespan and the autorefresh parameters are zero, the back-</span><br><span class="line">       tick  program is expected to stay in the background and generate output</span><br><span class="line">       once in a while.  In this case, the command is executed right away  and</span><br><span class="line">       screen  stores  the  last  line  of  output. If a new line gets printed</span><br><span class="line">       screen will automatically refresh the hardstatus or the captions.</span><br><span class="line">       The second form of the command deletes the backtick  command  with  the</span><br><span class="line">       numerical id id.</span><br><span class="line"></span><br><span class="line">       bce [on|off]</span><br><span class="line"></span><br><span class="line">       Change background-color-erase setting. If &quot;bce&quot; is set to on, all char-</span><br><span class="line">       acters cleared by an erase/insert/scroll/clear operation will  be  dis-</span><br><span class="line">       played  in  the  current  background color. Otherwise the default back-</span><br><span class="line">       ground color is used.</span><br><span class="line"></span><br><span class="line">       bell_msg [message]</span><br><span class="line"></span><br><span class="line">       When a bell character is sent to a background window, screen displays a</span><br><span class="line">       notification  in the message line.  The notification message can be re-</span><br><span class="line">       defined by this command.  Each occurrence of `%&#x27; in message is replaced</span><br><span class="line">       by  the  number  of  the window to which a bell has been sent, and each</span><br><span class="line">       occurrence of `^G&#x27; is replaced by the definition for bell in your term-</span><br><span class="line">       cap (usually an audible bell).  The default message is</span><br><span class="line"></span><br><span class="line">                   &#x27;Bell in window %n&#x27;</span><br><span class="line"></span><br><span class="line">       An  empty message can be supplied to the &quot;bell_msg&quot; command to suppress</span><br><span class="line">       output of a message line (bell_msg &quot;&quot;).  Without parameter, the current</span><br><span class="line">       message is shown.</span><br><span class="line"></span><br><span class="line">       bind [-c class] key [command [args]]</span><br><span class="line"></span><br><span class="line">       Bind  a command to a key.  By default, most of the commands provided by</span><br><span class="line">       screen are bound to one or more keys as indicated in the  &quot;DEFAULT  KEY</span><br><span class="line">       BINDINGS&quot;  section, e.g. the command to create a new window is bound to</span><br><span class="line">       &quot;C-c&quot; and &quot;c&quot;.  The &quot;bind&quot; command can be  used  to  redefine  the  key</span><br><span class="line">       bindings and to define new bindings.  The key argument is either a sin-</span><br><span class="line">       gle character, a two-character sequence of the form &quot;^x&quot;  (meaning  &quot;C-</span><br><span class="line">       x&quot;), a backslash followed by an octal number (specifying the ASCII code</span><br><span class="line">       of the character), or a backslash followed by a second character,  such</span><br><span class="line">       as  &quot;\^&quot; or &quot;\\&quot;.  The argument can also be quoted, if you like.  If no</span><br><span class="line">       further argument is given, any previously established binding for  this</span><br><span class="line">       key is removed.  The command argument can be any command listed in this</span><br><span class="line">       section.</span><br><span class="line"></span><br><span class="line">       If a command class is specified via the &quot;-c&quot; option, the key  is  bound</span><br><span class="line">       for the specified class. Use the &quot;command&quot; command to activate a class.</span><br><span class="line">       Command classes can be used to create multiple command keys  or  multi-</span><br><span class="line">       character bindings.</span><br><span class="line"></span><br><span class="line">       Some examples:</span><br><span class="line"></span><br><span class="line">                   bind &#x27; &#x27; windows</span><br><span class="line">                   bind ^k</span><br><span class="line">                   bind k</span><br><span class="line">                   bind K kill</span><br><span class="line">                   bind ^f screen telnet foobar</span><br><span class="line">                   bind \033 screen -ln -t root -h 1000 9 su</span><br><span class="line"></span><br><span class="line">       would bind the space key to the command that displays a list of windows</span><br><span class="line">       (so that the command usually invoked by &quot;C-a C-w&quot; would also be  avail-</span><br><span class="line">       able  as  &quot;C-a  space&quot;).  The  next three lines remove the default kill</span><br><span class="line">       binding from &quot;C-a C-k&quot; and &quot;C-a k&quot;.  &quot;C-a K&quot; is then bound to the  kill</span><br><span class="line">       command.  Then  it  binds  &quot;C-f&quot; to the command &quot;create a window with a</span><br><span class="line">       TELNET connection to foobar&quot;, and bind &quot;escape&quot;  to  the  command  that</span><br><span class="line">       creates an non-login window with a.k.a. &quot;root&quot; in slot #9, with a supe-</span><br><span class="line">       ruser shell and a scrollback buffer of 1000 lines.</span><br><span class="line"></span><br><span class="line">                   bind -c demo1 0 select 10</span><br><span class="line">                   bind -c demo1 1 select 11</span><br><span class="line">                   bind -c demo1 2 select 12</span><br><span class="line">                   bindkey &quot;^B&quot; command -c demo1</span><br><span class="line"></span><br><span class="line">       makes &quot;C-b 0&quot; select window 10, &quot;C-b 1&quot; window 11, etc.</span><br><span class="line"></span><br><span class="line">                   bind -c demo2 0 select 10</span><br><span class="line">                   bind -c demo2 1 select 11</span><br><span class="line">                   bind -c demo2 2 select 12</span><br><span class="line">                   bind - command -c demo2</span><br><span class="line"></span><br><span class="line">       makes &quot;C-a - 0&quot; select window 10, &quot;C-a - 1&quot; window 11, etc.</span><br><span class="line"></span><br><span class="line">       bindkey [-d] [-m] [-a] [[-k|-t] string [cmd args]]</span><br><span class="line"></span><br><span class="line">       This command manages screen&#x27;s input translation tables. Every entry  in</span><br><span class="line">       one  of  the  tables tells screen how to react if a certain sequence of</span><br><span class="line">       characters is encountered. There are three tables: one that should con-</span><br><span class="line">       tain  actions  programmed by the user, one for the default actions used</span><br><span class="line">       for terminal emulation and one for screen&#x27;s  copy  mode  to  do  cursor</span><br><span class="line">       movement.  See  section  &quot;INPUT  TRANSLATION&quot; for a list of default key</span><br><span class="line">       bindings.</span><br><span class="line">       If the -d option is given,  bindkey  modifies  the  default  table,  -m</span><br><span class="line">       changes  the  copy mode table and with neither option the user table is</span><br><span class="line">       selected.  The argument string is the sequence of characters  to  which</span><br><span class="line">       an action is bound. This can either be a fixed string or a termcap key-</span><br><span class="line">       board capability name (selectable with the -k option).</span><br><span class="line">       Some keys on a VT100 terminal can send a different string  if  applica-</span><br><span class="line">       tion  mode  is  turned  on  (e.g  the cursor keys).  Such keys have two</span><br><span class="line">       entries in the translation table. You can select the  application  mode</span><br><span class="line">       entry by specifying the -a option.</span><br><span class="line">       The -t option tells screen not to do inter-character timing. One cannot</span><br><span class="line">       turn off the timing if a termcap capability is used.</span><br><span class="line">       Cmd can be any of screen&#x27;s commands with an arbitrary number  of  args.</span><br><span class="line">       If cmd is omitted the key-binding is removed from the table.</span><br><span class="line">       Here are some examples of keyboard bindings:</span><br><span class="line"></span><br><span class="line">               bindkey -d</span><br><span class="line">       Show  all of the default key bindings. The application mode entries are</span><br><span class="line">       marked with [A].</span><br><span class="line"></span><br><span class="line">               bindkey -k k1 select 1</span><br><span class="line">       Make the &quot;F1&quot; key switch to window one.</span><br><span class="line"></span><br><span class="line">               bindkey -t foo stuff barfoo</span><br><span class="line">       Make &quot;foo&quot; an abbreviation of the word &quot;barfoo&quot;. Timeout is disabled so</span><br><span class="line">       that users can type slowly.</span><br><span class="line"></span><br><span class="line">               bindkey &quot;\024&quot; mapdefault</span><br><span class="line">       This  key-binding  makes  &quot;^T&quot; an escape character for key-bindings. If</span><br><span class="line">       you did the above &quot;stuff barfoo&quot; binding, you can enter the word  &quot;foo&quot;</span><br><span class="line">       by  typing  &quot;^Tfoo&quot;. If you want to insert a &quot;^T&quot; you have to press the</span><br><span class="line">       key twice (i.e. escape the escape binding).</span><br><span class="line"></span><br><span class="line">               bindkey -k F1 command</span><br><span class="line">       Make the F11 (not F1!) key an alternative screen escape (besides ^A).</span><br><span class="line"></span><br><span class="line">       break [duration]</span><br><span class="line"></span><br><span class="line">       Send a break signal for duration*0.25 seconds to this window.  For non-</span><br><span class="line">       Posix  systems  the  time  interval  may be rounded up to full seconds.</span><br><span class="line">       Most useful if a character device is attached to the window rather than</span><br><span class="line">       a shell process (See also chapter &quot;WINDOW TYPES&quot;). The maximum duration</span><br><span class="line">       of a break signal is limited to 15 seconds.</span><br><span class="line"></span><br><span class="line">       blanker</span><br><span class="line"></span><br><span class="line">       Activate the screen blanker. First the screen is cleared. If no blanker</span><br><span class="line">       program is defined, the cursor is turned off, otherwise, the program is</span><br><span class="line">       started and it&#x27;s output is written to the screen.  The  screen  blanker</span><br><span class="line">       is killed with the first keypress, the read key is discarded.</span><br><span class="line">       This command is normally used together with the &quot;idle&quot; command.</span><br><span class="line"></span><br><span class="line">       blankerprg [program args]</span><br><span class="line"></span><br><span class="line">       Defines a blanker program. Disables the blanker program if no arguments</span><br><span class="line">       are given.</span><br><span class="line"></span><br><span class="line">       breaktype [tcsendbreak|TIOCSBRK |TCSBRK]</span><br><span class="line"></span><br><span class="line">       Choose one of the available methods of generating a  break  signal  for</span><br><span class="line">       terminal  devices.  This command should affect the current window only.</span><br><span class="line">       But it still behaves identical to &quot;defbreaktype&quot;. This will be  changed</span><br><span class="line">       in  the  future.   Calling  &quot;breaktype&quot;  with no parameter displays the</span><br><span class="line">       break method for the current window.</span><br><span class="line"></span><br><span class="line">       bufferfile [exchange-file]</span><br><span class="line"></span><br><span class="line">       Change the filename used for reading and writing with the paste buffer.</span><br><span class="line">       If  the  optional  argument to the &quot;bufferfile&quot; command is omitted, the</span><br><span class="line">       default setting (&quot;/tmp/screen-exchange&quot;) is reactivated.  The following</span><br><span class="line">       example  will  paste  the system&#x27;s password file into the screen window</span><br><span class="line">       (using the paste buffer, where a copy remains):</span><br><span class="line"></span><br><span class="line">                   C-a : bufferfile /etc/passwd</span><br><span class="line">                   C-a &lt; C-a ]</span><br><span class="line">                   C-a : bufferfile</span><br><span class="line"></span><br><span class="line">       c1 [on|off]</span><br><span class="line"></span><br><span class="line">       Change c1 code processing. &quot;C1 on&quot; tells  screen  to  treat  the  input</span><br><span class="line">       characters  between  128  and  159 as control functions.  Such an 8-bit</span><br><span class="line">       code is normally the same as ESC followed by  the  corresponding  7-bit</span><br><span class="line">       code.  The  default  setting  is to process c1 codes and can be changed</span><br><span class="line">       with the &quot;defc1&quot; command.  Users with fonts that have usable characters</span><br><span class="line">       in the c1 positions may want to turn this off.</span><br><span class="line"></span><br><span class="line">       caption always|splitonly [string]</span><br><span class="line">       caption string [string]</span><br><span class="line"></span><br><span class="line">       This  command  controls  the display of the window captions. Normally a</span><br><span class="line">       caption is only used if more than one window is shown  on  the  display</span><br><span class="line">       (split  screen  mode).  But if the type is set to always screen shows a</span><br><span class="line">       caption even if only one window is displayed. The default is splitonly.</span><br><span class="line"></span><br><span class="line">       The  second form changes the text used for the caption. You can use all</span><br><span class="line">       escapes from the &quot;STRING ESCAPES&quot; chapter. Screen  uses  a  default  of</span><br><span class="line">       `%3n %t&#x27;.</span><br><span class="line"></span><br><span class="line">       You can mix both forms by providing a string as an additional argument.</span><br><span class="line"></span><br><span class="line">       charset set</span><br><span class="line"></span><br><span class="line">       Change the current character set slot designation and charset  mapping.</span><br><span class="line">       The  first  four  character  of  set are treated as charset designators</span><br><span class="line">       while the fifth and sixth character must be in range &#x27;0&#x27; to &#x27;3&#x27; and set</span><br><span class="line">       the GL/GR charset mapping. On every position a &#x27;.&#x27; may be used to indi-</span><br><span class="line">       cate that the corresponding charset/mapping should not be changed  (set</span><br><span class="line">       is  padded  to  six characters internally by appending &#x27;.&#x27;  chars). New</span><br><span class="line">       windows have &quot;BBBB02&quot; as default charset, unless a  &quot;encoding&quot;  command</span><br><span class="line">       is active.</span><br><span class="line">       The current setting can be viewed with the &quot;info&quot; command.</span><br><span class="line"></span><br><span class="line">       chdir [directory]</span><br><span class="line"></span><br><span class="line">       Change  the  current directory of screen to the specified directory or,</span><br><span class="line">       if called without an argument, to your home directory (the value of the</span><br><span class="line">       environment  variable $HOME).  All windows that are created by means of</span><br><span class="line">       the &quot;screen&quot; command from within &quot;.screenrc&quot; or  by  means  of  &quot;C-a  :</span><br><span class="line">       screen  ...&quot; or &quot;C-a c&quot; use this as their default directory.  Without a</span><br><span class="line">       chdir command, this would  be  the  directory  from  which  screen  was</span><br><span class="line">       invoked.   Hardcopy  and  log  files are always written to the window&#x27;s</span><br><span class="line">       default directory, not the current directory of the process running  in</span><br><span class="line">       the  window.  You can use this command multiple times in your .screenrc</span><br><span class="line">       to start various windows in different default directories, but the last</span><br><span class="line">       chdir value will affect all the windows you create interactively.</span><br><span class="line"></span><br><span class="line">       clear</span><br><span class="line"></span><br><span class="line">       Clears the current window and saves its image to the scrollback buffer.</span><br><span class="line"></span><br><span class="line">       colon [prefix]</span><br><span class="line"></span><br><span class="line">       Allows you to enter &quot;.screenrc&quot; command lines.  Useful  for  on-the-fly</span><br><span class="line">       modification  of  key  bindings,  specific window creation and changing</span><br><span class="line">       settings. Note that the &quot;set&quot; keyword no longer  exists!  Usually  com-</span><br><span class="line">       mands affect the current window rather than default settings for future</span><br><span class="line">       windows. Change defaults with commands starting with &#x27;def...&#x27;.</span><br><span class="line"></span><br><span class="line">       If you consider this as the `Ex command mode&#x27; of screen, you may regard</span><br><span class="line">       &quot;C-a esc&quot; (copy mode) as its `Vi command mode&#x27;.</span><br><span class="line"></span><br><span class="line">       command [-c class]</span><br><span class="line"></span><br><span class="line">       This  command has the same effect as typing the screen escape character</span><br><span class="line">       (^A). It is probably only useful for key bindings.  If the &quot;-c&quot;  option</span><br><span class="line">       is  given,  select  the  specified  command class.  See also &quot;bind&quot; and</span><br><span class="line">       &quot;bindkey&quot;.</span><br><span class="line"></span><br><span class="line">       compacthist [on|off]</span><br><span class="line"></span><br><span class="line">       This tells  screen  whether  to  suppress  trailing  blank  lines  when</span><br><span class="line">       scrolling up text into the history buffer.</span><br><span class="line"></span><br><span class="line">       console [on|off]</span><br><span class="line"></span><br><span class="line">       Grabs  or un-grabs the machines console output to a window.  Note: Only</span><br><span class="line">       the owner of /dev/console can grab the console output.  This command is</span><br><span class="line">       only available if the machine supports the ioctl TIOCCONS.</span><br><span class="line"></span><br><span class="line">       copy</span><br><span class="line"></span><br><span class="line">       Enter  copy/scrollback mode. This allows you to copy text from the cur-</span><br><span class="line">       rent window and its history into the paste buffer. In this mode  a  vi-</span><br><span class="line">       like `full screen editor&#x27; is active:</span><br><span class="line">       Movement keys:</span><br><span class="line">         h, j, k, l move the cursor line by line or column by column.</span><br><span class="line">         0,  ^  and  $  move to the leftmost column, to the first or last non-</span><br><span class="line">           whitespace character on the line.</span><br><span class="line">         H, M and L move the cursor to the leftmost column of the top,  center</span><br><span class="line">           or bottom line of the window.</span><br><span class="line">         + and - positions one line up and down.</span><br><span class="line">         G moves to the specified absolute line (default: end of buffer).</span><br><span class="line">         | moves to the specified absolute column.</span><br><span class="line">         w, b, e move the cursor word by word.</span><br><span class="line">         B, E move the cursor WORD by WORD (as in vi).</span><br><span class="line">         C-u  and  C-d  scroll  the display up/down by the specified amount of</span><br><span class="line">           lines while preserving the cursor position. (Default: half  screen-</span><br><span class="line">           full).</span><br><span class="line">         C-b and C-f scroll the display up/down a full screen.</span><br><span class="line">         g moves to the beginning of the buffer.</span><br><span class="line">         % jumps to the specified percentage of the buffer.</span><br><span class="line"></span><br><span class="line">       Note:</span><br><span class="line">           Emacs style movement keys can be customized by a .screenrc command.</span><br><span class="line">           (E.g. markkeys &quot;h=^B:l=^F:$=^E&quot;) There is no simple  method  for  a</span><br><span class="line">           full emacs-style keymap, as this involves multi-character codes.</span><br><span class="line"></span><br><span class="line">       Marking:</span><br><span class="line">           The  copy range is specified by setting two marks. The text between</span><br><span class="line">           these marks will be highlighted. Press</span><br><span class="line">         space to set the first or second mark respectively.</span><br><span class="line">         Y and y used to mark one whole line or to mark from start of line.</span><br><span class="line">         W marks exactly one word.</span><br><span class="line">       Repeat count:</span><br><span class="line">           Any of these commands can be prefixed with a repeat count number by</span><br><span class="line">           pressing digits</span><br><span class="line">         0..9 which is taken as a repeat count.</span><br><span class="line">           Example:  &quot;C-a  C-[  H  10 j 5 Y&quot; will copy lines 11 to 15 into the</span><br><span class="line">           paste buffer.</span><br><span class="line">       Searching:</span><br><span class="line">         / Vi-like search forward.</span><br><span class="line">         ? Vi-like search backward.</span><br><span class="line">         C-a s Emacs style incremental search forward.</span><br><span class="line">         C-r Emacs style reverse i-search.</span><br><span class="line">       Specials:</span><br><span class="line">           There are however some keys that act differently than  in  vi.   Vi</span><br><span class="line">           does  not  allow one to yank rectangular blocks of text, but screen</span><br><span class="line">           does. Press</span><br><span class="line">         c or C to set the left or right margin  respectively.  If  no  repeat</span><br><span class="line">           count is given, both default to the current cursor position.</span><br><span class="line">           Example: Try this on a rather full text screen: &quot;C-a [ M 20 l SPACE</span><br><span class="line">           c 10 l 5 j C SPACE&quot;.</span><br><span class="line"></span><br><span class="line">           This moves one to the middle line of the screen, moves in  20  col-</span><br><span class="line">           umns  left,  marks the beginning of the paste buffer, sets the left</span><br><span class="line">           column, moves 5 columns down, sets the right column, and then marks</span><br><span class="line">           the end of the paste buffer. Now try:</span><br><span class="line">           &quot;C-a [ M 20 l SPACE 10 l 5 j SPACE&quot;</span><br><span class="line"></span><br><span class="line">           and notice the difference in the amount of text copied.</span><br><span class="line">         J  joins lines. It toggles between 4 modes: lines separated by a new-</span><br><span class="line">           line character (012), lines glued seamless, lines  separated  by  a</span><br><span class="line">           single  whitespace  and  comma  separated  lines. Note that you can</span><br><span class="line">           prepend the newline character with a carriage return character,  by</span><br><span class="line">           issuing a &quot;crlf on&quot;.</span><br><span class="line">         v  is  for all the vi users with &quot;:set numbers&quot; - it toggles the left</span><br><span class="line">           margin between column 9 and 1. Press</span><br><span class="line">         a before the final space key to toggle in append mode. Thus the  con-</span><br><span class="line">           tents  of the paste buffer will not be overwritten, but is appended</span><br><span class="line">           to.</span><br><span class="line">         A toggles in append mode and sets a (second) mark.</span><br><span class="line">         &gt; sets the (second) mark and writes the contents of the paste  buffer</span><br><span class="line">           to the screen-exchange file (/tmp/screen-exchange per default) once</span><br><span class="line">           copy-mode is finished.</span><br><span class="line">           This example demonstrates how to dump the whole  scrollback  buffer</span><br><span class="line">           to that file: &quot;C-A [ g SPACE G $ &gt;&quot;.</span><br><span class="line">         C-g gives information about the current line and column.</span><br><span class="line">         x  exchanges  the first mark and the current cursor position. You can</span><br><span class="line">           use this to adjust an already placed mark.</span><br><span class="line">         @ does nothing. Does not even exit copy mode.</span><br><span class="line">         All keys not described here exit copy mode.</span><br><span class="line"></span><br><span class="line">       copy_reg [key]</span><br><span class="line"></span><br><span class="line">       No longer exists, use &quot;readreg&quot; instead.</span><br><span class="line"></span><br><span class="line">       crlf [on|off]</span><br><span class="line"></span><br><span class="line">       This affects the copying of text regions with the `C-a [&#x27;  command.  If</span><br><span class="line">       it  is  set  to  `on&#x27;,  lines  will  be  separated by the two character</span><br><span class="line">       sequence `CR&#x27; - `LF&#x27;.  Otherwise (default) only `LF&#x27; is used.  When  no</span><br><span class="line">       parameter is given, the state is toggled.</span><br><span class="line"></span><br><span class="line">       debug on|off</span><br><span class="line"></span><br><span class="line">       Turns  runtime  debugging  on  or off. If screen has been compiled with</span><br><span class="line">       option -DDEBUG debugging available and is turned on per  default.  Note</span><br><span class="line">       that  this command only affects debugging output from the main &quot;SCREEN&quot;</span><br><span class="line">       process correctly. Debug output from attacher  processes  can  only  be</span><br><span class="line">       turned off once and forever.</span><br><span class="line"></span><br><span class="line">       defc1 on|off</span><br><span class="line"></span><br><span class="line">       Same  as the c1 command except that the default setting for new windows</span><br><span class="line">       is changed. Initial setting is `on&#x27;.</span><br><span class="line"></span><br><span class="line">       defautonuke on|off</span><br><span class="line"></span><br><span class="line">       Same as the autonuke command except that the default  setting  for  new</span><br><span class="line">       displays  is  changed. Initial setting is `off&#x27;.  Note that you can use</span><br><span class="line">       the special `AN&#x27; terminal capability if you want to have  a  dependency</span><br><span class="line">       on the terminal type.</span><br><span class="line"></span><br><span class="line">       defbce on|off</span><br><span class="line"></span><br><span class="line">       Same as the bce command except that the default setting for new windows</span><br><span class="line">       is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defbreaktype [tcsendbreak|TIOCSBRK |TCSBRK]</span><br><span class="line"></span><br><span class="line">       Choose one of the available methods of generating a  break  signal  for</span><br><span class="line">       terminal  devices.  The preferred methods are tcsendbreak and TIOCSBRK.</span><br><span class="line">       The third, TCSBRK, blocks the complete screen session for the  duration</span><br><span class="line">       of  the  break,  but  it  may  be the only way to generate long breaks.</span><br><span class="line">       Tcsendbreak and TIOCSBRK may or may not produce long breaks with spikes</span><br><span class="line">       (e.g.  4 per second). This is not only system dependant, this also dif-</span><br><span class="line">       fers between serial board  drivers.   Calling  &quot;defbreaktype&quot;  with  no</span><br><span class="line">       parameter displays the current setting.</span><br><span class="line"></span><br><span class="line">       defcharset [set]</span><br><span class="line"></span><br><span class="line">       Like  the  charset command except that the default setting for new win-</span><br><span class="line">       dows is changed. Shows current default if called without argument.</span><br><span class="line"></span><br><span class="line">       defescape xy</span><br><span class="line"></span><br><span class="line">       Set the default command characters. This is equivalent to the  &quot;escape&quot;</span><br><span class="line">       except  that  it is useful multiuser sessions only. In a multiuser ses-</span><br><span class="line">       sion &quot;escape&quot; changes the command character of the calling user,  where</span><br><span class="line">       &quot;defescape&quot;  changes the default command characters for users that will</span><br><span class="line">       be added later.</span><br><span class="line"></span><br><span class="line">       defflow on|off|auto [interrupt]</span><br><span class="line"></span><br><span class="line">       Same as the flow command except that the default setting for  new  win-</span><br><span class="line">       dows  is  changed. Initial setting is `auto&#x27;.  Specifying &quot;defflow auto</span><br><span class="line">       interrupt&quot; is the same as the command-line options -fa and -i.</span><br><span class="line"></span><br><span class="line">       defgr on|off</span><br><span class="line"></span><br><span class="line">       Same as the gr command except that the default setting for new  windows</span><br><span class="line">       is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defhstatus [status]</span><br><span class="line"></span><br><span class="line">       The  hardstatus  line  that  all new windows will get is set to status.</span><br><span class="line">       This command is useful to make the hardstatus of every  window  display</span><br><span class="line">       the  window  number  or title or the like.  Status may contain the same</span><br><span class="line">       directives as in the window messages, but the directive escape  charac-</span><br><span class="line">       ter is &#x27;^E&#x27; (octal 005) instead of &#x27;%&#x27;.  This was done to make a misin-</span><br><span class="line">       terpretation of program generated hardstatus lines impossible.  If  the</span><br><span class="line">       parameter  status  is omitted, the current default string is displayed.</span><br><span class="line">       Per default the hardstatus line of new windows is empty.</span><br><span class="line"></span><br><span class="line">       defencoding enc</span><br><span class="line"></span><br><span class="line">       Same as the encoding command except that the default  setting  for  new</span><br><span class="line">       windows is changed. Initial setting is the encoding taken from the ter-</span><br><span class="line">       minal.</span><br><span class="line"></span><br><span class="line">       deflog on|off</span><br><span class="line"></span><br><span class="line">       Same as the log command except that the default setting for new windows</span><br><span class="line">       is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       deflogin on|off</span><br><span class="line"></span><br><span class="line">       Same  as the login command except that the default setting for new win-</span><br><span class="line">       dows is changed. This is initialized with `on&#x27; as distributed (see con-</span><br><span class="line">       fig.h.in).</span><br><span class="line"></span><br><span class="line">       defmode mode</span><br><span class="line"></span><br><span class="line">       The mode of each newly allocated pseudo-tty is set to mode.  Mode is an</span><br><span class="line">       octal number.  When no &quot;defmode&quot; command is given, mode 0622 is used.</span><br><span class="line"></span><br><span class="line">       defmonitor on|off</span><br><span class="line"></span><br><span class="line">       Same as the monitor command except that the  default  setting  for  new</span><br><span class="line">       windows is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defnonblock on|off|numsecs</span><br><span class="line"></span><br><span class="line">       Same  as  the nonblock command except that the default setting for dis-</span><br><span class="line">       plays is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defobuflimit limit</span><br><span class="line"></span><br><span class="line">       Same as the obuflimit command except that the default setting  for  new</span><br><span class="line">       displays  is  changed. Initial setting is 256 bytes.  Note that you can</span><br><span class="line">       use the special &#x27;OL&#x27; terminal capability if you want to have  a  depen-</span><br><span class="line">       dency on the terminal type.</span><br><span class="line"></span><br><span class="line">       defscrollback num</span><br><span class="line"></span><br><span class="line">       Same  as the scrollback command except that the default setting for new</span><br><span class="line">       windows is changed. Initial setting is 100.</span><br><span class="line"></span><br><span class="line">       defshell command</span><br><span class="line"></span><br><span class="line">       Synonym to the shell command. See there.</span><br><span class="line"></span><br><span class="line">       defsilence on|off</span><br><span class="line"></span><br><span class="line">       Same as the silence command except that the  default  setting  for  new</span><br><span class="line">       windows is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defslowpaste msec&quot;</span><br><span class="line"></span><br><span class="line">       Same  as  the slowpaste command except that the default setting for new</span><br><span class="line">       windows is changed. Initial setting is 0 milliseconds, meaning `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defutf8 on|off</span><br><span class="line"></span><br><span class="line">       Same as the utf8 command except that the default setting for  new  win-</span><br><span class="line">       dows  is  changed.  Initial  setting is `on&#x27; if screen was started with</span><br><span class="line">       &quot;-U&quot;, otherwise `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defwrap on|off</span><br><span class="line"></span><br><span class="line">       Same as the wrap command except that the default setting for  new  win-</span><br><span class="line">       dows  is changed. Initially line-wrap is on and can be toggled with the</span><br><span class="line">       &quot;wrap&quot; command (&quot;C-a r&quot;) or by means of &quot;C-a : wrap on|off&quot;.</span><br><span class="line"></span><br><span class="line">       defwritelock on|off|auto</span><br><span class="line"></span><br><span class="line">       Same as the writelock command except that the default setting  for  new</span><br><span class="line">       windows is changed. Initially writelocks will off.</span><br><span class="line"></span><br><span class="line">       defzombie [keys]</span><br><span class="line"></span><br><span class="line">       Synonym  to the zombie command. Both currently change the default.  See</span><br><span class="line">       there.</span><br><span class="line"></span><br><span class="line">       detach [-h]</span><br><span class="line"></span><br><span class="line">       Detach the screen session (disconnect it from the terminal and  put  it</span><br><span class="line">       into  the background).  This returns you to the shell where you invoked</span><br><span class="line">       screen.  A detached screen can be resumed by invoking screen  with  the</span><br><span class="line">       -r  option  (see  also  section  &quot;COMMAND-LINE OPTIONS&quot;). The -h option</span><br><span class="line">       tells screen to  immediately  close  the  connection  to  the  terminal</span><br><span class="line">       (&quot;hangup&quot;).</span><br><span class="line"></span><br><span class="line">       dinfo</span><br><span class="line"></span><br><span class="line">       Show what screen thinks about your terminal. Useful if you want to know</span><br><span class="line">       why features like color or the alternate charset don&#x27;t work.</span><br><span class="line"></span><br><span class="line">       displays</span><br><span class="line"></span><br><span class="line">       Shows a tabular listing of  all  currently  connected  user  front-ends</span><br><span class="line">       (displays).  This is most useful for multiuser sessions.</span><br><span class="line"></span><br><span class="line">       digraph [preset]</span><br><span class="line"></span><br><span class="line">       This  command  prompts  the  user  for a digraph sequence. The next two</span><br><span class="line">       characters typed are looked up in a builtin  table  and  the  resulting</span><br><span class="line">       character  is  inserted  in  the input stream. For example, if the user</span><br><span class="line">       enters &#x27;a&quot;&#x27;, an a-umlaut will  be  inserted.  If  the  first  character</span><br><span class="line">       entered  is  a 0 (zero), screen will treat the following characters (up</span><br><span class="line">       to three) as an octal number instead.  The optional argument preset  is</span><br><span class="line">       treated  as user input, thus one can create an &quot;umlaut&quot; key.  For exam-</span><br><span class="line">       ple the command &quot;bindkey ^K digraph &#x27;&quot;&#x27;&quot; enables the user  to  generate</span><br><span class="line">       an a-umlaut by typing CTRL-K a.</span><br><span class="line"></span><br><span class="line">       dumptermcap</span><br><span class="line"></span><br><span class="line">       Write the termcap entry for the virtual terminal optimized for the cur-</span><br><span class="line">       rently  active  window  to  the   file   &quot;.termcap&quot;   in   the   user&#x27;s</span><br><span class="line">       &quot;$HOME/.screen&quot;  directory  (or wherever screen stores its sockets. See</span><br><span class="line">       the &quot;FILES&quot; section below).  This termcap entry  is  identical  to  the</span><br><span class="line">       value of the environment variable $TERMCAP that is set up by screen for</span><br><span class="line">       each window. For terminfo based systems you will need  to  run  a  con-</span><br><span class="line">       verter like captoinfo and then compile the entry with tic.</span><br><span class="line"></span><br><span class="line">       echo [-n] message</span><br><span class="line"></span><br><span class="line">       The  echo  command may be used to annoy screen users with a &#x27;message of</span><br><span class="line">       the day&#x27;. Typically installed in  a  global  /local/etc/screenrc.   The</span><br><span class="line">       option  &quot;-n&quot;  may be used to suppress the line feed.  See also &quot;sleep&quot;.</span><br><span class="line">       Echo is also useful for online checking of environment variables.</span><br><span class="line"></span><br><span class="line">       encoding enc [enc]</span><br><span class="line"></span><br><span class="line">       Tell screen how to interpret the input/output. The first argument  sets</span><br><span class="line">       the encoding of the current window. Each window can emulate a different</span><br><span class="line">       encoding. The optional second parameter overwrites the encoding of  the</span><br><span class="line">       connected terminal. It should never be needed as screen uses the locale</span><br><span class="line">       setting to detect the encoding.  There is also a way to select a termi-</span><br><span class="line">       nal  encoding  depending on the terminal type by using the &quot;KJ&quot; termcap</span><br><span class="line">       entry.</span><br><span class="line"></span><br><span class="line">       Supported encodings are eucJP, SJIS, eucKR, eucCN, Big5,  GBK,  KOI8-R,</span><br><span class="line">       CP1251,  UTF-8,  ISO8859-2, ISO8859-3, ISO8859-4, ISO8859-5, ISO8859-6,</span><br><span class="line">       ISO8859-7, ISO8859-8, ISO8859-9, ISO8859-10, ISO8859-15, jis.</span><br><span class="line"></span><br><span class="line">       See also &quot;defencoding&quot;, which changes the default setting of a new win-</span><br><span class="line">       dow.</span><br><span class="line"></span><br><span class="line">       escape xy</span><br><span class="line"></span><br><span class="line">       Set  the  command character to x and the character generating a literal</span><br><span class="line">       command character (by triggering the &quot;meta&quot; command) to y  (similar  to</span><br><span class="line">       the  -e  option).   Each  argument is either a single character, a two-</span><br><span class="line">       character sequence of the form &quot;^x&quot; (meaning &quot;C-x&quot;), a  backslash  fol-</span><br><span class="line">       lowed  by an octal number (specifying the ASCII code of the character),</span><br><span class="line">       or a backslash followed by a second character, such as  &quot;\^&quot;  or  &quot;\\&quot;.</span><br><span class="line">       The default is &quot;^Aa&quot;.</span><br><span class="line"></span><br><span class="line">       eval command1 [command2 ...]</span><br><span class="line"></span><br><span class="line">       Parses and executes each argument as separate command.</span><br><span class="line"></span><br><span class="line">       exec [[fdpat] newcommand [args ...]]</span><br><span class="line"></span><br><span class="line">       Run  a  unix subprocess (specified by an executable path newcommand and</span><br><span class="line">       its optional arguments) in the current window. The flow of data between</span><br><span class="line">       newcommands  stdin/stdout/stderr, the process originally started in the</span><br><span class="line">       window (let us call it &quot;application-process&quot;) and screen  itself  (win-</span><br><span class="line">       dow)  is  controlled by the filedescriptor pattern fdpat.  This pattern</span><br><span class="line">       is basically a three character sequence representing stdin, stdout  and</span><br><span class="line">       stderr of newcommand. A dot (.) connects the file descriptor to screen.</span><br><span class="line">       An exclamation mark (!) causes the file descriptor to be  connected  to</span><br><span class="line">       the application-process. A colon (:) combines both.  User input will go</span><br><span class="line">       to newcommand unless newcommand receives the application-process&#x27;  out-</span><br><span class="line">       put  (fdpats  first  character  is  `!&#x27; or `:&#x27;) or a pipe symbol (|) is</span><br><span class="line">       added (as a fourth character) to the end of fdpat.</span><br><span class="line">       Invoking `exec&#x27; without arguments shows name and arguments of the  cur-</span><br><span class="line">       rently  running  subprocess  in this window. Only one subprocess a time</span><br><span class="line">       can be running in each window.</span><br><span class="line">       When a subprocess is running the `kill&#x27; command will affect it  instead</span><br><span class="line">       of the windows process.</span><br><span class="line">       Refer  to  the postscript file `doc/fdpat.ps&#x27; for a confusing illustra-</span><br><span class="line">       tion of all 21 possible combinations. Each  drawing  shows  the  digits</span><br><span class="line">       2,1,0  representing  the  three file descriptors of newcommand. The box</span><br><span class="line">       marked `W&#x27; is the usual pty that has  the  application-process  on  its</span><br><span class="line">       slave  side.   The  box  marked  `P&#x27;  is the secondary pty that now has</span><br><span class="line">       screen at its master side.</span><br><span class="line"></span><br><span class="line">       Abbreviations:</span><br><span class="line">       Whitespace between the word `exec&#x27; and fdpat and  the  command  can  be</span><br><span class="line">       omitted. Trailing dots and a fdpat consisting only of dots can be omit-</span><br><span class="line">       ted. A simple `|&#x27; is synonymous for the pattern `!..|&#x27;; the  word  exec</span><br><span class="line">       can be omitted here and can always be replaced by `!&#x27;.</span><br><span class="line"></span><br><span class="line">       Examples:</span><br><span class="line"></span><br><span class="line">              exec ... /bin/sh</span><br><span class="line">              exec /bin/sh</span><br><span class="line">              !/bin/sh</span><br><span class="line"></span><br><span class="line">       Creates  another  shell in the same window, while the original shell is</span><br><span class="line">       still running. Output of both shells is displayed  and  user  input  is</span><br><span class="line">       sent to the new /bin/sh.</span><br><span class="line"></span><br><span class="line">              exec !.. stty 19200</span><br><span class="line">              exec ! stty 19200</span><br><span class="line">              !!stty 19200</span><br><span class="line"></span><br><span class="line">       Set  the  speed  of  the window&#x27;s tty. If your stty command operates on</span><br><span class="line">       stdout, then add another `!&#x27;.</span><br><span class="line"></span><br><span class="line">              exec !..| less</span><br><span class="line">              |less</span><br><span class="line"></span><br><span class="line">       This adds a pager to the window output. The special  character  `|&#x27;  is</span><br><span class="line">       needed  to  give  the  user control over the pager although it gets its</span><br><span class="line">       input from the window&#x27;s process. This works, because  less  listens  on</span><br><span class="line">       stderr  (a  behavior that screen would not expect without the `|&#x27;) when</span><br><span class="line">       its stdin is not a tty.  Less versions newer than  177  fail  miserably</span><br><span class="line">       here; good old pg still works.</span><br><span class="line"></span><br><span class="line">              !:sed -n s/.*Error.*/\007/p</span><br><span class="line"></span><br><span class="line">       Sends  window  output  to  both,  the user and the sed command. The sed</span><br><span class="line">       inserts an additional bell character (oct. 007) to  the  window  output</span><br><span class="line">       seen  by screen.  This will cause &quot;Bell in window x&quot; messages, whenever</span><br><span class="line">       the string &quot;Error&quot; appears in the window.</span><br><span class="line"></span><br><span class="line">       fit</span><br><span class="line"></span><br><span class="line">       Change the window size to the size of the current region. This  command</span><br><span class="line">       is needed because screen doesn&#x27;t adapt the window size automatically if</span><br><span class="line">       the window is displayed more than once.</span><br><span class="line"></span><br><span class="line">       flow [on|off|auto]</span><br><span class="line"></span><br><span class="line">       Sets the flow-control mode for  this  window.   Without  parameters  it</span><br><span class="line">       cycles  the  current  window&#x27;s flow-control setting from &quot;automatic&quot; to</span><br><span class="line">       &quot;on&quot; to &quot;off&quot;.  See the discussion on &quot;FLOW-CONTROL&quot; later on  in  this</span><br><span class="line">       document  for  full details and note, that this is subject to change in</span><br><span class="line">       future releases.  Default is set by `defflow&#x27;.</span><br><span class="line"></span><br><span class="line">       focus [up|down|top|bottom]</span><br><span class="line"></span><br><span class="line">       Move the input focus to the next region. This is done in a  cyclic  way</span><br><span class="line">       so  that the top region is selected after the bottom one. If no subcom-</span><br><span class="line">       mand is given it defaults to `down&#x27;. `up&#x27; cycles in the opposite order,</span><br><span class="line">       `top&#x27; and `bottom&#x27; go to the top and bottom region respectively. Useful</span><br><span class="line">       bindings are (j and k as in vi)</span><br><span class="line">           bind j focus down</span><br><span class="line">           bind k focus up</span><br><span class="line">           bind t focus top</span><br><span class="line">           bind b focus bottom</span><br><span class="line"></span><br><span class="line">       gr [on|off]</span><br><span class="line"></span><br><span class="line">       Turn GR charset switching on/off. Whenever screen sees an input charac-</span><br><span class="line">       ter with the 8th bit set, it will use the charset stored in the GR slot</span><br><span class="line">       and print the character with the 8th bit  stripped.  The  default  (see</span><br><span class="line">       also  &quot;defgr&quot;)  is  not  to  process GR switching because otherwise the</span><br><span class="line">       ISO88591 charset would not work.</span><br><span class="line"></span><br><span class="line">       hardcopy [-h] [file]</span><br><span class="line"></span><br><span class="line">       Writes out the currently displayed image to the file file,  or,  if  no</span><br><span class="line">       filename  is specified, to hardcopy.n in the default directory, where n</span><br><span class="line">       is the number of the current window.  This either appends or overwrites</span><br><span class="line">       the  file if it exists. See below.  If the option -h is specified, dump</span><br><span class="line">       also the contents of the scrollback buffer.</span><br><span class="line"></span><br><span class="line">       hardcopy_append on|off</span><br><span class="line"></span><br><span class="line">       If set to &quot;on&quot;, screen will append to the &quot;hardcopy.n&quot; files created by</span><br><span class="line">       the  command  &quot;C-a h&quot;, otherwise these files are overwritten each time.</span><br><span class="line">       Default is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       hardcopydir directory</span><br><span class="line"></span><br><span class="line">       Defines a directory where hardcopy files  will  be  placed.  If  unset,</span><br><span class="line">       hardcopys are dumped in screen&#x27;s current working directory.</span><br><span class="line"></span><br><span class="line">       hardstatus [on|off]</span><br><span class="line">       hardstatus [always]lastline|message|ignore [string]</span><br><span class="line">       hardstatus string [string]</span><br><span class="line"></span><br><span class="line">       This  command  configures the use and emulation of the terminal&#x27;s hard-</span><br><span class="line">       status line. The first form toggles whether screen will use  the  hard-</span><br><span class="line">       ware  status  line  to  display  messages. If the flag is set to `off&#x27;,</span><br><span class="line">       these messages are overlaid in reverse video mode at the display  line.</span><br><span class="line">       The default setting is `on&#x27;.</span><br><span class="line"></span><br><span class="line">       The  second form tells screen what to do if the terminal doesn&#x27;t have a</span><br><span class="line">       hardstatus line (i.e. the  termcap/terminfo  capabilities  &quot;hs&quot;,  &quot;ts&quot;,</span><br><span class="line">       &quot;fs&quot; and &quot;ds&quot; are not set). If the type &quot;lastline&quot; is used, screen will</span><br><span class="line">       reserve the last line of the display for the hardstatus. &quot;message&quot; uses</span><br><span class="line">       screen&#x27;s  message  mechanism and &quot;ignore&quot; tells screen never to display</span><br><span class="line">       the hardstatus.  If you prepend the word &quot;always&quot; to  the  type  (e.g.,</span><br><span class="line">       &quot;alwayslastline&quot;),  screen  will use the type even if the terminal sup-</span><br><span class="line">       ports a hardstatus.</span><br><span class="line"></span><br><span class="line">       The third form specifies the contents of the hardstatus line.  &#x27;%h&#x27;  is</span><br><span class="line">       used  as default string, i.e. the stored hardstatus of the current win-</span><br><span class="line">       dow (settable via &quot;ESC]0;&lt;string&gt;^G&quot;  or  &quot;ESC_&lt;string&gt;ESC\&quot;)  is  dis-</span><br><span class="line">       played.   You  can  customize this to any string you like including the</span><br><span class="line">       escapes from the &quot;STRING ESCAPES&quot; chapter. If you leave out  the  argu-</span><br><span class="line">       ment string, the current string is displayed.</span><br><span class="line"></span><br><span class="line">       You  can mix the second and third form by providing the string as addi-</span><br><span class="line">       tional argument.</span><br><span class="line"></span><br><span class="line">       height [-w|-d] [lines [cols]]</span><br><span class="line"></span><br><span class="line">       Set the display height to a specified number of lines. When no argument</span><br><span class="line">       is given it toggles between 24 and 42 lines display. You can also spec-</span><br><span class="line">       ify a width if you want to change both values.   The  -w  option  tells</span><br><span class="line">       screen  to  leave  the  display  size unchanged and just set the window</span><br><span class="line">       size, -d vice versa.</span><br><span class="line"></span><br><span class="line">       help [-c class]</span><br><span class="line"></span><br><span class="line">       Not really a online help, but displays a help screen  showing  you  all</span><br><span class="line">       the  key bindings.  The first pages list all the internal commands fol-</span><br><span class="line">       lowed by their current bindings.  Subsequent  pages  will  display  the</span><br><span class="line">       custom  commands,  one  command  per key.  Press space when you&#x27;re done</span><br><span class="line">       reading each page, or return to exit early.  All other  characters  are</span><br><span class="line">       ignored.  If  the  &quot;-c&quot; option is given, display all bound commands for</span><br><span class="line">       the specified command class.  See also &quot;DEFAULT KEY BINDINGS&quot;  section.</span><br><span class="line"></span><br><span class="line">       history</span><br><span class="line"></span><br><span class="line">       Usually  users  work  with  a shell that allows easy access to previous</span><br><span class="line">       commands.  For example csh has the command &quot;!!&quot; to repeat the last com-</span><br><span class="line">       mand executed.  Screen allows you to have a primitive way of re-calling</span><br><span class="line">       &quot;the command that started ...&quot;: You just type the first letter of  that</span><br><span class="line">       command, then hit `C-a &#123;&#x27; and screen tries to find a previous line that</span><br><span class="line">       matches with the `prompt character&#x27; to the left  of  the  cursor.  This</span><br><span class="line">       line  is  pasted into this window&#x27;s input queue.  Thus you have a crude</span><br><span class="line">       command history (made up by  the  visible  window  and  its  scrollback</span><br><span class="line">       buffer).</span><br><span class="line"></span><br><span class="line">       hstatus status</span><br><span class="line"></span><br><span class="line">       Change the window&#x27;s hardstatus line to the string status.</span><br><span class="line"></span><br><span class="line">       idle [timeout [cmd args]]</span><br><span class="line"></span><br><span class="line">       Sets  a command that is run after the specified number of seconds inac-</span><br><span class="line">       tivity is reached. This command will normally be the &quot;blanker&quot;  command</span><br><span class="line">       to  create  a  screen blanker, but it can be any screen command.  If no</span><br><span class="line">       command is specified, only the timeout is set. A timeout  of  zero  (ot</span><br><span class="line">       the  special  timeout  off)  disables  the  timer.  If no arguments are</span><br><span class="line">       given, the current settings are displayed.</span><br><span class="line"></span><br><span class="line">       ignorecase [on|off]</span><br><span class="line"></span><br><span class="line">       Tell screen to ignore the case of characters in  searches.  Default  is</span><br><span class="line">       `off&#x27;.</span><br><span class="line"></span><br><span class="line">       info</span><br><span class="line"></span><br><span class="line">       Uses  the  message  line  to display some information about the current</span><br><span class="line">       window: the cursor position in the form  &quot;(column,row)&quot;  starting  with</span><br><span class="line">       &quot;(1,1)&quot;,  the terminal width and height plus the size of the scrollback</span><br><span class="line">       buffer in lines, like in &quot;(80,24)+50&quot;,  the  current  state  of  window</span><br><span class="line">       XON/XOFF  flow  control  is shown like this (See also section FLOW CON-</span><br><span class="line">       TROL):</span><br><span class="line"></span><br><span class="line">         +flow     automatic flow control, currently on.</span><br><span class="line">         -flow     automatic flow control, currently off.</span><br><span class="line">         +(+)flow  flow control enabled. Agrees with automatic control.</span><br><span class="line">         -(+)flow  flow control disabled. Disagrees with automatic control.</span><br><span class="line">         +(-)flow  flow control enabled. Disagrees with automatic control.</span><br><span class="line">         -(-)flow  flow control disabled. Agrees with automatic control.</span><br><span class="line"></span><br><span class="line">       The current line wrap setting (`+wrap&#x27; indicates enabled, `-wrap&#x27;  not)</span><br><span class="line">       is  also  shown. The flags `ins&#x27;, `org&#x27;, `app&#x27;, `log&#x27;, `mon&#x27; or `nored&#x27;</span><br><span class="line">       are displayed when the window is in insert mode, origin mode,  applica-</span><br><span class="line">       tion-keypad  mode,  has  output logging, activity monitoring or partial</span><br><span class="line">       redraw enabled.</span><br><span class="line"></span><br><span class="line">       The currently active character set (G0, G1, G2, or G3)  and  in  square</span><br><span class="line">       brackets  the  terminal character sets that are currently designated as</span><br><span class="line">       G0 through G3 is shown. If the window is  in  UTF-8  mode,  the  string</span><br><span class="line">       &quot;UTF-8&quot; is shown instead.</span><br><span class="line"></span><br><span class="line">       Additional  modes  depending on the type of the window are displayed at</span><br><span class="line">       the end of the status line (See also chapter &quot;WINDOW TYPES&quot;).</span><br><span class="line">       If the state machine of the  terminal  emulator  is  in  a  non-default</span><br><span class="line">       state,  the  info line is started with a string identifying the current</span><br><span class="line">       state.</span><br><span class="line">       For system information use the &quot;time&quot; command.</span><br><span class="line"></span><br><span class="line">       ins_reg [key]</span><br><span class="line"></span><br><span class="line">       No longer exists, use &quot;paste&quot; instead.</span><br><span class="line"></span><br><span class="line">       kill</span><br><span class="line"></span><br><span class="line">       Kill current window.</span><br><span class="line">       If there is an `exec&#x27; command running then it is killed. Otherwise  the</span><br><span class="line">       process  (shell) running in the window receives a HANGUP condition, the</span><br><span class="line">       window structure is removed  and  screen  (your  display)  switches  to</span><br><span class="line">       another  window.   When  the  last  window  is destroyed, screen exits.</span><br><span class="line">       After a kill screen switches to the previously displayed window.</span><br><span class="line">       Note: Emacs users should keep this command  in  mind,  when  killing  a</span><br><span class="line">       line.   It  is recommended not to use &quot;C-a&quot; as the screen escape key or</span><br><span class="line">       to rebind kill to &quot;C-a K&quot;.</span><br><span class="line"></span><br><span class="line">       lastmsg</span><br><span class="line"></span><br><span class="line">       Redisplay the last contents of  the  message/status  line.   Useful  if</span><br><span class="line">       you&#x27;re  typing  when  a message appears, because  the message goes away</span><br><span class="line">       when you press a key (unless your terminal has a hardware status line).</span><br><span class="line">       Refer to the commands &quot;msgwait&quot; and &quot;msgminwait&quot; for fine tuning.</span><br><span class="line"></span><br><span class="line">       license</span><br><span class="line"></span><br><span class="line">       Display  the  disclaimer  page. This is done whenever screen is started</span><br><span class="line">       without  options,  which  should  be  often  enough.   See   also   the</span><br><span class="line">       &quot;startup_message&quot; command.</span><br><span class="line"></span><br><span class="line">       lockscreen</span><br><span class="line"></span><br><span class="line">       Lock  this  display.   Call  a  screenlock  program  (/local/bin/lck or</span><br><span class="line">       /usr/bin/lock or a builtin if no other is available). Screen  does  not</span><br><span class="line">       accept  any  command keys until this program terminates. Meanwhile pro-</span><br><span class="line">       cesses in  the  windows  may  continue,  as  the  windows  are  in  the</span><br><span class="line">       `detached&#x27;  state.  The  screenlock  program may be changed through the</span><br><span class="line">       environment variable $LOCKPRG (which must be  set  in  the  shell  from</span><br><span class="line">       which screen is started) and is executed with the user&#x27;s uid and gid.</span><br><span class="line">       Warning:  When you leave other shells unlocked and you have no password</span><br><span class="line">       set on screen, the lock is void: One could  easily  re-attach  from  an</span><br><span class="line">       unlocked shell. This feature should rather be called `lockterminal&#x27;.</span><br><span class="line"></span><br><span class="line">       log [on|off]</span><br><span class="line"></span><br><span class="line">       Start/stop writing output of the current window to a file &quot;screenlog.n&quot;</span><br><span class="line">       in the window&#x27;s default directory, where n is the number of the current</span><br><span class="line">       window.  This filename can be changed with the `logfile&#x27; command. If no</span><br><span class="line">       parameter is given, the state of logging is toggled. The session log is</span><br><span class="line">       appended to the previous contents of the file if it already exists. The</span><br><span class="line">       current contents and the contents of the  scrollback  history  are  not</span><br><span class="line">       included in the session log.  Default is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       logfile filename</span><br><span class="line">       logfile flush secs</span><br><span class="line"></span><br><span class="line">       Defines  the name the logfiles will get. The default is &quot;screenlog.%n&quot;.</span><br><span class="line">       The second form changes the number of seconds screen will  wait  before</span><br><span class="line">       flushing the logfile buffer to the file-system. The default value is 10</span><br><span class="line">       seconds.</span><br><span class="line"></span><br><span class="line">       login [on|off]</span><br><span class="line"></span><br><span class="line">       Adds or removes the entry in the utmp database  file  for  the  current</span><br><span class="line">       window.  This controls if the window is `logged in&#x27;.  When no parameter</span><br><span class="line">       is given, the login state of the window is  toggled.   Additionally  to</span><br><span class="line">       that  toggle,  it  is convenient having a `log in&#x27; and a `log out&#x27; key.</span><br><span class="line">       E.g. `bind I login on&#x27; and `bind O login off&#x27; will map these keys to be</span><br><span class="line">       C-a  I  and C-a O.  The default setting (in config.h.in) should be &quot;on&quot;</span><br><span class="line">       for a screen that runs under suid-root.  Use the &quot;deflogin&quot; command  to</span><br><span class="line">       change  the default login state for new windows. Both commands are only</span><br><span class="line">       present when screen has been compiled with utmp support.</span><br><span class="line"></span><br><span class="line">       logtstamp [on|off]</span><br><span class="line">       logtstamp after [secs]</span><br><span class="line">       logtstamp string [string]</span><br><span class="line"></span><br><span class="line">       This command controls logfile time-stamp mechanism of screen.  If time-</span><br><span class="line">       stamps  are  turned  &quot;on&quot;,  screen adds a string containing the current</span><br><span class="line">       time to the logfile after two minutes of inactivity.  When output  con-</span><br><span class="line">       tinues  and  more  than another two minutes have passed, a second time-</span><br><span class="line">       stamp is added to document the restart of the output.  You  can  change</span><br><span class="line">       this  timeout  with  the  second form of the command. The third form is</span><br><span class="line">       used for customizing the time-stamp string (`-- %n:%t -- time-stamp  --</span><br><span class="line">       %M/%d/%y %c:%s --\n&#x27; by default).</span><br><span class="line"></span><br><span class="line">       mapdefault</span><br><span class="line"></span><br><span class="line">       Tell  screen  that the next input character should only be looked up in</span><br><span class="line">       the default bindkey table. See also &quot;bindkey&quot;.</span><br><span class="line"></span><br><span class="line">       mapnotnext</span><br><span class="line"></span><br><span class="line">       Like mapdefault, but don&#x27;t even look in the default bindkey table.</span><br><span class="line"></span><br><span class="line">       maptimeout [timo]</span><br><span class="line"></span><br><span class="line">       Set the inter-character timer for input sequence detection to a timeout</span><br><span class="line">       of  timo ms. The default timeout is 300ms. Maptimeout with no arguments</span><br><span class="line">       shows the current setting.  See also &quot;bindkey&quot;.</span><br><span class="line"></span><br><span class="line">       markkeys string</span><br><span class="line"></span><br><span class="line">       This is a method of changing the keymap  used  for  copy/history  mode.</span><br><span class="line">       The  string  is made up of oldchar=newchar pairs which are separated by</span><br><span class="line">       `:&#x27;. Example: The string &quot;B=^B:F=^F&quot; will change the keys `C-b&#x27; and `C-</span><br><span class="line">       f&#x27; to the vi style binding (scroll up/down fill page).  This happens to</span><br><span class="line">       be the  default  binding  for  `B&#x27;  and  `F&#x27;.   The  command  &quot;markkeys</span><br><span class="line">       h=^B:l=^F:$=^E&quot; would set the mode for an emacs-style binding.  If your</span><br><span class="line">       terminal sends characters, that cause you to abort copy mode, then this</span><br><span class="line">       command  may help by binding these characters to do nothing.  The no-op</span><br><span class="line">       character is `@&#x27; and is used like this: &quot;markkeys @=L=H&quot; if you do  not</span><br><span class="line">       want to use the `H&#x27; or `L&#x27; commands any longer.  As shown in this exam-</span><br><span class="line">       ple, multiple keys can be assigned to one function in a  single  state-</span><br><span class="line">       ment.</span><br><span class="line"></span><br><span class="line">       maxwin num</span><br><span class="line"></span><br><span class="line">       Set  the  maximum  window  number  screen  will  create. Doesn&#x27;t affect</span><br><span class="line">       already existing windows. The number may only be decreased.</span><br><span class="line"></span><br><span class="line">       meta</span><br><span class="line"></span><br><span class="line">       Insert the command  character  (C-a)  in  the  current  window&#x27;s  input</span><br><span class="line">       stream.</span><br><span class="line"></span><br><span class="line">       monitor [on|off]</span><br><span class="line"></span><br><span class="line">       Toggles  activity  monitoring of windows.  When monitoring is turned on</span><br><span class="line">       and an affected window  is  switched  into  the  background,  you  will</span><br><span class="line">       receive  the  activity  notification  message in the status line at the</span><br><span class="line">       first sign of output and the window will also be marked with an `@&#x27;  in</span><br><span class="line">       the  window-status  display.   Monitoring is initially off for all win-</span><br><span class="line">       dows.</span><br><span class="line"></span><br><span class="line">       msgminwait sec</span><br><span class="line"></span><br><span class="line">       Defines the time screen delays a new message when one message  is  cur-</span><br><span class="line">       rently displayed.  The default is 1 second.</span><br><span class="line"></span><br><span class="line">       msgwait sec</span><br><span class="line"></span><br><span class="line">       Defines  the  time a message is displayed if screen is not disturbed by</span><br><span class="line">       other activity. The default is 5 seconds.</span><br><span class="line"></span><br><span class="line">       multiuser on|off</span><br><span class="line"></span><br><span class="line">       Switch between singleuser and multiuser mode. Standard screen operation</span><br><span class="line">       is  singleuser.  In  multiuser  mode  the  commands `acladd&#x27;, `aclchg&#x27;,</span><br><span class="line">       `aclgrp&#x27; and `acldel&#x27; can be used to enable (and disable)  other  users</span><br><span class="line">       accessing this screen session.</span><br><span class="line"></span><br><span class="line">       nethack on|off</span><br><span class="line"></span><br><span class="line">       Changes the kind of error messages used by screen.  When you are famil-</span><br><span class="line">       iar with the game &quot;nethack&quot;, you may enjoy the  nethack-style  messages</span><br><span class="line">       which will often blur the facts a little, but are much funnier to read.</span><br><span class="line">       Anyway, standard messages often tend to be unclear as well.</span><br><span class="line">       This option is only available if screen was compiled with  the  NETHACK</span><br><span class="line">       flag defined. The default setting is then determined by the presence of</span><br><span class="line">       the environment variable $NETHACKOPTIONS.</span><br><span class="line"></span><br><span class="line">       next</span><br><span class="line"></span><br><span class="line">       Switch to the next window.  This command  can  be  used  repeatedly  to</span><br><span class="line">       cycle through the list of windows.</span><br><span class="line"></span><br><span class="line">       nonblock [on|off|numsecs]</span><br><span class="line"></span><br><span class="line">       Tell  screen  how to deal with user interfaces (displays) that cease to</span><br><span class="line">       accept output. This can happen if a user presses ^S or a TCP/modem con-</span><br><span class="line">       nection gets cut but no hangup is received. If nonblock is off (this is</span><br><span class="line">       the default) screen waits until the display restarts to accept the out-</span><br><span class="line">       put.  If  nonblock is on, screen waits until the timeout is reached (on</span><br><span class="line">       is treated as 1s). If the display  still  doesn&#x27;t  receive  characters,</span><br><span class="line">       screen will consider it &quot;blocked&quot; and stop sending characters to it. If</span><br><span class="line">       at some time it restarts to accept characters, screen will unblock  the</span><br><span class="line">       display and redisplay the updated window contents.</span><br><span class="line"></span><br><span class="line">       number [n]</span><br><span class="line"></span><br><span class="line">       Change  the  current  windows  number. If the given number n is already</span><br><span class="line">       used by another window, both windows  exchange  their  numbers.  If  no</span><br><span class="line">       argument  is specified, the current window number (and title) is shown.</span><br><span class="line"></span><br><span class="line">       obuflimit [limit]</span><br><span class="line"></span><br><span class="line">       If the output buffer contains more bytes than the specified  limit,  no</span><br><span class="line">       more  data  will be read from the windows. The default value is 256. If</span><br><span class="line">       you have a fast display (like xterm), you can set  it  to  some  higher</span><br><span class="line">       value. If no argument is specified, the current setting is displayed.</span><br><span class="line"></span><br><span class="line">       only</span><br><span class="line"></span><br><span class="line">       Kill all regions but the current one.</span><br><span class="line"></span><br><span class="line">       other</span><br><span class="line"></span><br><span class="line">       Switch  to  the  window  displayed  previously.  If this window does no</span><br><span class="line">       longer exist, other has the same effect as next.</span><br><span class="line"></span><br><span class="line">       partial on|off</span><br><span class="line"></span><br><span class="line">       Defines whether the display should be  refreshed  (as  with  redisplay)</span><br><span class="line">       after  switching  to  the current window. This command only affects the</span><br><span class="line">       current window.  To immediately affect all windows use  the  allpartial</span><br><span class="line">       command.  Default is `off&#x27;, of course.  This default is fixed, as there</span><br><span class="line">       is currently no defpartial command.</span><br><span class="line"></span><br><span class="line">       password [crypted_pw]</span><br><span class="line"></span><br><span class="line">       Present a crypted password in your &quot;.screenrc&quot; file and screen will ask</span><br><span class="line">       for  it, whenever someone attempts to resume a detached. This is useful</span><br><span class="line">       if you have privileged programs running under screen and  you  want  to</span><br><span class="line">       protect  your session from reattach attempts by another user masquerad-</span><br><span class="line">       ing as your uid (i.e. any superuser.)  If no crypted password is speci-</span><br><span class="line">       fied, screen prompts twice for typing a password and places its encryp-</span><br><span class="line">       tion in the paste buffer.  Default is `none&#x27;,  this  disables  password</span><br><span class="line">       checking.</span><br><span class="line"></span><br><span class="line">       paste [registers [dest_reg]]</span><br><span class="line"></span><br><span class="line">       Write  the  (concatenated)  contents  of the specified registers to the</span><br><span class="line">       stdin queue of the current window. The register &#x27;.&#x27; is treated  as  the</span><br><span class="line">       paste  buffer. If no parameter is given the user is prompted for a sin-</span><br><span class="line">       gle register to paste.  The paste buffer can be filled with  the  copy,</span><br><span class="line">       history  and  readbuf commands.  Other registers can be filled with the</span><br><span class="line">       register, readreg and paste commands.  If paste is called with a second</span><br><span class="line">       argument,  the  contents  of the specified registers is pasted into the</span><br><span class="line">       named destination register rather than the window. If &#x27;.&#x27;  is  used  as</span><br><span class="line">       the  second  argument,  the  displays  paste buffer is the destination.</span><br><span class="line">       Note, that &quot;paste&quot; uses a wide variety of resources: Whenever a  second</span><br><span class="line">       argument  is  specified  no  current  window is needed. When the source</span><br><span class="line">       specification only contains registers (not the paste buffer) then there</span><br><span class="line">       need not be a current display (terminal attached), as the registers are</span><br><span class="line">       a global resource. The paste buffer exists once for every user.</span><br><span class="line"></span><br><span class="line">       pastefont [on|off]</span><br><span class="line"></span><br><span class="line">       Tell screen to include  font  information  in  the  paste  buffer.  The</span><br><span class="line">       default  is  not  to do so. This command is especially useful for multi</span><br><span class="line">       character fonts like kanji.</span><br><span class="line"></span><br><span class="line">       pow_break</span><br><span class="line"></span><br><span class="line">       Reopen the window&#x27;s terminal line  and  send  a  break  condition.  See</span><br><span class="line">       `break&#x27;.</span><br><span class="line"></span><br><span class="line">       pow_detach</span><br><span class="line"></span><br><span class="line">       Power  detach.  Mainly the same as detach, but also sends a HANGUP sig-</span><br><span class="line">       nal to the parent process of screen.  CAUTION: This will  result  in  a</span><br><span class="line">       logout, when screen was started from your login shell.</span><br><span class="line"></span><br><span class="line">       pow_detach_msg [message]</span><br><span class="line"></span><br><span class="line">       The message specified here is output whenever a `Power detach&#x27; was per-</span><br><span class="line">       formed. It may be used as a replacement for  a  logout  message  or  to</span><br><span class="line">       reset baud rate, etc.  Without parameter, the current message is shown.</span><br><span class="line"></span><br><span class="line">       prev</span><br><span class="line"></span><br><span class="line">       Switch to the window with the next lower number.  This command  can  be</span><br><span class="line">       used repeatedly to cycle through the list of windows.</span><br><span class="line"></span><br><span class="line">       printcmd [cmd]</span><br><span class="line"></span><br><span class="line">       If  cmd  is not an empty string, screen will not use the terminal capa-</span><br><span class="line">       bilities &quot;po/pf&quot; if it detects an ansi print sequence ESC [  5  i,  but</span><br><span class="line">       pipe the output into cmd.  This should normally be a command like &quot;lpr&quot;</span><br><span class="line">       or &quot;&#x27;cat &gt; /tmp/scrprint&#x27;&quot;.  printcmd without a  command  displays  the</span><br><span class="line">       current  setting.  The ansi sequence ESC \ ends printing and closes the</span><br><span class="line">       pipe.</span><br><span class="line">       Warning: Be careful with this command! If other user have write  access</span><br><span class="line">       to your terminal, they will be able to fire off print commands.</span><br><span class="line"></span><br><span class="line">       process [key]</span><br><span class="line"></span><br><span class="line">       Stuff the contents of the specified register into screen&#x27;s input queue.</span><br><span class="line">       If no argument is given you are prompted for a register name. The  text</span><br><span class="line">       is  parsed  as  if  it had been typed in from the user&#x27;s keyboard. This</span><br><span class="line">       command can be used to bind multiple actions to a single key.</span><br><span class="line"></span><br><span class="line">       quit</span><br><span class="line"></span><br><span class="line">       Kill all windows and terminate screen.  Note that on VT100-style termi-</span><br><span class="line">       nals  the keys C-4 and C-\ are identical.  This makes the default bind-</span><br><span class="line">       ings dangerous: Be careful not to type C-a C-4  when  selecting  window</span><br><span class="line">       no.  4.  Use the empty bind command (as in &quot;bind &#x27;^\&#x27;&quot;) to remove a key</span><br><span class="line">       binding.</span><br><span class="line"></span><br><span class="line">       readbuf [-e encoding] [filename]</span><br><span class="line"></span><br><span class="line">       Reads the contents of the specified file into the  paste  buffer.   You</span><br><span class="line">       can tell screen the encoding of the file via the -e option.  If no file</span><br><span class="line">       is specified, the screen-exchange filename is used.  See also  &quot;buffer-</span><br><span class="line">       file&quot; command.</span><br><span class="line"></span><br><span class="line">       readreg [-e encoding] [register [filename]]</span><br><span class="line"></span><br><span class="line">       Does  one of two things, dependent on number of arguments: with zero or</span><br><span class="line">       one arguments it it duplicates the paste buffer contents into the  reg-</span><br><span class="line">       ister  specified  or entered at the prompt. With two arguments it reads</span><br><span class="line">       the contents of the named file into the register, just as readbuf reads</span><br><span class="line">       the  screen-exchange  file  into the paste buffer.  You can tell screen</span><br><span class="line">       the encoding of the file via the -e option.  The following example will</span><br><span class="line">       paste the system&#x27;s password file into the screen window (using register</span><br><span class="line">       p, where a copy remains):</span><br><span class="line"></span><br><span class="line">                   C-a : readreg p /etc/passwd</span><br><span class="line">                   C-a : paste p</span><br><span class="line"></span><br><span class="line">       redisplay</span><br><span class="line"></span><br><span class="line">       Redisplay the current window. Needed to get a full  redisplay  when  in</span><br><span class="line">       partial redraw mode.</span><br><span class="line"></span><br><span class="line">       register [-e encoding] key string</span><br><span class="line"></span><br><span class="line">       Save  the  specified  string  to the register key.  The encoding of the</span><br><span class="line">       string can be specified via the -e option.  See also the  &quot;paste&quot;  com-</span><br><span class="line">       mand.</span><br><span class="line"></span><br><span class="line">       remove</span><br><span class="line"></span><br><span class="line">       Kill the current region. This is a no-op if there is only one region.</span><br><span class="line"></span><br><span class="line">       removebuf</span><br><span class="line"></span><br><span class="line">       Unlinks  the  screen-exchange  file used by the commands &quot;writebuf&quot; and</span><br><span class="line">       &quot;readbuf&quot;.</span><br><span class="line"></span><br><span class="line">       reset</span><br><span class="line"></span><br><span class="line">       Reset the virtual  terminal  to  its  &quot;power-on&quot;  values.  Useful  when</span><br><span class="line">       strange  settings  (like  scroll regions or graphics character set) are</span><br><span class="line">       left over from an application.</span><br><span class="line"></span><br><span class="line">       resize</span><br><span class="line"></span><br><span class="line">       Resize the current region. The space will be removed from or  added  to</span><br><span class="line">       the  region below or if there&#x27;s not enough space from the region above.</span><br><span class="line"></span><br><span class="line">              resize +N   increase current region height by N</span><br><span class="line"></span><br><span class="line">              resize -N   decrease current region height by N</span><br><span class="line"></span><br><span class="line">              resize  N   set current region height to N</span><br><span class="line"></span><br><span class="line">              resize  =   make all windows equally high</span><br><span class="line"></span><br><span class="line">              resize  max maximize current region height</span><br><span class="line"></span><br><span class="line">              resize  min minimize current region height</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       screen [-opts] [n] [cmd [args]]</span><br><span class="line"></span><br><span class="line">       Establish a new window.  The flow-control options (-f,  -fn  and  -fa),</span><br><span class="line">       title  (a.k.a.) option (-t), login options (-l and -ln) , terminal type</span><br><span class="line">       option (-T &lt;term&gt;), the all-capability-flag (-a) and scrollback  option</span><br><span class="line">       (-h  &lt;num&gt;)  may be specified with each command.  The option (-M) turns</span><br><span class="line">       monitoring on for this window.  The option (-L) turns output logging on</span><br><span class="line">       for  this  window.  If an optional number n in the range 0..9 is given,</span><br><span class="line">       the window number n is assigned to the newly  created  window  (or,  if</span><br><span class="line">       this  number  is already in-use, the next available number).  If a com-</span><br><span class="line">       mand is specified after &quot;screen&quot;, this command (with  the  given  argu-</span><br><span class="line">       ments)  is started in the window; otherwise, a shell is created.  Thus,</span><br><span class="line">       if your &quot;.screenrc&quot; contains the lines</span><br><span class="line"></span><br><span class="line">                   # example for .screenrc:</span><br><span class="line">                   screen 1</span><br><span class="line">                   screen -fn -t foobar -L 2 telnet foobar</span><br><span class="line"></span><br><span class="line">       screen creates a shell window (in window #1) and a window with a TELNET</span><br><span class="line">       connection  to the machine foobar (with no flow-control using the title</span><br><span class="line">       &quot;foobar&quot; in window #2) and will write a logfile (&quot;screenlog.2&quot;) of  the</span><br><span class="line">       telnet session.  Note, that unlike previous versions of screen no addi-</span><br><span class="line">       tional default window is created when &quot;screen&quot; commands are included in</span><br><span class="line">       your  &quot;.screenrc&quot;  file.  When  the initialization is completed, screen</span><br><span class="line">       switches to the last window specified in your  .screenrc  file  or,  if</span><br><span class="line">       none, opens a default window #0.</span><br><span class="line">       Screen  has built in some functionality of &quot;cu&quot; and &quot;telnet&quot;.  See also</span><br><span class="line">       chapter &quot;WINDOW TYPES&quot;.</span><br><span class="line"></span><br><span class="line">       scrollback num</span><br><span class="line"></span><br><span class="line">       Set the size of the scrollback buffer for the current  windows  to  num</span><br><span class="line">       lines.  The  default scrollback is 100 lines.  See also the &quot;defscroll-</span><br><span class="line">       back&quot; command and use &quot;C-a i&quot; to view the current setting.</span><br><span class="line"></span><br><span class="line">       select [WindowID]</span><br><span class="line"></span><br><span class="line">       Switch to the window identified by WindowID.  This can be a prefix of a</span><br><span class="line">       window title (alphanumeric window name) or a window number.  The param-</span><br><span class="line">       eter is optional and if omitted, you get prompted  for  an  identifier.</span><br><span class="line">       When  a  new  window  is  established,  the  first  available number is</span><br><span class="line">       assigned to this window.  Thus, the first window can  be  activated  by</span><br><span class="line">       &quot;select  0&quot;.   The  number of windows is limited at compile-time by the</span><br><span class="line">       MAXWIN configuration parameter.  There are two special  WindowIDs,  &quot;-&quot;</span><br><span class="line">       selects  the  internal blank window and &quot;.&quot; selects the current window.</span><br><span class="line">       The latter is useful if used with screen&#x27;s &quot;-X&quot; option.</span><br><span class="line"></span><br><span class="line">       sessionname [name]</span><br><span class="line"></span><br><span class="line">       Rename the current session. Note, that  for  &quot;screen  -list&quot;  the  name</span><br><span class="line">       shows up with the process-id prepended. If the argument &quot;name&quot; is omit-</span><br><span class="line">       ted, the name of this session is displayed. Caution: The $STY  environ-</span><br><span class="line">       ment  variables  still reflects the old name. This may result in confu-</span><br><span class="line">       sion.  The default is constructed from the tty and host names.</span><br><span class="line"></span><br><span class="line">       setenv [var [string]]</span><br><span class="line"></span><br><span class="line">       Set the environment variable var to value string.  If only var is spec-</span><br><span class="line">       ified,  the  user  will be prompted to enter a value.  If no parameters</span><br><span class="line">       are specified, the user will be prompted for both variable  and  value.</span><br><span class="line">       The environment is inherited by all subsequently forked shells.</span><br><span class="line"></span><br><span class="line">       setsid [on|off]</span><br><span class="line"></span><br><span class="line">       Normally screen uses different sessions and process groups for the win-</span><br><span class="line">       dows. If setsid is turned off, this is not done anymore and all windows</span><br><span class="line">       will  be  in the same process group as the screen backend process. This</span><br><span class="line">       also breaks job-control, so be careful.  The default is on, of  course.</span><br><span class="line">       This command is probably useful only in rare circumstances.</span><br><span class="line"></span><br><span class="line">       shell command</span><br><span class="line"></span><br><span class="line">       Set  the  command to be used to create a new shell.  This overrides the</span><br><span class="line">       value of the environment variable $SHELL.  This is useful if you&#x27;d like</span><br><span class="line">       to  run a tty-enhancer which is expecting to execute the program speci-</span><br><span class="line">       fied in $SHELL. If the command begins with a &#x27;-&#x27; character,  the  shell</span><br><span class="line">       will be started as a login-shell.</span><br><span class="line"></span><br><span class="line">       shelltitle title</span><br><span class="line"></span><br><span class="line">       Set  the  title for all shells created during startup or by the C-A C-c</span><br><span class="line">       command.  For details about what a title is, see the  discussion  enti-</span><br><span class="line">       tled &quot;TITLES (naming windows)&quot;.</span><br><span class="line"></span><br><span class="line">       silence [on|off|sec]</span><br><span class="line"></span><br><span class="line">       Toggles  silence  monitoring of windows.  When silence is turned on and</span><br><span class="line">       an affected window is switched into the background,  you  will  receive</span><br><span class="line">       the  silence  notification message in the status line after a specified</span><br><span class="line">       period of inactivity (silence). The default timeout can be changed with</span><br><span class="line">       the  `silencewait&#x27; command or by specifying a number of seconds instead</span><br><span class="line">       of `on&#x27; or `off&#x27;.  Silence is initially off for all windows.</span><br><span class="line"></span><br><span class="line">       silencewait sec</span><br><span class="line"></span><br><span class="line">       Define the time that all windows  monitored  for  silence  should  wait</span><br><span class="line">       before displaying a message. Default 30 seconds.</span><br><span class="line"></span><br><span class="line">       sleep num</span><br><span class="line"></span><br><span class="line">       This  command will pause the execution of a .screenrc file for num sec-</span><br><span class="line">       onds.  Keyboard activity will end the sleep.  It may be  used  to  give</span><br><span class="line">       users a chance to read the messages output by &quot;echo&quot;.</span><br><span class="line"></span><br><span class="line">       slowpaste msec</span><br><span class="line"></span><br><span class="line">       Define  the  speed at which text is inserted into the current window by</span><br><span class="line">       the paste (&quot;C-a ]&quot;) command.  If the slowpaste value is nonzero text is</span><br><span class="line">       written  character by character.  screen will make a pause of msec mil-</span><br><span class="line">       liseconds after each single character write to allow the application to</span><br><span class="line">       process its input. Only use slowpaste if your underlying system exposes</span><br><span class="line">       flow control problems while pasting large amounts of text.</span><br><span class="line"></span><br><span class="line">       source file</span><br><span class="line"></span><br><span class="line">       Read and execute commands from file file. Source commands may be nested</span><br><span class="line">       to  a  maximum  recursion level of ten. If file is not an absolute path</span><br><span class="line">       and screen is already processing a source command, the parent directory</span><br><span class="line">       of  the  running source command file is used to search for the new com-</span><br><span class="line">       mand file before screen&#x27;s current directory.</span><br><span class="line"></span><br><span class="line">       Note that termcap/terminfo/termcapinfo commands only  work  at  startup</span><br><span class="line">       and  reattach  time,  so  they must be reached via the default screenrc</span><br><span class="line">       files to have an effect.</span><br><span class="line"></span><br><span class="line">       sorendition [attr [color]]</span><br><span class="line"></span><br><span class="line">       Change the way screen does highlighting for text marking  and  printing</span><br><span class="line">       messages.  See the &quot;STRING ESCAPES&quot; chapter for the syntax of the modi-</span><br><span class="line">       fiers.  The default is currently &quot;=s dd&quot; (standout, default colors).</span><br><span class="line"></span><br><span class="line">       split</span><br><span class="line"></span><br><span class="line">       Split the current region into two new ones. All regions on the  display</span><br><span class="line">       are  resized  to make room for the new region. The blank window is dis-</span><br><span class="line">       played on the new region. Use the &quot;remove&quot; or  the  &quot;only&quot;  command  to</span><br><span class="line">       delete regions.</span><br><span class="line"></span><br><span class="line">       startup_message on|off</span><br><span class="line"></span><br><span class="line">       Select  whether  you  want  to see the copyright notice during startup.</span><br><span class="line">       Default is `on&#x27;, as you probably noticed.</span><br><span class="line"></span><br><span class="line">       stuff string</span><br><span class="line"></span><br><span class="line">       Stuff the string string in the input  buffer  of  the  current  window.</span><br><span class="line">       This is like the &quot;paste&quot; command but with much less overhead.  You can-</span><br><span class="line">       not paste large buffers with the &quot;stuff&quot; command. It is most useful for</span><br><span class="line">       key bindings. See also &quot;bindkey&quot;.</span><br><span class="line"></span><br><span class="line">       su [username [password [password2]]</span><br><span class="line"></span><br><span class="line">       Substitute  the  user of a display. The command prompts for all parame-</span><br><span class="line">       ters that are omitted. If passwords are specified as  parameters,  they</span><br><span class="line">       have  to be specified un-crypted. The first password is matched against</span><br><span class="line">       the systems passwd database, the second password is matched against the</span><br><span class="line">       screen  password as set with the commands &quot;acladd&quot; or &quot;password&quot;.  &quot;Su&quot;</span><br><span class="line">       may be useful for the screen administrator to  test  multiuser  setups.</span><br><span class="line">       When  the  identification  fails,  the  user has access to the commands</span><br><span class="line">       available for user nobody.  These are &quot;detach&quot;,  &quot;license&quot;,  &quot;version&quot;,</span><br><span class="line">       &quot;help&quot; and &quot;displays&quot;.</span><br><span class="line"></span><br><span class="line">       suspend</span><br><span class="line"></span><br><span class="line">       Suspend  screen.  The windows are in the `detached&#x27; state, while screen</span><br><span class="line">       is suspended. This feature relies on the shell being  able  to  do  job</span><br><span class="line">       control.</span><br><span class="line"></span><br><span class="line">       term term</span><br><span class="line"></span><br><span class="line">       In each window&#x27;s environment screen opens, the $TERM variable is set to</span><br><span class="line">       &quot;screen&quot; by default.  But when no description for &quot;screen&quot; is installed</span><br><span class="line">       in  the  local  termcap or terminfo data base, you set $TERM to - say -</span><br><span class="line">       &quot;vt100&quot;. This won&#x27;t do much harm, as screen is  VT100/ANSI  compatible.</span><br><span class="line">       The  use  of the &quot;term&quot; command is discouraged for non-default purpose.</span><br><span class="line">       That is, one may want to specify special $TERM  settings  (e.g.  vt100)</span><br><span class="line">       for  the  next  &quot;screen  rlogin  othermachine&quot; command. Use the command</span><br><span class="line">       &quot;screen -T vt100 rlogin othermachine&quot; rather than setting and resetting</span><br><span class="line">       the default.</span><br><span class="line"></span><br><span class="line">       termcap term terminal-tweaks [window-tweaks]</span><br><span class="line">       terminfo term terminal-tweaks [window-tweaks]</span><br><span class="line">       termcapinfo term terminal-tweaks [window-tweaks]</span><br><span class="line"></span><br><span class="line">       Use  this command to modify your terminal&#x27;s termcap entry without going</span><br><span class="line">       through all the hassles involved in creating a  custom  termcap  entry.</span><br><span class="line">       Plus,  you  can optionally customize the termcap generated for the win-</span><br><span class="line">       dows.  You have to place these commands in one of the screenrc  startup</span><br><span class="line">       files, as they are meaningless once the terminal emulator is booted.</span><br><span class="line">       If  your  system  works uses the terminfo database rather than termcap,</span><br><span class="line">       screen will understand the  `terminfo&#x27;  command,  which  has  the  same</span><br><span class="line">       effects  as the `termcap&#x27; command.  Two separate commands are provided,</span><br><span class="line">       as there are subtle syntactic differences, e.g. when parameter interpo-</span><br><span class="line">       lation (using `%&#x27;) is required. Note that termcap names of the capabil-</span><br><span class="line">       ities have to be used with the `terminfo&#x27; command.</span><br><span class="line">       In many cases, where the arguments are valid in both terminfo and term-</span><br><span class="line">       cap  syntax,  you  can  use  the command `termcapinfo&#x27;, which is just a</span><br><span class="line">       shorthand for a pair of `termcap&#x27; and `terminfo&#x27; commands with  identi-</span><br><span class="line">       cal arguments.</span><br><span class="line"></span><br><span class="line">       The  first  argument  specifies which terminal(s) should be affected by</span><br><span class="line">       this definition.  You can specify multiple terminal names by separating</span><br><span class="line">       them  with `|&#x27;s.  Use `*&#x27; to match all terminals and `vt*&#x27; to match all</span><br><span class="line">       terminals that begin with &quot;vt&quot;.</span><br><span class="line"></span><br><span class="line">       Each tweak argument contains one or more termcap defines (separated  by</span><br><span class="line">       `:&#x27;s)  to  be  inserted  at the start of the appropriate termcap entry,</span><br><span class="line">       enhancing it or overriding existing values.  The first  tweak  modifies</span><br><span class="line">       your  terminal&#x27;s  termcap,  and contains definitions that your terminal</span><br><span class="line">       uses to perform certain functions.  Specify a null string to leave this</span><br><span class="line">       unchanged (e.g. &#x27;&#x27;).  The second (optional) tweak modifies all the win-</span><br><span class="line">       dow termcaps, and should contain definitions  that  screen  understands</span><br><span class="line">       (see the &quot;VIRTUAL TERMINAL&quot; section).</span><br><span class="line"></span><br><span class="line">       Some examples:</span><br><span class="line"></span><br><span class="line">              termcap xterm*  LP:hs@</span><br><span class="line"></span><br><span class="line">       Informs  screen  that  all  terminals that begin with `xterm&#x27; have firm</span><br><span class="line">       auto-margins that allow the last position on the screen to  be  updated</span><br><span class="line">       (LP), but they don&#x27;t really have a status line (no &#x27;hs&#x27; - append `@&#x27; to</span><br><span class="line">       turn entries off).  Note that we assume `LP&#x27;  for  all  terminal  names</span><br><span class="line">       that  start  with &quot;vt&quot;, but only if you don&#x27;t specify a termcap command</span><br><span class="line">       for that terminal.</span><br><span class="line"></span><br><span class="line">              termcap vt*  LP</span><br><span class="line">              termcap vt102|vt220  Z0=\E[?3h:Z1=\E[?3l</span><br><span class="line"></span><br><span class="line">       Specifies the firm-margined `LP&#x27;  capability  for  all  terminals  that</span><br><span class="line">       begin with `vt&#x27;, and the second line will also add the escape-sequences</span><br><span class="line">       to switch into (Z0) and back out of (Z1) 132-character-per-line mode if</span><br><span class="line">       this  is a VT102 or VT220.  (You must specify Z0 and Z1 in your termcap</span><br><span class="line">       to use the width-changing commands.)</span><br><span class="line"></span><br><span class="line">              termcap vt100  &quot;&quot;  l0=PF1:l1=PF2:l2=PF3:l3=PF4</span><br><span class="line"></span><br><span class="line">       This leaves your vt100 termcap alone and adds the function  key  labels</span><br><span class="line">       to each window&#x27;s termcap entry.</span><br><span class="line"></span><br><span class="line">              termcap h19|z19  am@:im=\E@:ei=\EO  dc=\E[P</span><br><span class="line"></span><br><span class="line">       Takes a h19 or z19 termcap and turns off auto-margins (am@) and enables</span><br><span class="line">       the insert mode (im) and end-insert (ei) capabilities (the `@&#x27;  in  the</span><br><span class="line">       `im&#x27; string is after the `=&#x27;, so it is part of the string).  Having the</span><br><span class="line">       `im&#x27; and `ei&#x27; definitions put into your terminal&#x27;s termcap  will  cause</span><br><span class="line">       screen  to  automatically  advertise the character-insert capability in</span><br><span class="line">       each window&#x27;s termcap.  Each window will also get the  delete-character</span><br><span class="line">       capability  (dc) added to its termcap, which screen will translate into</span><br><span class="line">       a line-update for the terminal (we&#x27;re  pretending  it  doesn&#x27;t  support</span><br><span class="line">       character deletion).</span><br><span class="line"></span><br><span class="line">       If  you  would  like  to fully specify each window&#x27;s termcap entry, you</span><br><span class="line">       should instead set the $SCREENCAP variable  prior  to  running  screen.</span><br><span class="line">       See  the  discussion  on the &quot;VIRTUAL TERMINAL&quot; in this manual, and the</span><br><span class="line">       termcap(5) man page for more information on termcap definitions.</span><br><span class="line"></span><br><span class="line">       time [string]</span><br><span class="line"></span><br><span class="line">       Uses the message line to display the time of day, the  host  name,  and</span><br><span class="line">       the  load  averages  over 1, 5, and 15 minutes (if this is available on</span><br><span class="line">       your system).  For window specific information use &quot;info&quot;.</span><br><span class="line"></span><br><span class="line">       If a string is specified, it changes the format of the time report like</span><br><span class="line">       it  is described in the &quot;STRING ESCAPES&quot; chapter. Screen uses a default</span><br><span class="line">       of &quot;%c:%s %M %d %H%? %l%?&quot;.</span><br><span class="line"></span><br><span class="line">       title [windowtitle]</span><br><span class="line"></span><br><span class="line">       Set the name of the current window to windowtitle. If no name is speci-</span><br><span class="line">       fied, screen prompts for one. This command was known as `aka&#x27; in previ-</span><br><span class="line">       ous releases.</span><br><span class="line"></span><br><span class="line">       unsetenv var</span><br><span class="line"></span><br><span class="line">       Unset an environment variable.</span><br><span class="line"></span><br><span class="line">       utf8 [on|off [on|off]]</span><br><span class="line"></span><br><span class="line">       Change the encoding used in the current window. If utf8 is enabled, the</span><br><span class="line">       strings  sent to the window will be UTF-8 encoded and vice versa. Omit-</span><br><span class="line">       ting the parameter toggles the setting. If a second parameter is given,</span><br><span class="line">       the display&#x27;s encoding is also changed (this should rather be done with</span><br><span class="line">       screen&#x27;s &quot;-U&quot; option).  See also &quot;defutf8&quot;, which changes  the  default</span><br><span class="line">       setting of a new window.</span><br><span class="line"></span><br><span class="line">       vbell [on|off]</span><br><span class="line"></span><br><span class="line">       Sets  the  visual  bell setting for this window. Omitting the parameter</span><br><span class="line">       toggles the setting. If vbell is switched on, but  your  terminal  does</span><br><span class="line">       not support a visual bell, a `vbell-message&#x27; is displayed in the status</span><br><span class="line">       line when the bell character (^G) is received.  Visual bell support  of</span><br><span class="line">       a terminal is defined by the termcap variable `vb&#x27; (terminfo: &#x27;flash&#x27;).</span><br><span class="line">       Per default, vbell is off, thus the audible bell  is  used.   See  also</span><br><span class="line">       `bell_msg&#x27;.</span><br><span class="line"></span><br><span class="line">       vbell_msg [message]</span><br><span class="line"></span><br><span class="line">       Sets  the visual bell message. message is printed to the status line if</span><br><span class="line">       the window receives a bell character (^G), vbell is set  to  &quot;on&quot;,  but</span><br><span class="line">       the  terminal  does  not support a visual bell.  The default message is</span><br><span class="line">       &quot;Wuff, Wuff!!&quot;.  Without parameter, the current message is shown.</span><br><span class="line"></span><br><span class="line">       vbellwait sec</span><br><span class="line"></span><br><span class="line">       Define a delay in seconds after each display of  screen&#x27;s  visual  bell</span><br><span class="line">       message. The default is 1 second.</span><br><span class="line"></span><br><span class="line">       verbose [on|off]</span><br><span class="line"></span><br><span class="line">       If  verbose is switched on, the command name is echoed, whenever a win-</span><br><span class="line">       dow is created (or resurrected from  zombie  state).  Default  is  off.</span><br><span class="line">       Without parameter, the current setting is shown.</span><br><span class="line"></span><br><span class="line">       version</span><br><span class="line"></span><br><span class="line">       Print the current version and the compile date in the status line.</span><br><span class="line"></span><br><span class="line">       wall message</span><br><span class="line"></span><br><span class="line">       Write  a message to all displays. The message will appear in the termi-</span><br><span class="line">       nal&#x27;s status line.</span><br><span class="line"></span><br><span class="line">       width [-w|-d] [cols [lines]]</span><br><span class="line"></span><br><span class="line">       Toggle the window width between 80 and 132 columns or set  it  to  cols</span><br><span class="line">       columns  if an argument is specified.  This requires a capable terminal</span><br><span class="line">       and the termcap entries &quot;Z0&quot; and &quot;Z1&quot;.  See the &quot;termcap&quot;  command  for</span><br><span class="line">       more  information.  You  can  also  specify a new height if you want to</span><br><span class="line">       change both values.  The -w option tells screen to  leave  the  display</span><br><span class="line">       size unchanged and just set the window size, -d vice versa.</span><br><span class="line"></span><br><span class="line">       windowlist [-b] [-m]</span><br><span class="line">       windowlist string [string]</span><br><span class="line">       windowlist title [title]</span><br><span class="line"></span><br><span class="line">       Display all windows in a table for visual window selection. The desired</span><br><span class="line">       window can be selected via the standard movement keys (see  the  &quot;copy&quot;</span><br><span class="line">       command)  and activated via the return key.  If the -b option is given,</span><br><span class="line">       screen will switch to the blank window before presenting the  list,  so</span><br><span class="line">       that  the current window is also selectable.  The -m option changes the</span><br><span class="line">       order of the windows, instead of sorting by window numbers screen  uses</span><br><span class="line">       its internal most-recently-used list.</span><br><span class="line"></span><br><span class="line">       The  table  format can be changed with the string and title option, the</span><br><span class="line">       title is displayed as table heading, while the lines are made by  using</span><br><span class="line">       the  string  setting.  The default setting is &quot;Num Name%=Flags&quot; for the</span><br><span class="line">       title and &quot;%3n %t%=%f&quot; for the lines.  See the &quot;STRING ESCAPES&quot; chapter</span><br><span class="line">       for more codes (e.g. color settings).</span><br><span class="line"></span><br><span class="line">       windows</span><br><span class="line"></span><br><span class="line">       Uses  the message line to display a list of all the windows.  Each win-</span><br><span class="line">       dow is listed by number with the name of process that has been  started</span><br><span class="line">       in  the window (or its title); the current window is marked with a `*&#x27;;</span><br><span class="line">       the previous window is marked with a `-&#x27;;  all  the  windows  that  are</span><br><span class="line">       &quot;logged  in&quot;  are  marked  with  a  `$&#x27;;  a  background window that has</span><br><span class="line">       received a bell is marked with a `!&#x27;; a background window that is being</span><br><span class="line">       monitored  and  has  had activity occur is marked with an `@&#x27;; a window</span><br><span class="line">       which has output logging turned on is marked with `(L)&#x27;; windows  occu-</span><br><span class="line">       pied  by  other  users are marked with `&amp;&#x27;; windows in the zombie state</span><br><span class="line">       are marked with `Z&#x27;.  If this list is too long to fit on the terminal&#x27;s</span><br><span class="line">       status line only the portion around the current window is displayed.</span><br><span class="line"></span><br><span class="line">       wrap [on|off]</span><br><span class="line"></span><br><span class="line">       Sets  the  line-wrap setting for the current window.  When line-wrap is</span><br><span class="line">       on, the second consecutive printable character output at the last  col-</span><br><span class="line">       umn  of  a  line  will  wrap to the start of the following line.  As an</span><br><span class="line">       added feature, backspace (^H) will also wrap through the left margin to</span><br><span class="line">       the previous line.  Default is `on&#x27;.</span><br><span class="line"></span><br><span class="line">       writebuf [-e encoding] [filename]</span><br><span class="line"></span><br><span class="line">       Writes  the  contents of the paste buffer to the specified file, or the</span><br><span class="line">       public accessible screen-exchange file if no filename is given. This is</span><br><span class="line">       thought  of  as a primitive means of communication between screen users</span><br><span class="line">       on the same host. If an encoding  is  specified  the  paste  buffer  is</span><br><span class="line">       recoded on the fly to match the encoding.  The filename can be set with</span><br><span class="line">       the bufferfile command and defaults to &quot;/tmp/screen-exchange&quot;.</span><br><span class="line"></span><br><span class="line">       writelock [on|off|auto]</span><br><span class="line"></span><br><span class="line">       In addition to access control lists, not all users may be able to write</span><br><span class="line">       to  the  same  window at once. Per default, writelock is in `auto&#x27; mode</span><br><span class="line">       and grants exclusive input permission to the user who is the  first  to</span><br><span class="line">       switch to the particular window. When he leaves the window, other users</span><br><span class="line">       may obtain the writelock (automatically). The writelock of the  current</span><br><span class="line">       window  is  disabled by the command &quot;writelock off&quot;. If the user issues</span><br><span class="line">       the command &quot;writelock on&quot; he  keeps  the  exclusive  write  permission</span><br><span class="line">       while switching to other windows.</span><br><span class="line"></span><br><span class="line">       xoff</span><br><span class="line">       xon</span><br><span class="line"></span><br><span class="line">       Insert  a  CTRL-s  / CTRL-q character to the stdin queue of the current</span><br><span class="line">       window.</span><br><span class="line"></span><br><span class="line">       zmodem [off|auto|catch|pass]</span><br><span class="line">       zmodem sendcmd [string]</span><br><span class="line">       zmodem recvcmd [string]</span><br><span class="line"></span><br><span class="line">       Define zmodem support for  screen.  Screen  understands  two  different</span><br><span class="line">       modes  when  it  detects  a zmodem request: &quot;pass&quot; and &quot;catch&quot;.  If the</span><br><span class="line">       mode is set to &quot;pass&quot;, screen will relay all data to the attacher until</span><br><span class="line">       the end of the transmission is reached.  In &quot;catch&quot; mode screen acts as</span><br><span class="line">       a zmodem endpoint and starts the corresponding rz/sz commands.  If  the</span><br><span class="line">       mode  is  set to &quot;auto&quot;, screen will use &quot;catch&quot; if the window is a tty</span><br><span class="line">       (e.g. a serial line), otherwise it will use &quot;pass&quot;.</span><br><span class="line">       You can define the templates screen uses in &quot;catch&quot; mode via the second</span><br><span class="line">       and the third form.</span><br><span class="line">       Note also that this is an experimental feature.</span><br><span class="line"></span><br><span class="line">       zombie [keys]</span><br><span class="line">       defzombie [keys]</span><br><span class="line"></span><br><span class="line">       Per  default screen windows are removed from the window list as soon as</span><br><span class="line">       the windows process (e.g. shell) exits. When a string of  two  keys  is</span><br><span class="line">       specified  to  the  zombie  command,  `dead&#x27; windows will remain in the</span><br><span class="line">       list.  The kill command may be used to remove such a  window.  Pressing</span><br><span class="line">       the first key in the dead window has the same effect. When pressing the</span><br><span class="line">       second key, screen will attempt to resurrect the  window.  The  process</span><br><span class="line">       that  was initially running in the window will be launched again. Call-</span><br><span class="line">       ing zombie without parameters will clear the zombie setting, thus  mak-</span><br><span class="line">       ing windows disappear when their process exits.</span><br><span class="line"></span><br><span class="line">       As  the  zombie-setting  is  manipulated globally for all windows, this</span><br><span class="line">       command should only be called defzombie. Until we need this  as  a  per</span><br><span class="line">       window setting, the commands zombie and defzombie are synonymous.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">THE MESSAGE LINE</span><br><span class="line">       Screen  displays informational messages and other diagnostics in a mes-</span><br><span class="line">       sage line.  While this line is distributed to appear at the  bottom  of</span><br><span class="line">       the screen, it can be defined to appear at the top of the screen during</span><br><span class="line">       compilation.  If your terminal has a status line defined in  its  term-</span><br><span class="line">       cap, screen will use this for displaying its messages, otherwise a line</span><br><span class="line">       of the current screen will be temporarily overwritten and  output  will</span><br><span class="line">       be  momentarily  interrupted. The message line is automatically removed</span><br><span class="line">       after a few seconds delay, but it can also be removed early (on  termi-</span><br><span class="line">       nals without a status line) by beginning to type.</span><br><span class="line"></span><br><span class="line">       The  message line facility can be used by an application running in the</span><br><span class="line">       current window by means of the ANSI Privacy message  control  sequence.</span><br><span class="line">       For instance, from within the shell, try something like:</span><br><span class="line"></span><br><span class="line">              echo &#x27;&lt;esc&gt;^Hello world from window &#x27;$WINDOW&#x27;&lt;esc&gt;\\&#x27;</span><br><span class="line"></span><br><span class="line">       where  &#x27;&lt;esc&gt;&#x27;  is an escape, &#x27;^&#x27; is a literal up-arrow, and &#x27;\\&#x27; turns</span><br><span class="line">       into a single backslash.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WINDOW TYPES</span><br><span class="line">       Screen provides three different window types. New windows  are  created</span><br><span class="line">       with screen&#x27;s screen command (see also the entry in chapter &quot;CUSTOMIZA-</span><br><span class="line">       TION&quot;). The first parameter to the screen command defines which type of</span><br><span class="line">       window  is created. The different window types are all special cases of</span><br><span class="line">       the normal type. They have been added in order to allow  screen  to  be</span><br><span class="line">       used efficiently as a console multiplexer with 100 or more windows.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       o  The  normal  window  contains  a  shell (default, if no parameter is</span><br><span class="line">          given) or any other system command that could  be  executed  from  a</span><br><span class="line">          shell (e.g.  slogin, etc...)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       o  If a tty (character special device) name (e.g. &quot;/dev/ttya&quot;) is spec-</span><br><span class="line">          ified as the first parameter, then the window is directly  connected</span><br><span class="line">          to  this  device.   This  window  type  is  similar to &quot;screen cu -l</span><br><span class="line">          /dev/ttya&quot;.  Read and write access is required on the  device  node,</span><br><span class="line">          an  exclusive  open  is attempted on the node to mark the connection</span><br><span class="line">          line as busy.  An optional parameter  is  allowed  consisting  of  a</span><br><span class="line">          comma separated list of flags in the notation used by stty(1):</span><br><span class="line"></span><br><span class="line">          &lt;baud_rate&gt;</span><br><span class="line">                 Usually  300,  1200, 9600 or 19200. This affects transmission</span><br><span class="line">                 as well as receive speed.</span><br><span class="line"></span><br><span class="line">          cs8 or cs7</span><br><span class="line">                 Specify the transmission of eight (or seven) bits per byte.</span><br><span class="line"></span><br><span class="line">          ixon or -ixon</span><br><span class="line">                 Enables (or disables) software  flow-control  (CTRL-S/CTRL-Q)</span><br><span class="line">                 for sending data.</span><br><span class="line"></span><br><span class="line">          ixoff or -ixon</span><br><span class="line">                 Enables  (or  disables)  software  flow-control for receiving</span><br><span class="line">                 data.</span><br><span class="line"></span><br><span class="line">          istrip or -istrip</span><br><span class="line">                 Clear (or keep) the eight bit in each received byte.</span><br><span class="line"></span><br><span class="line">          You may want to specify as many  of  these  options  as  applicable.</span><br><span class="line">          Unspecified options cause the terminal driver to make up the parame-</span><br><span class="line">          ter values of the connection.  These values are system dependant and</span><br><span class="line">          may be in defaults or values saved from a previous connection.</span><br><span class="line"></span><br><span class="line">          For  tty  windows,  the info command shows some of the modem control</span><br><span class="line">          lines in the status line. These may  include  `RTS&#x27;,  `CTS&#x27;,  &#x27;DTR&#x27;,</span><br><span class="line">          `DSR&#x27;,  `CD&#x27;  and more.  This depends on the available ioctl()&#x27;s and</span><br><span class="line">          system header files as well as the on the physical  capabilities  of</span><br><span class="line">          the  serial  board.   Signals  that  are logical low (inactive) have</span><br><span class="line">          their name preceded by an exclamation mark (!), otherwise the signal</span><br><span class="line">          is logical high (active).  Signals not supported by the hardware but</span><br><span class="line">          available to the ioctl() interface are usually shown low.</span><br><span class="line">          When the CLOCAL status bit is true, the whole set of  modem  signals</span><br><span class="line">          is  placed inside curly braces (&#123; and &#125;).  When the CRTSCTS or TIOC-</span><br><span class="line">          SOFTCAR bit is set, the signals `CTS&#x27; or `CD&#x27; are shown in parenthe-</span><br><span class="line">          sis, respectively.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          For tty windows, the command break causes the Data transmission line</span><br><span class="line">          (TxD) to go low for a specified period of time. This is expected  to</span><br><span class="line">          be  interpreted  as break signal on the other side.  No data is sent</span><br><span class="line">          and no modem control line is changed when a break is issued.</span><br><span class="line"></span><br><span class="line">       o  If the first  parameter  is  &quot;//telnet&quot;,  the  second  parameter  is</span><br><span class="line">          expected  to  be  a  host  name, and an optional third parameter may</span><br><span class="line">          specify a TCP port number (default decimal 23).  Screen will connect</span><br><span class="line">          to a server listening on the remote host and use the telnet protocol</span><br><span class="line">          to communicate with that server.</span><br><span class="line">          For telnet windows, the command info shows details about the connec-</span><br><span class="line">          tion in square brackets ([ and ]) at the end of the status line.</span><br><span class="line"></span><br><span class="line">          b      BINARY. The connection is in binary mode.</span><br><span class="line"></span><br><span class="line">          e      ECHO. Local echo is disabled.</span><br><span class="line"></span><br><span class="line">          c      SGA.  The  connection  is in `character mode&#x27; (default: `line</span><br><span class="line">                 mode&#x27;).</span><br><span class="line"></span><br><span class="line">          t      TTYPE. The terminal type has been  requested  by  the  remote</span><br><span class="line">                 host.   Screen sends the name &quot;screen&quot; unless instructed oth-</span><br><span class="line">                 erwise (see also the command `term&#x27;).</span><br><span class="line"></span><br><span class="line">          w      NAWS. The remote site is notified about window size  changes.</span><br><span class="line"></span><br><span class="line">          f      LFLOW.  The  remote  host will send flow control information.</span><br><span class="line">                 (Ignored at the moment.)</span><br><span class="line"></span><br><span class="line">          Additional flags for debugging are x, t and n (XDISPLOC, TSPEED  and</span><br><span class="line">          NEWENV).</span><br><span class="line"></span><br><span class="line">          For  telnet  windows,  the  command  break sends the telnet code IAC</span><br><span class="line">          BREAK (decimal 243) to the remote host.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          This window type is only available if screen was compiled  with  the</span><br><span class="line">          BUILTIN_TELNET option defined.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">STRING ESCAPES</span><br><span class="line">       Screen provides an escape mechanism to insert information like the cur-</span><br><span class="line">       rent time into messages or file names. The escape character is &#x27;%&#x27; with</span><br><span class="line">       one  exception:  inside  of  a  window&#x27;s hardstatus &#x27;^%&#x27; (&#x27;^E&#x27;) is used</span><br><span class="line">       instead.</span><br><span class="line"></span><br><span class="line">       Here is the full list of supported escapes:</span><br><span class="line"></span><br><span class="line">       %      the escape character itself</span><br><span class="line"></span><br><span class="line">       a      either &#x27;am&#x27; or &#x27;pm&#x27;</span><br><span class="line"></span><br><span class="line">       A      either &#x27;AM&#x27; or &#x27;PM&#x27;</span><br><span class="line"></span><br><span class="line">       c      current time HH:MM in 24h format</span><br><span class="line"></span><br><span class="line">       C      current time HH:MM in 12h format</span><br><span class="line"></span><br><span class="line">       d      day number</span><br><span class="line"></span><br><span class="line">       D      weekday name</span><br><span class="line"></span><br><span class="line">       f      flags of the window</span><br><span class="line"></span><br><span class="line">       F      sets %? to true if the window has the focus</span><br><span class="line"></span><br><span class="line">       h      hardstatus of the window</span><br><span class="line"></span><br><span class="line">       H      hostname of the system</span><br><span class="line"></span><br><span class="line">       l      current load of the system</span><br><span class="line"></span><br><span class="line">       m      month number</span><br><span class="line"></span><br><span class="line">       M      month name</span><br><span class="line"></span><br><span class="line">       n      window number</span><br><span class="line"></span><br><span class="line">       s      seconds</span><br><span class="line"></span><br><span class="line">       t      window title</span><br><span class="line"></span><br><span class="line">       u      all other users on this window</span><br><span class="line"></span><br><span class="line">       w      all window numbers and names. With &#x27;-&#x27;  quailifier:  up  to  the</span><br><span class="line">              current  window;  with  &#x27;+&#x27;  qualifier: starting with the window</span><br><span class="line">              after the current one.</span><br><span class="line"></span><br><span class="line">       W      all window numbers and names except the current one</span><br><span class="line"></span><br><span class="line">       y      last two digits of the year number</span><br><span class="line"></span><br><span class="line">       Y      full year number</span><br><span class="line"></span><br><span class="line">       ?      the part to the next &#x27;%?&#x27; is displayed  only  if  a  &#x27;%&#x27;  escape</span><br><span class="line">              inside the part expands to a non-empty string</span><br><span class="line"></span><br><span class="line">       :      else part of &#x27;%?&#x27;</span><br><span class="line"></span><br><span class="line">       =      pad  the  string to the display&#x27;s width (like TeX&#x27;s hfill). If a</span><br><span class="line">              number is specified, pad  to  the  percentage  of  the  window&#x27;s</span><br><span class="line">              width.   A  &#x27;0&#x27;  qualifier  tells  screen to treat the number as</span><br><span class="line">              absolute position.  You can specify to pad relative to the  last</span><br><span class="line">              absolute  pad position by adding a &#x27;+&#x27; qualifier or to pad rela-</span><br><span class="line">              tive to the right margin by using &#x27;-&#x27;. The padding truncates the</span><br><span class="line">              string  if  the specified position lies before the current posi-</span><br><span class="line">              tion. Add the &#x27;L&#x27; qualifier to change this.</span><br><span class="line"></span><br><span class="line">       &lt;      same as &#x27;%=&#x27; but just do truncation, do not fill with spaces</span><br><span class="line"></span><br><span class="line">       &gt;      mark the current text position for  the  next  truncation.  When</span><br><span class="line">              screen  needs  to do truncation, it tries to do it in a way that</span><br><span class="line">              the marked position gets moved to the  specified  percentage  of</span><br><span class="line">              the  output  area.  (The  area starts from the last absolute pad</span><br><span class="line">              position and ends with the position specified by the  truncation</span><br><span class="line">              operator.)  The &#x27;L&#x27; qualifier tells screen to mark the truncated</span><br><span class="line">              parts with &#x27;...&#x27;.</span><br><span class="line"></span><br><span class="line">       &#123;      attribute/color modifier string terminated by the next &quot;&#125;&quot;</span><br><span class="line"></span><br><span class="line">       `      Substitute with the output of a &#x27;backtick&#x27; command.  The  length</span><br><span class="line">              qualifier is misused to identify one of the commands.</span><br><span class="line"></span><br><span class="line">       The  &#x27;c&#x27;  and &#x27;C&#x27; escape may be qualified with a &#x27;0&#x27; to make screen use</span><br><span class="line">       zero instead of space as fill character. The &#x27;0&#x27; qualifier  also  makes</span><br><span class="line">       the  &#x27;=&#x27;  escape use absolute positions. The &#x27;n&#x27; and &#x27;=&#x27; escapes under-</span><br><span class="line">       stand a length qualifier (e.g. &#x27;%3n&#x27;), &#x27;D&#x27; and &#x27;M&#x27; can be prefixed with</span><br><span class="line">       &#x27;L&#x27;  to  generate long names, &#x27;w&#x27; and &#x27;W&#x27; also show the window flags if</span><br><span class="line">       &#x27;L&#x27; is given.</span><br><span class="line"></span><br><span class="line">       An attribute/color modifier is is used to change the attributes or  the</span><br><span class="line">       color  settings.  Its  format  is &quot;[attribute modifier] [color descrip-</span><br><span class="line">       tion]&quot;. The attribute modifier must be prefixed by a change type  indi-</span><br><span class="line">       cator  if  it  can  be  confused with a color desciption. The following</span><br><span class="line">       change types are known:</span><br><span class="line"></span><br><span class="line">       +      add the specified set to the current attributes</span><br><span class="line"></span><br><span class="line">       -      remove the set from the current attributes</span><br><span class="line"></span><br><span class="line">       !      invert the set in the current attributes</span><br><span class="line"></span><br><span class="line">       =      change the current attributes to the specified set</span><br><span class="line"></span><br><span class="line">       The attribute set can either be specified as a hexadecimal number or  a</span><br><span class="line">       combination of the following letters:</span><br><span class="line"></span><br><span class="line">       d      dim</span><br><span class="line">       u      underline</span><br><span class="line">       b      bold</span><br><span class="line">       r      reverse</span><br><span class="line">       s      standout</span><br><span class="line">       B      blinking</span><br><span class="line"></span><br><span class="line">       Colors are coded either as a hexadecimal number or two letters specify-</span><br><span class="line">       ing the desired background and foreground color (in  that  order).  The</span><br><span class="line">       following colors are known:</span><br><span class="line"></span><br><span class="line">       k      black</span><br><span class="line">       r      red</span><br><span class="line">       g      green</span><br><span class="line">       y      yellow</span><br><span class="line">       b      blue</span><br><span class="line">       m      magenta</span><br><span class="line">       c      cyan</span><br><span class="line">       w      white</span><br><span class="line">       d      default color</span><br><span class="line">       .      leave color unchanged</span><br><span class="line"></span><br><span class="line">       The  capitalized  versions of the letter specify bright colors. You can</span><br><span class="line">       also use the pseudo-color &#x27;i&#x27; to set just the brightness and leave  the</span><br><span class="line">       color unchanged.</span><br><span class="line">       A  one digit/letter color description is treated as foreground or back-</span><br><span class="line">       ground color dependant on the current attributes: if  reverse  mode  is</span><br><span class="line">       set,  the  background color is changed instead of the foreground color.</span><br><span class="line">       If you don&#x27;t like this, prefix the color with a &quot;.&quot;. If  you  want  the</span><br><span class="line">       same behaviour for two-letter color descriptions, also prefix them with</span><br><span class="line">       a &quot;.&quot;.</span><br><span class="line">       As a special case, &quot;%&#123;-&#125;&quot; restores the attributes and colors that  were</span><br><span class="line">       set  before the last change was made (i.e. pops one level of the color-</span><br><span class="line">       change stack).</span><br><span class="line"></span><br><span class="line">       Examples:</span><br><span class="line"></span><br><span class="line">       &quot;G&quot;    set color to bright green</span><br><span class="line"></span><br><span class="line">       &quot;+b r&quot; use bold red</span><br><span class="line"></span><br><span class="line">       &quot;= yd&quot; clear all attributes, write in default  color  on  yellow  back-</span><br><span class="line">              ground.</span><br><span class="line"></span><br><span class="line">       %-Lw%&#123;= BW&#125;%50&gt;%n%f* %t%&#123;-&#125;%+Lw%&lt;</span><br><span class="line">              The  available  windows centered at the current window and trun-</span><br><span class="line">              cated to the available width. The current  window  is  displayed</span><br><span class="line">              white  on  blue.   This can be used with &quot;hardstatus alwayslast-</span><br><span class="line">              line&quot;.</span><br><span class="line"></span><br><span class="line">       %?%F%&#123;.R.&#125;%?%3n %t%? [%h]%?</span><br><span class="line">              The window number and title and the window&#x27;s hardstatus, if  one</span><br><span class="line">              is  set.  Also use a red background if this is the active focus.</span><br><span class="line">              Useful for &quot;caption string&quot;.</span><br><span class="line"></span><br><span class="line">FLOW-CONTROL</span><br><span class="line">       Each window has a flow-control setting that determines how screen deals</span><br><span class="line">       with the XON and XOFF characters (and perhaps the interrupt character).</span><br><span class="line">       When flow-control is turned off, screen ignores the XON and XOFF  char-</span><br><span class="line">       acters,  which  allows  the user to send them to the current program by</span><br><span class="line">       simply typing them (useful for the emacs editor,  for  instance).   The</span><br><span class="line">       trade-off  is  that it will take longer for output from a &quot;normal&quot; pro-</span><br><span class="line">       gram to pause in response to an XOFF.  With flow-control turned on, XON</span><br><span class="line">       and  XOFF  characters  are  used to immediately pause the output of the</span><br><span class="line">       current window.  You can still send these  characters  to  the  current</span><br><span class="line">       program, but you must use the appropriate two-character screen commands</span><br><span class="line">       (typically &quot;C-a q&quot; (xon) and &quot;C-a s&quot; (xoff)).   The  xon/xoff  commands</span><br><span class="line">       are  also useful for typing C-s and C-q past a terminal that intercepts</span><br><span class="line">       these characters.</span><br><span class="line"></span><br><span class="line">       Each window has an initial flow-control value set with  either  the  -f</span><br><span class="line">       option  or the &quot;defflow&quot; .screenrc command. Per default the windows are</span><br><span class="line">       set to automatic flow-switching.  It can then be  toggled  between  the</span><br><span class="line">       three states &#x27;fixed on&#x27;, &#x27;fixed off&#x27; and &#x27;automatic&#x27; interactively with</span><br><span class="line">       the &quot;flow&quot; command bound to &quot;C-a f&quot;.</span><br><span class="line"></span><br><span class="line">       The automatic flow-switching mode deals with  flow  control  using  the</span><br><span class="line">       TIOCPKT  mode  (like &quot;rlogin&quot; does). If the tty driver does not support</span><br><span class="line">       TIOCPKT, screen tries to find out the right mode based on  the  current</span><br><span class="line">       setting of the application keypad - when it is enabled, flow-control is</span><br><span class="line">       turned off and visa versa.  Of course, you can still  manipulate  flow-</span><br><span class="line">       control manually when needed.</span><br><span class="line"></span><br><span class="line">       If  you&#x27;re running with flow-control enabled and find that pressing the</span><br><span class="line">       interrupt key (usually  C-c)  does  not  interrupt  the  display  until</span><br><span class="line">       another 6-8 lines have scrolled by, try running screen with the &quot;inter-</span><br><span class="line">       rupt&quot; option (add the &quot;interrupt&quot; flag to the &quot;flow&quot;  command  in  your</span><br><span class="line">       .screenrc,  or use the -i command-line option).  This causes the output</span><br><span class="line">       that screen has accumulated from the interrupted program to be flushed.</span><br><span class="line">       One  disadvantage  is  that  the virtual terminal&#x27;s memory contains the</span><br><span class="line">       non-flushed version of the output, which in rare cases can cause  minor</span><br><span class="line">       inaccuracies  in  the  output.   For example, if you switch screens and</span><br><span class="line">       return, or update the screen with &quot;C-a l&quot; you would see the version  of</span><br><span class="line">       the  output  you would have gotten without &quot;interrupt&quot; being on.  Also,</span><br><span class="line">       you might need to turn off flow-control (or use auto-flow mode to  turn</span><br><span class="line">       it  off  automatically) when running a program that expects you to type</span><br><span class="line">       the interrupt character as input, as it is possible  to  interrupt  the</span><br><span class="line">       output of the virtual terminal to your physical terminal when flow-con-</span><br><span class="line">       trol is enabled.  If this happens, a simple refresh of the screen  with</span><br><span class="line">       &quot;C-a  l&quot; will restore it.  Give each mode a try, and use whichever mode</span><br><span class="line">       you find more comfortable.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TITLES (naming windows)</span><br><span class="line">       You can customize each window&#x27;s name in the window display (viewed with</span><br><span class="line">       the &quot;windows&quot; command (C-a w)) by setting it with one of the title com-</span><br><span class="line">       mands.  Normally the name displayed is the actual command name  of  the</span><br><span class="line">       program created in the window.  However, it is sometimes useful to dis-</span><br><span class="line">       tinguish various programs of the same name or to change  the  name  on-</span><br><span class="line">       the-fly to reflect the current state of the window.</span><br><span class="line"></span><br><span class="line">       The default name for all shell windows can be set with the &quot;shelltitle&quot;</span><br><span class="line">       command in the .screenrc file, while all other windows are created with</span><br><span class="line">       a &quot;screen&quot; command and thus can have their name set with the -t option.</span><br><span class="line">       Interactively,    there    is    the    title-string    escape-sequence</span><br><span class="line">       (&lt;esc&gt;kname&lt;esc&gt;\)  and the &quot;title&quot; command (C-a A).  The former can be</span><br><span class="line">       output from an application to control the window&#x27;s name under  software</span><br><span class="line">       control,  and  the  latter  will prompt for a name when typed.  You can</span><br><span class="line">       also bind pre-defined names to keys with the  &quot;title&quot;  command  to  set</span><br><span class="line">       things quickly without prompting.</span><br><span class="line"></span><br><span class="line">       Finally,  screen has a shell-specific heuristic that is enabled by set-</span><br><span class="line">       ting the window&#x27;s name to &quot;search|name&quot; and arranging to  have  a  null</span><br><span class="line">       title escape-sequence output as a part of your prompt.  The search por-</span><br><span class="line">       tion specifies an end-of-prompt search string, while the  name  portion</span><br><span class="line">       specifies the default shell name for the window.  If the name ends in a</span><br><span class="line">       `:&#x27; screen will add what it believes to be the current command  running</span><br><span class="line">       in  the window to the end of the window&#x27;s shell name (e.g. &quot;name:cmd&quot;).</span><br><span class="line">       Otherwise the current command name supersedes the shell name  while  it</span><br><span class="line">       is running.</span><br><span class="line"></span><br><span class="line">       Here&#x27;s  how  it  works:   you must modify your shell prompt to output a</span><br><span class="line">       null title-escape-sequence (&lt;esc&gt;k&lt;esc&gt;\) as a  part  of  your  prompt.</span><br><span class="line">       The  last part of your prompt must be the same as the string you speci-</span><br><span class="line">       fied for the search portion of the title.  Once this is set up,  screen</span><br><span class="line">       will  use  the title-escape-sequence to clear the previous command name</span><br><span class="line">       and get ready for the next command.  Then, when a newline  is  received</span><br><span class="line">       from  the shell, a search is made for the end of the prompt.  If found,</span><br><span class="line">       it will grab the first word after the matched string and use it as  the</span><br><span class="line">       command  name.  If the command name begins with either &#x27;!&#x27;, &#x27;%&#x27;, or &#x27;^&#x27;</span><br><span class="line">       screen will use the first word on the  following  line  (if  found)  in</span><br><span class="line">       preference  to  the  just-found  name.  This helps csh users get better</span><br><span class="line">       command names when using job control or history recall commands.</span><br><span class="line"></span><br><span class="line">       Here&#x27;s some .screenrc examples:</span><br><span class="line"></span><br><span class="line">              screen -t top 2 nice top</span><br><span class="line"></span><br><span class="line">       Adding this line to your .screenrc would start a nice-d version of  the</span><br><span class="line">       &quot;top&quot; command in window 2 named &quot;top&quot; rather than &quot;nice&quot;.</span><br><span class="line"></span><br><span class="line">                   shelltitle &#x27;&gt; |csh&#x27;</span><br><span class="line">                   screen 1</span><br><span class="line"></span><br><span class="line">       These  commands  would  start  a  shell with the given shelltitle.  The</span><br><span class="line">       title specified is an auto-title that would expect the prompt  and  the</span><br><span class="line">       typed command to look something like the following:</span><br><span class="line"></span><br><span class="line">              /usr/joe/src/dir&gt; trn</span><br><span class="line"></span><br><span class="line">       (it  looks  after  the  &#x27;&gt;  &#x27; for the command name).  The window status</span><br><span class="line">       would show the name &quot;trn&quot; while the command was running, and revert  to</span><br><span class="line">       &quot;csh&quot; upon completion.</span><br><span class="line"></span><br><span class="line">              bind R screen -t &#x27;% |root:&#x27; su</span><br><span class="line"></span><br><span class="line">       Having  this command in your .screenrc would bind the key sequence &quot;C-a</span><br><span class="line">       R&quot; to the &quot;su&quot; command and give it an auto-title name of &quot;root:&quot;.   For</span><br><span class="line">       this auto-title to work, the screen could look something like this:</span><br><span class="line"></span><br><span class="line">                   % !em</span><br><span class="line">                   emacs file.c</span><br><span class="line"></span><br><span class="line">       Here  the user typed the csh history command &quot;!em&quot; which ran the previ-</span><br><span class="line">       ously  entered  &quot;emacs&quot;  command.   The  window   status   would   show</span><br><span class="line">       &quot;root:emacs&quot;  during the execution of the command, and revert to simply</span><br><span class="line">       &quot;root:&quot; at its completion.</span><br><span class="line"></span><br><span class="line">                   bind o title</span><br><span class="line">                   bind E title &quot;&quot;</span><br><span class="line">                   bind u title (unknown)</span><br><span class="line"></span><br><span class="line">       The first binding doesn&#x27;t have any arguments, so it  would  prompt  you</span><br><span class="line">       for  a title. when you type &quot;C-a o&quot;.  The second binding would clear an</span><br><span class="line">       auto-title&#x27;s current setting (C-a E).  The third binding would set  the</span><br><span class="line">       current window&#x27;s title to &quot;(unknown)&quot; (C-a u).</span><br><span class="line"></span><br><span class="line">       One  thing  to keep in mind when adding a null title-escape-sequence to</span><br><span class="line">       your prompt is that some shells (like the csh) count all  the  non-con-</span><br><span class="line">       trol  characters  as  part  of the prompt&#x27;s length.  If these invisible</span><br><span class="line">       characters aren&#x27;t a multiple of 8 then  backspacing  over  a  tab  will</span><br><span class="line">       result in an incorrect display.  One way to get around this is to use a</span><br><span class="line">       prompt like this:</span><br><span class="line"></span><br><span class="line">              set prompt=&#x27;^[[0000m^[k^[\% &#x27;</span><br><span class="line"></span><br><span class="line">       The escape-sequence &quot;&lt;esc&gt;[0000m&quot; not  only  normalizes  the  character</span><br><span class="line">       attributes, but all the zeros round the length of the invisible charac-</span><br><span class="line">       ters up to 8.  Bash  users  will  probably  want  to  echo  the  escape</span><br><span class="line">       sequence in the PROMPT_COMMAND:</span><br><span class="line"></span><br><span class="line">              PROMPT_COMMAND=&#x27;echo -n -e &quot;\033k\033\134&quot;&#x27;</span><br><span class="line"></span><br><span class="line">       (I used &quot;134&quot; to output a `\&#x27; because of a bug in bash v1.04).</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">THE VIRTUAL TERMINAL</span><br><span class="line">       Each  window  in  a screen session emulates a VT100 terminal, with some</span><br><span class="line">       extra functions added. The VT100 emulator is hard-coded, no other  ter-</span><br><span class="line">       minal types can be emulated.</span><br><span class="line">       Usually  screen  tries to emulate as much of the VT100/ANSI standard as</span><br><span class="line">       possible. But if your terminal lacks certain capabilities,  the  emula-</span><br><span class="line">       tion  may not be complete. In these cases screen has to tell the appli-</span><br><span class="line">       cations that some of the features are missing. This is  no  problem  on</span><br><span class="line">       machines using termcap, because screen can use the $TERMCAP variable to</span><br><span class="line">       customize the standard screen termcap.</span><br><span class="line"></span><br><span class="line">       But if you do a rlogin on another machine or your machine supports only</span><br><span class="line">       terminfo  this  method  fails.  Because of this, screen offers a way to</span><br><span class="line">       deal with these cases.  Here is how it works:</span><br><span class="line"></span><br><span class="line">       When screen tries to figure out a terminal name for  itself,  it  first</span><br><span class="line">       looks  for an entry named &quot;screen.&lt;term&gt;&quot;, where &lt;term&gt; is the contents</span><br><span class="line">       of your $TERM variable.  If no such entry exists, screen tries &quot;screen&quot;</span><br><span class="line">       (or  &quot;screen-w&quot;  if  the terminal is wide (132 cols or more)).  If even</span><br><span class="line">       this entry cannot be found, &quot;vt100&quot; is used as a substitute.</span><br><span class="line"></span><br><span class="line">       The idea is that if you have a terminal which doesn&#x27;t support an impor-</span><br><span class="line">       tant  feature  (e.g.  delete  char or clear to EOS) you can build a new</span><br><span class="line">       termcap/terminfo entry for screen (named &quot;screen.&lt;dumbterm&gt;&quot;) in  which</span><br><span class="line">       this  capability  has been disabled. If this entry is installed on your</span><br><span class="line">       machines you are able to do a rlogin and still keep the  correct  term-</span><br><span class="line">       cap/terminfo  entry.  The terminal name is put in the $TERM variable of</span><br><span class="line">       all new windows.  Screen also sets the $TERMCAP variable reflecting the</span><br><span class="line">       capabilities of the virtual terminal emulated. Notice that, however, on</span><br><span class="line">       machines using the terminfo database this variable has no effect.  Fur-</span><br><span class="line">       thermore, the variable $WINDOW is set to the window number of each win-</span><br><span class="line">       dow.</span><br><span class="line"></span><br><span class="line">       The actual set  of  capabilities  supported  by  the  virtual  terminal</span><br><span class="line">       depends  on  the  capabilities supported by the physical terminal.  If,</span><br><span class="line">       for instance, the physical terminal does not support  underscore  mode,</span><br><span class="line">       screen  does  not  put the `us&#x27; and `ue&#x27; capabilities into the window&#x27;s</span><br><span class="line">       $TERMCAP variable, accordingly.  However, a minimum number of capabili-</span><br><span class="line">       ties  must  be  supported  by a terminal in order to run screen; namely</span><br><span class="line">       scrolling, clear screen, and direct  cursor  addressing  (in  addition,</span><br><span class="line">       screen  does  not  run on hardcopy terminals or on terminals that over-</span><br><span class="line">       strike).</span><br><span class="line"></span><br><span class="line">       Also, you can customize the $TERMCAP value used by screen by using  the</span><br><span class="line">       &quot;termcap&quot;  .screenrc  command,  or  by defining the variable $SCREENCAP</span><br><span class="line">       prior to startup.  When the is latter defined, its value will be copied</span><br><span class="line">       verbatim  into each window&#x27;s $TERMCAP variable.  This can either be the</span><br><span class="line">       full terminal definition, or a filename  where  the  terminal  &quot;screen&quot;</span><br><span class="line">       (and/or &quot;screen-w&quot;) is defined.</span><br><span class="line"></span><br><span class="line">       Note  that screen honors the &quot;terminfo&quot; .screenrc command if the system</span><br><span class="line">       uses the terminfo database rather than termcap.</span><br><span class="line"></span><br><span class="line">       When the boolean `G0&#x27; capability is present in the  termcap  entry  for</span><br><span class="line">       the terminal on which screen has been called, the terminal emulation of</span><br><span class="line">       screen supports multiple character sets.  This allows an application to</span><br><span class="line">       make use of, for instance, the VT100 graphics character set or national</span><br><span class="line">       character sets.  The following control functions from ISO 2022 are sup-</span><br><span class="line">       ported:  lock  shift  G0  (SI), lock shift G1 (SO), lock shift G2, lock</span><br><span class="line">       shift G3, single shift G2, and single shift G3.  When a virtual  termi-</span><br><span class="line">       nal  is  created  or reset, the ASCII character set is designated as G0</span><br><span class="line">       through G3.  When the `G0&#x27; capability is present, screen evaluates  the</span><br><span class="line">       capabilities  `S0&#x27;, `E0&#x27;, and `C0&#x27; if present. `S0&#x27; is the sequence the</span><br><span class="line">       terminal uses to enable and start the  graphics  character  set  rather</span><br><span class="line">       than  SI.   `E0&#x27;  is the corresponding replacement for SO. `C0&#x27; gives a</span><br><span class="line">       character by character translation string that  is  used  during  semi-</span><br><span class="line">       graphics  mode.  This string is built like the `acsc&#x27; terminfo capabil-</span><br><span class="line">       ity.</span><br><span class="line"></span><br><span class="line">       When the `po&#x27; and `pf&#x27; capabilities are present in the terminal&#x27;s term-</span><br><span class="line">       cap  entry,  applications running in a screen window can send output to</span><br><span class="line">       the printer port of the terminal.  This allows a user to have an appli-</span><br><span class="line">       cation  in one window sending output to a printer connected to the ter-</span><br><span class="line">       minal, while all other windows are still active (the  printer  port  is</span><br><span class="line">       enabled  and  disabled  again  for  each  chunk of output).  As a side-</span><br><span class="line">       effect, programs running in different windows can send  output  to  the</span><br><span class="line">       printer  simultaneously.   Data sent to the printer is not displayed in</span><br><span class="line">       the window.  The info command displays a line starting `PRIN&#x27; while the</span><br><span class="line">       printer is active.</span><br><span class="line"></span><br><span class="line">       Screen  maintains  a hardstatus line for every window. If a window gets</span><br><span class="line">       selected, the display&#x27;s hardstatus will be updated to  match  the  win-</span><br><span class="line">       dow&#x27;s  hardstatus  line. If the display has no hardstatus the line will</span><br><span class="line">       be displayed as a standard screen message.  The hardstatus line can  be</span><br><span class="line">       changed    with   the   ANSI   Application   Program   Command   (APC):</span><br><span class="line">       &quot;ESC_&lt;string&gt;ESC\&quot;. As a  convenience  for  xterm  users  the  sequence</span><br><span class="line">       &quot;ESC]0..2;&lt;string&gt;^G&quot; is also accepted.</span><br><span class="line"></span><br><span class="line">       Some  capabilities  are only put into the $TERMCAP variable of the vir-</span><br><span class="line">       tual terminal if they can be efficiently implemented  by  the  physical</span><br><span class="line">       terminal.  For instance, `dl&#x27; (delete line) is only put into the $TERM-</span><br><span class="line">       CAP variable if the terminal supports  either  delete  line  itself  or</span><br><span class="line">       scrolling  regions. Note that this may provoke confusion, when the ses-</span><br><span class="line">       sion is reattached on a different terminal, as the  value  of  $TERMCAP</span><br><span class="line">       cannot be modified by parent processes.</span><br><span class="line"></span><br><span class="line">       The  &quot;alternate  screen&quot; capability is not enabled by default.  Set the</span><br><span class="line">       altscreen .screenrc command to enable it.</span><br><span class="line"></span><br><span class="line">       The following is a list of  control  sequences  recognized  by  screen.</span><br><span class="line">       &quot;(V)&quot; and &quot;(A)&quot; indicate VT100-specific and ANSI- or ISO-specific func-</span><br><span class="line">       tions, respectively.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       ESC E                      Next Line</span><br><span class="line"></span><br><span class="line">       ESC D                      Index</span><br><span class="line"></span><br><span class="line">       ESC M                      Reverse Index</span><br><span class="line"></span><br><span class="line">       ESC H                      Horizontal Tab Set</span><br><span class="line"></span><br><span class="line">       ESC Z                      Send VT100 Identification String</span><br><span class="line"></span><br><span class="line">       ESC 7                 (V)  Save Cursor and Attributes</span><br><span class="line"></span><br><span class="line">       ESC 8                 (V)  Restore Cursor and Attributes</span><br><span class="line"></span><br><span class="line">       ESC [s                (A)  Save Cursor and Attributes</span><br><span class="line"></span><br><span class="line">       ESC [u                (A)  Restore Cursor and Attributes</span><br><span class="line"></span><br><span class="line">       ESC c                      Reset to Initial State</span><br><span class="line"></span><br><span class="line">       ESC g                      Visual Bell</span><br><span class="line"></span><br><span class="line">       ESC Pn p                   Cursor Visibility (97801)</span><br><span class="line"></span><br><span class="line">           Pn = 6                 Invisible</span><br><span class="line"></span><br><span class="line">                7                 Visible</span><br><span class="line"></span><br><span class="line">       ESC =                 (V)  Application Keypad Mode</span><br><span class="line"></span><br><span class="line">       ESC &gt;                 (V)  Numeric Keypad Mode</span><br><span class="line"></span><br><span class="line">       ESC # 8               (V)  Fill Screen with E&#x27;s</span><br><span class="line"></span><br><span class="line">       ESC \                 (A)  String Terminator</span><br><span class="line"></span><br><span class="line">       ESC ^                 (A)  Privacy Message String (Message Line)</span><br><span class="line"></span><br><span class="line">       ESC !                      Global Message String (Message Line)</span><br><span class="line"></span><br><span class="line">       ESC k                      A.k.a. Definition String</span><br><span class="line"></span><br><span class="line">       ESC P                 (A)  Device Control  String.   Outputs  a  string</span><br><span class="line">                                  directly to the host terminal without inter-</span><br><span class="line">                                  pretation.</span><br><span class="line"></span><br><span class="line">       ESC _                 (A)  Application Program Command (Hardstatus)</span><br><span class="line"></span><br><span class="line">       ESC ] 0 ; string ^G   (A)  Operating System Command (Hardstatus,  xterm</span><br><span class="line">                                  title hack)</span><br><span class="line"></span><br><span class="line">       ESC ] 83 ; cmd ^G     (A)  Execute  screen  command. This only works if</span><br><span class="line">                                  multi-user support is compiled into  screen.</span><br><span class="line">                                  The  pseudo-user &quot;:window:&quot; is used to check</span><br><span class="line">                                  the access control list. Use  &quot;addacl  :win-</span><br><span class="line">                                  dow:  -rwx  #?&quot;  to  create  a  user with no</span><br><span class="line">                                  rights and allow only the needed commands.</span><br><span class="line"></span><br><span class="line">       Control-N             (A)  Lock Shift G1 (SO)</span><br><span class="line"></span><br><span class="line">       Control-O             (A)  Lock Shift G0 (SI)</span><br><span class="line"></span><br><span class="line">       ESC n                 (A)  Lock Shift G2</span><br><span class="line"></span><br><span class="line">       ESC o                 (A)  Lock Shift G3</span><br><span class="line"></span><br><span class="line">       ESC N                 (A)  Single Shift G2</span><br><span class="line"></span><br><span class="line">       ESC O                 (A)  Single Shift G3</span><br><span class="line"></span><br><span class="line">       ESC ( Pcs             (A)  Designate character set as G0</span><br><span class="line"></span><br><span class="line">       ESC ) Pcs             (A)  Designate character set as G1</span><br><span class="line"></span><br><span class="line">       ESC * Pcs             (A)  Designate character set as G2</span><br><span class="line"></span><br><span class="line">       ESC + Pcs             (A)  Designate character set as G3</span><br><span class="line"></span><br><span class="line">       ESC [ Pn ; Pn H            Direct Cursor Addressing</span><br><span class="line"></span><br><span class="line">       ESC [ Pn ; Pn f            same as above</span><br><span class="line"></span><br><span class="line">       ESC [ Pn J                 Erase in Display</span><br><span class="line"></span><br><span class="line">             Pn = None or 0       From Cursor to End of Screen</span><br><span class="line"></span><br><span class="line">                  1               From Beginning of Screen to Cursor</span><br><span class="line"></span><br><span class="line">                  2               Entire Screen</span><br><span class="line"></span><br><span class="line">       ESC [ Pn K                 Erase in Line</span><br><span class="line"></span><br><span class="line">             Pn = None or 0       From Cursor to End of Line</span><br><span class="line"></span><br><span class="line">                  1               From Beginning of Line to Cursor</span><br><span class="line"></span><br><span class="line">                  2               Entire Line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn X                 Erase character</span><br><span class="line"></span><br><span class="line">       ESC [ Pn A                 Cursor Up</span><br><span class="line"></span><br><span class="line">       ESC [ Pn B                 Cursor Down</span><br><span class="line"></span><br><span class="line">       ESC [ Pn C                 Cursor Right</span><br><span class="line"></span><br><span class="line">       ESC [ Pn D                 Cursor Left</span><br><span class="line"></span><br><span class="line">       ESC [ Pn E                 Cursor next line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn F                 Cursor previous line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn G                 Cursor horizontal position</span><br><span class="line"></span><br><span class="line">       ESC [ Pn `                 same as above</span><br><span class="line"></span><br><span class="line">       ESC [ Pn d                 Cursor vertical position</span><br><span class="line"></span><br><span class="line">       ESC [ Ps ;...; Ps m        Select Graphic Rendition</span><br><span class="line"></span><br><span class="line">             Ps = None or 0       Default Rendition</span><br><span class="line"></span><br><span class="line">                  1               Bold</span><br><span class="line"></span><br><span class="line">                  2          (A)  Faint</span><br><span class="line"></span><br><span class="line">                  3          (A)  Standout Mode (ANSI: Italicized)</span><br><span class="line"></span><br><span class="line">                  4               Underlined</span><br><span class="line"></span><br><span class="line">                  5               Blinking</span><br><span class="line"></span><br><span class="line">                  7               Negative Image</span><br><span class="line"></span><br><span class="line">                  22         (A)  Normal Intensity</span><br><span class="line"></span><br><span class="line">                  23         (A)  Standout Mode off (ANSI: Italicized off)</span><br><span class="line"></span><br><span class="line">                  24         (A)  Not Underlined</span><br><span class="line"></span><br><span class="line">                  25         (A)  Not Blinking</span><br><span class="line"></span><br><span class="line">                  27         (A)  Positive Image</span><br><span class="line"></span><br><span class="line">                  30         (A)  Foreground Black</span><br><span class="line"></span><br><span class="line">                  31         (A)  Foreground Red</span><br><span class="line"></span><br><span class="line">                  32         (A)  Foreground Green</span><br><span class="line"></span><br><span class="line">                  33         (A)  Foreground Yellow</span><br><span class="line"></span><br><span class="line">                  34         (A)  Foreground Blue</span><br><span class="line"></span><br><span class="line">                  35         (A)  Foreground Magenta</span><br><span class="line"></span><br><span class="line">                  36         (A)  Foreground Cyan</span><br><span class="line"></span><br><span class="line">                  37         (A)  Foreground White</span><br><span class="line"></span><br><span class="line">                  39         (A)  Foreground Default</span><br><span class="line"></span><br><span class="line">                  40         (A)  Background Black</span><br><span class="line"></span><br><span class="line">                  ...</span><br><span class="line"></span><br><span class="line">                  49         (A)  Background Default</span><br><span class="line"></span><br><span class="line">       ESC [ Pn g                 Tab Clear</span><br><span class="line"></span><br><span class="line">             Pn = None or 0       Clear Tab at Current Position</span><br><span class="line"></span><br><span class="line">                  3               Clear All Tabs</span><br><span class="line"></span><br><span class="line">       ESC [ Pn ; Pn r       (V)  Set Scrolling Region</span><br><span class="line"></span><br><span class="line">       ESC [ Pn I            (A)  Horizontal Tab</span><br><span class="line"></span><br><span class="line">       ESC [ Pn Z            (A)  Backward Tab</span><br><span class="line"></span><br><span class="line">       ESC [ Pn L            (A)  Insert Line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn M            (A)  Delete Line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn @            (A)  Insert Character</span><br><span class="line"></span><br><span class="line">       ESC [ Pn P            (A)  Delete Character</span><br><span class="line"></span><br><span class="line">       ESC [ Pn S                 Scroll Scrolling Region Up</span><br><span class="line"></span><br><span class="line">       ESC [ Pn T                 Scroll Scrolling Region Down</span><br><span class="line"></span><br><span class="line">       ESC [ Pn ^                 same as above</span><br><span class="line"></span><br><span class="line">       ESC [ Ps ;...; Ps h        Set Mode</span><br><span class="line"></span><br><span class="line">       ESC [ Ps ;...; Ps l        Reset Mode</span><br><span class="line"></span><br><span class="line">             Ps = 4          (A)  Insert Mode</span><br><span class="line"></span><br><span class="line">                  20         (A)  Automatic Linefeed Mode</span><br><span class="line"></span><br><span class="line">                  34              Normal Cursor Visibility</span><br><span class="line"></span><br><span class="line">                  ?1         (V)  Application Cursor Keys</span><br><span class="line"></span><br><span class="line">                  ?3         (V)  Change Terminal Width to 132 columns</span><br><span class="line"></span><br><span class="line">                  ?5         (V)  Reverse Video</span><br><span class="line"></span><br><span class="line">                  ?6         (V)  Origin Mode</span><br><span class="line"></span><br><span class="line">                  ?7         (V)  Wrap Mode</span><br><span class="line"></span><br><span class="line">                  ?9              X10 mouse tracking</span><br><span class="line"></span><br><span class="line">                  ?25        (V)  Visible Cursor</span><br><span class="line"></span><br><span class="line">                  ?47             Alternate Screen (old xterm code)</span><br><span class="line"></span><br><span class="line">                  ?1000      (V)  VT200 mouse tracking</span><br><span class="line"></span><br><span class="line">                  ?1047           Alternate Screen (new xterm code)</span><br><span class="line"></span><br><span class="line">                  ?1049           Alternate Screen (new xterm code)</span><br><span class="line"></span><br><span class="line">       ESC [ 5 i             (A)  Start relay to printer (ANSI Media Copy)</span><br><span class="line"></span><br><span class="line">       ESC [ 4 i             (A)  Stop relay to printer (ANSI Media Copy)</span><br><span class="line"></span><br><span class="line">       ESC [ 8 ; Ph ; Pw t        Resize the window to  `Ph&#x27;  lines  and  `Pw&#x27;</span><br><span class="line">                                  columns (SunView special)</span><br><span class="line"></span><br><span class="line">       ESC [ c                    Send VT100 Identification String</span><br><span class="line"></span><br><span class="line">       ESC [ x                    Send Terminal Parameter Report</span><br><span class="line"></span><br><span class="line">       ESC [ &gt; c                  Send   VT220   Secondary  Device  Attributes</span><br><span class="line">                                  String</span><br><span class="line"></span><br><span class="line">       ESC [ 6 n                  Send Cursor Position Report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INPUT TRANSLATION</span><br><span class="line">       In order to do a full VT100 emulation  screen  has  to  detect  that  a</span><br><span class="line">       sequence  of characters in the input stream was generated by a keypress</span><br><span class="line">       on the user&#x27;s keyboard and insert  the  VT100  style  escape  sequence.</span><br><span class="line">       Screen  has  a very flexible way of doing this by making it possible to</span><br><span class="line">       map arbitrary commands on arbitrary sequences of characters. For  stan-</span><br><span class="line">       dard  VT100  emulation  the  command will always insert a string in the</span><br><span class="line">       input buffer of the window (see also command stuff in the  command  ta-</span><br><span class="line">       ble).  Because the sequences generated by a keypress can change after a</span><br><span class="line">       reattach from a different terminal type, it is possible  to  bind  com-</span><br><span class="line">       mands  to the termcap name of the keys.  Screen will insert the correct</span><br><span class="line">       binding after each  reattach.  See  the  bindkey  command  for  further</span><br><span class="line">       details on the syntax and examples.</span><br><span class="line"></span><br><span class="line">       Here  is the table of the default key bindings. (A) means that the com-</span><br><span class="line">       mand is executed if the keyboard is switched into application mode.</span><br><span class="line"></span><br><span class="line">       Key name          Termcap name    Command</span><br><span class="line">       ______________________________________________________</span><br><span class="line">       Cursor up             ku          stuff \033[A</span><br><span class="line">                                         stuff \033OA    (A)</span><br><span class="line">       Cursor down           kd          stuff \033[B</span><br><span class="line">                                         stuff \033OB    (A)</span><br><span class="line">       Cursor right          kr          stuff \033[C</span><br><span class="line">                                         stuff \033OC    (A)</span><br><span class="line">       Cursor left           kl          stuff \033[D</span><br><span class="line">                                         stuff \033OD    (A)</span><br><span class="line">       Function key 0        k0          stuff \033[10~</span><br><span class="line">       Function key 1        k1          stuff \033OP</span><br><span class="line">       Function key 2        k2          stuff \033OQ</span><br><span class="line">       Function key 3        k3          stuff \033OR</span><br><span class="line">       Function key 4        k4          stuff \033OS</span><br><span class="line">       Function key 5        k5          stuff \033[15~</span><br><span class="line">       Function key 6        k6          stuff \033[17~</span><br><span class="line">       Function key 7        k7          stuff \033[18~</span><br><span class="line">       Function key 8        k8          stuff \033[19~</span><br><span class="line">       Function key 9        k9          stuff \033[20~</span><br><span class="line">       Function key 10       k;          stuff \033[21~</span><br><span class="line">       Function key 11       F1          stuff \033[23~</span><br><span class="line">       Function key 12       F2          stuff \033[24~</span><br><span class="line">       Home                  kh          stuff \033[1~</span><br><span class="line">       End                   kH          stuff \033[4~</span><br><span class="line">       Insert                kI          stuff \033[2~</span><br><span class="line">       Delete                kD          stuff \033[3~</span><br><span class="line">       Page up               kP          stuff \033[5~</span><br><span class="line">       Page down             kN          stuff \033[6~</span><br><span class="line">       Keypad 0              f0          stuff 0</span><br><span class="line">                                         stuff \033Op    (A)</span><br><span class="line">       Keypad 1              f1          stuff 1</span><br><span class="line">                                         stuff \033Oq    (A)</span><br><span class="line">       Keypad 2              f2          stuff 2</span><br><span class="line">                                         stuff \033Or    (A)</span><br><span class="line">       Keypad 3              f3          stuff 3</span><br><span class="line">                                         stuff \033Os    (A)</span><br><span class="line">       Keypad 4              f4          stuff 4</span><br><span class="line">                                         stuff \033Ot    (A)</span><br><span class="line">       Keypad 5              f5          stuff 5</span><br><span class="line">                                         stuff \033Ou    (A)</span><br><span class="line">       Keypad 6              f6          stuff 6</span><br><span class="line">                                         stuff \033Ov    (A)</span><br><span class="line">       Keypad 7              f7          stuff 7</span><br><span class="line">                                         stuff \033Ow    (A)</span><br><span class="line">       Keypad 8              f8          stuff 8</span><br><span class="line">                                         stuff \033Ox    (A)</span><br><span class="line">       Keypad 9              f9          stuff 9</span><br><span class="line">                                         stuff \033Oy    (A)</span><br><span class="line">       Keypad +              f+          stuff +</span><br><span class="line">                                         stuff \033Ok    (A)</span><br><span class="line">       Keypad -              f-          stuff -</span><br><span class="line">                                         stuff \033Om    (A)</span><br><span class="line">       Keypad *              f*          stuff *</span><br><span class="line">                                         stuff \033Oj    (A)</span><br><span class="line">       Keypad /              f/          stuff /</span><br><span class="line">                                         stuff \033Oo    (A)</span><br><span class="line">       Keypad =              fq          stuff =</span><br><span class="line">                                         stuff \033OX    (A)</span><br><span class="line">       Keypad .              f.          stuff .</span><br><span class="line">                                         stuff \033On    (A)</span><br><span class="line">       Keypad ,              f,          stuff ,</span><br><span class="line">                                         stuff \033Ol    (A)</span><br><span class="line">       Keypad enter          fe          stuff \015</span><br><span class="line">                                         stuff \033OM    (A)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SPECIAL TERMINAL CAPABILITIES</span><br><span class="line">       The following table describes all terminal capabilities that are recog-</span><br><span class="line">       nized  by  screen  and are not in the termcap(5) manual.  You can place</span><br><span class="line">       these capabilities in your termcap entries (in `/etc/termcap&#x27;)  or  use</span><br><span class="line">       them  with the commands `termcap&#x27;, `terminfo&#x27; and `termcapinfo&#x27; in your</span><br><span class="line">       screenrc files. It is often not possible to place these capabilities in</span><br><span class="line">       the terminfo database.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       LP   (bool)  Terminal  has  VT100 style margins (`magic margins&#x27;). Note</span><br><span class="line">                    that this capability is obsolete because screen  uses  the</span><br><span class="line">                    standard &#x27;xn&#x27; instead.</span><br><span class="line"></span><br><span class="line">       Z0   (str)   Change width to 132 columns.</span><br><span class="line"></span><br><span class="line">       Z1   (str)   Change width to 80 columns.</span><br><span class="line"></span><br><span class="line">       WS   (str)   Resize  display. This capability has the desired width and</span><br><span class="line">                    height as arguments. SunView(tm) example: &#x27;\E[8;%d;%dt&#x27;.</span><br><span class="line"></span><br><span class="line">       NF   (bool)  Terminal doesn&#x27;t need flow control. Send ^S and ^Q  direct</span><br><span class="line">                    to  the  application.  Same as &#x27;flow off&#x27;. The opposite of</span><br><span class="line">                    this capability is &#x27;nx&#x27;.</span><br><span class="line"></span><br><span class="line">       G0   (bool)  Terminal can deal with ISO 2022 font selection  sequences.</span><br><span class="line"></span><br><span class="line">       S0   (str)   Switch  charset  &#x27;G0&#x27; to the specified charset. Default is</span><br><span class="line">                    &#x27;\E(%.&#x27;.</span><br><span class="line"></span><br><span class="line">       E0   (str)   Switch charset &#x27;G0&#x27; back to standard charset.  Default  is</span><br><span class="line">                    &#x27;\E(B&#x27;.</span><br><span class="line"></span><br><span class="line">       C0   (str)   Use the string as a conversion table for font &#x27;0&#x27;. See the</span><br><span class="line">                    &#x27;ac&#x27; capability for more details.</span><br><span class="line"></span><br><span class="line">       CS   (str)   Switch cursor-keys to application mode.</span><br><span class="line"></span><br><span class="line">       CE   (str)   Switch cursor-keys back to normal mode.</span><br><span class="line"></span><br><span class="line">       AN   (bool)  Turn on autonuke. See  the  &#x27;autonuke&#x27;  command  for  more</span><br><span class="line">                    details.</span><br><span class="line"></span><br><span class="line">       OL   (num)   Set  the  output buffer limit. See the &#x27;obuflimit&#x27; command</span><br><span class="line">                    for more details.</span><br><span class="line"></span><br><span class="line">       KJ   (str)   Set the encoding of the terminal. See the &#x27;encoding&#x27;  com-</span><br><span class="line">                    mand for valid encodings.</span><br><span class="line"></span><br><span class="line">       AF   (str)   Change  character foreground color in an ANSI conform way.</span><br><span class="line">                    This capability will almost always  be  set  to  &#x27;\E[3%dm&#x27;</span><br><span class="line">                    (&#x27;\E[3%p1%dm&#x27; on terminfo machines).</span><br><span class="line"></span><br><span class="line">       AB   (str)   Same as &#x27;AF&#x27;, but change background color.</span><br><span class="line"></span><br><span class="line">       AX   (bool)  Does  understand  ANSI  set  default fg/bg color (\E[39m /</span><br><span class="line">                    \E[49m).</span><br><span class="line"></span><br><span class="line">       XC   (str)   Describe a translation of characters to strings  depending</span><br><span class="line">                    on  the current font. More details follow in the next sec-</span><br><span class="line">                    tion.</span><br><span class="line"></span><br><span class="line">       XT   (bool)  Terminal understands special xterm sequences  (OSC,  mouse</span><br><span class="line">                    tracking).</span><br><span class="line"></span><br><span class="line">       C8   (bool)  Terminal needs bold to display high-intensity colors (e.g.</span><br><span class="line">                    Eterm).</span><br><span class="line"></span><br><span class="line">       TF   (bool)  Add missing capabilities to the termcap/info  entry.  (Set</span><br><span class="line">                    by default).</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CHARACTER TRANSLATION</span><br><span class="line">       Screen  has  a  powerful mechanism to translate characters to arbitrary</span><br><span class="line">       strings depending on the current font and terminal type.  Use this fea-</span><br><span class="line">       ture  if  you  want  to  work with a common standard character set (say</span><br><span class="line">       ISO8851-latin1) even on terminals that scatter the more unusual charac-</span><br><span class="line">       ters over several national language font pages.</span><br><span class="line"></span><br><span class="line">       Syntax:</span><br><span class="line">           XC=&lt;charset-mapping&gt;&#123;,,&lt;charset-mapping&gt;&#125;</span><br><span class="line">           &lt;charset-mapping&gt; := &lt;designator&gt;&lt;template&gt;&#123;,&lt;mapping&gt;&#125;</span><br><span class="line">           &lt;mapping&gt; := &lt;char-to-be-mapped&gt;&lt;template-arg&gt;</span><br><span class="line"></span><br><span class="line">       The things in braces may be repeated any number of times.</span><br><span class="line"></span><br><span class="line">       A  &lt;charset-mapping&gt; tells screen how to map characters in font &lt;desig-</span><br><span class="line">       nator&gt; (&#x27;B&#x27;: Ascii, &#x27;A&#x27;: UK, &#x27;K&#x27;:  german,  etc.)   to  strings.  Every</span><br><span class="line">       &lt;mapping&gt;  describes  to  what string a single character will be trans-</span><br><span class="line">       lated. A template mechanism is used, as most of the time the codes have</span><br><span class="line">       a  lot  in  common  (for  example strings to switch to and from another</span><br><span class="line">       charset). Each occurrence of &#x27;%&#x27; in &lt;template&gt;  gets  substituted  with</span><br><span class="line">       the  &lt;template-arg&gt;  specified  together  with  the  character. If your</span><br><span class="line">       strings are not similar at all, then use &#x27;%&#x27; as a  template  and  place</span><br><span class="line">       the  full  string  in  &lt;template-arg&gt;. A quoting mechanism was added to</span><br><span class="line">       make it possible to use a real &#x27;%&#x27;. The &#x27;\&#x27; character quotes  the  spe-</span><br><span class="line">       cial characters &#x27;\&#x27;, &#x27;%&#x27;, and &#x27;,&#x27;.</span><br><span class="line"></span><br><span class="line">       Here is an example:</span><br><span class="line"></span><br><span class="line">           termcap hp700 &#x27;XC=B\E(K%\E(B,\304[,\326\\\\,\334]&#x27;</span><br><span class="line"></span><br><span class="line">       This  tells  screen how to translate ISOlatin1 (charset &#x27;B&#x27;) upper case</span><br><span class="line">       umlaut characters on a hp700 terminal that has a german charset. &#x27;\304&#x27;</span><br><span class="line">       gets  translated  to  &#x27;\E(K[\E(B&#x27;  and so on.  Note that this line gets</span><br><span class="line">       parsed *three* times before the internal lookup table is built,  there-</span><br><span class="line">       fore a lot of quoting is needed to create a single &#x27;\&#x27;.</span><br><span class="line"></span><br><span class="line">       Another  extension  was  added  to  allow  more emulation: If a mapping</span><br><span class="line">       translates the unquoted &#x27;%&#x27; char, it will be sent to the terminal when-</span><br><span class="line">       ever screen switches to the corresponding &lt;designator&gt;. In this special</span><br><span class="line">       case the template is assumed to be just &#x27;%&#x27; because the charset  switch</span><br><span class="line">       sequence and the character mappings normally haven&#x27;t much in common.</span><br><span class="line"></span><br><span class="line">       This example shows one use of the extension:</span><br><span class="line"></span><br><span class="line">           termcap xterm &#x27;XC=K%,%\E(B,[\304,\\\\\326,]\334&#x27;</span><br><span class="line"></span><br><span class="line">       Here,  a  part of the german (&#x27;K&#x27;) charset is emulated on an xterm.  If</span><br><span class="line">       screen has to change to the &#x27;K&#x27; charset, &#x27;\E(B&#x27; will  be  sent  to  the</span><br><span class="line">       terminal,  i.e. the ASCII charset is used instead. The template is just</span><br><span class="line">       &#x27;%&#x27;, so the mapping is straightforward: &#x27;[&#x27; to &#x27;\304&#x27;, &#x27;\&#x27;  to  &#x27;\326&#x27;,</span><br><span class="line">       and &#x27;]&#x27; to &#x27;\334&#x27;.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ENVIRONMENT</span><br><span class="line">       COLUMNS        Number  of  columns  on  the terminal (overrides termcap</span><br><span class="line">                      entry).</span><br><span class="line">       HOME           Directory in which to look for .screenrc.</span><br><span class="line">       LINES          Number of  lines  on  the  terminal  (overrides  termcap</span><br><span class="line">                      entry).</span><br><span class="line">       LOCKPRG        Screen lock program.</span><br><span class="line">       NETHACKOPTIONS Turns on nethack option.</span><br><span class="line">       PATH           Used for locating programs to run.</span><br><span class="line">       SCREENCAP      For customizing a terminal&#x27;s TERMCAP value.</span><br><span class="line">       SCREENDIR      Alternate socket directory.</span><br><span class="line">       SCREENRC       Alternate user screenrc file.</span><br><span class="line">       SHELL          Default  shell  program  for  opening  windows  (default</span><br><span class="line">                      &quot;/bin/sh&quot;).</span><br><span class="line">       STY            Alternate socket name.</span><br><span class="line">       SYSSCREENRC    Alternate system screenrc file.</span><br><span class="line">       TERM           Terminal name.</span><br><span class="line">       TERMCAP        Terminal description.</span><br><span class="line">       WINDOW         Window number of a window (at creation time).</span><br><span class="line"></span><br><span class="line">FILES</span><br><span class="line">       .../screen-4.?.??/etc/screenrc</span><br><span class="line">       .../screen-4.?.??/etc/etcscreenrc Examples in the  screen  distribution</span><br><span class="line">                                         package  for  private and global ini-</span><br><span class="line">                                         tialization files.</span><br><span class="line">       $SYSSCREENRC</span><br><span class="line">       /usr/local/etc/screenrc           screen initialization commands</span><br><span class="line">       $SCREENRC</span><br><span class="line">       $HOME/.screenrc                   Read in after /usr/local/etc/screenrc</span><br><span class="line">       $SCREENDIR/S-&lt;login&gt;</span><br><span class="line">       /local/screens/S-&lt;login&gt;          Socket directories (default)</span><br><span class="line">       /usr/tmp/screens/S-&lt;login&gt;        Alternate socket directories.</span><br><span class="line">       &lt;socket directory&gt;/.termcap       Written by the &quot;termcap&quot; output func-</span><br><span class="line">                                         tion</span><br><span class="line">       /usr/tmp/screens/screen-exchange  or</span><br><span class="line">       /tmp/screen-exchange              screen  `interprocess   communication</span><br><span class="line">                                         buffer&#x27;</span><br><span class="line">       hardcopy.[0-9]                    Screen images created by the hardcopy</span><br><span class="line">                                         function</span><br><span class="line">       screenlog.[0-9]                   Output log files created by  the  log</span><br><span class="line">                                         function</span><br><span class="line">       /usr/lib/terminfo/?/*             or</span><br><span class="line">       /etc/termcap                      Terminal capability databases</span><br><span class="line">       /etc/utmp                         Login records</span><br><span class="line">       $LOCKPRG                          Program that locks a terminal.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SEE ALSO</span><br><span class="line">       termcap(5), utmp(5), vi(1), captoinfo(1), tic(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTHORS</span><br><span class="line">       Originally  created by Oliver Laumann, this latest version was produced</span><br><span class="line">       by Wayne Davison, Juergen Weigert and Michael Schroeder.</span><br><span class="line"></span><br><span class="line">COPYLEFT</span><br><span class="line">       Copyright (C) 1993-2003</span><br><span class="line">            Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)</span><br><span class="line">            Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)</span><br><span class="line">       Copyright (C) 1987 Oliver Laumann</span><br><span class="line">       This program is free software; you can redistribute it and/or modify it</span><br><span class="line">       under  the  terms of the GNU General Public License as published by the</span><br><span class="line">       Free Software Foundation; either version 2, or  (at  your  option)  any</span><br><span class="line">       later version.</span><br><span class="line">       This  program  is  distributed  in the hope that it will be useful, but</span><br><span class="line">       WITHOUT ANY  WARRANTY;  without  even  the  implied  warranty  of  MER-</span><br><span class="line">       CHANTABILITY  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General</span><br><span class="line">       Public License for more details.</span><br><span class="line">       You should have received a copy of the GNU General Public License along</span><br><span class="line">       with  this  program  (see  the file COPYING); if not, write to the Free</span><br><span class="line">       Software Foundation, Inc., 59 Temple Place  -  Suite  330,  Boston,  MA</span><br><span class="line">       02111-1307, USA</span><br><span class="line"></span><br><span class="line">CONTRIBUTORS</span><br><span class="line">       Ken Beal (kbeal@amber.ssd.csd.harris.com),</span><br><span class="line">       Rudolf Koenig (rfkoenig@immd4.informatik.uni-erlangen.de),</span><br><span class="line">       Toerless Eckert (eckert@immd4.informatik.uni-erlangen.de),</span><br><span class="line">       Wayne Davison (davison@borland.com),</span><br><span class="line">       Patrick Wolfe (pat@kai.com, kailand!pat),</span><br><span class="line">       Bart Schaefer (schaefer@cse.ogi.edu),</span><br><span class="line">       Nathan Glasser (nathan@brokaw.lcs.mit.edu),</span><br><span class="line">       Larry W. Virden (lvirden@cas.org),</span><br><span class="line">       Howard Chu (hyc@hanauma.jpl.nasa.gov),</span><br><span class="line">       Tim MacKenzie (tym@dibbler.cs.monash.edu.au),</span><br><span class="line">       Markku Jarvinen (mta@&#123;cc,cs,ee&#125;.tut.fi),</span><br><span class="line">       Marc Boucher (marc@CAM.ORG),</span><br><span class="line">       Doug Siebert (dsiebert@isca.uiowa.edu),</span><br><span class="line">       Ken Stillson (stillson@tsfsrv.mitre.org),</span><br><span class="line">       Ian Frechett (frechett@spot.Colorado.EDU),</span><br><span class="line">       Brian Koehmstedt (bpk@gnu.ai.mit.edu),</span><br><span class="line">       Don Smith (djs6015@ultb.isc.rit.edu),</span><br><span class="line">       Frank van der Linden (vdlinden@fwi.uva.nl),</span><br><span class="line">       Martin Schweikert (schweik@cpp.ob.open.de),</span><br><span class="line">       David Vrona (dave@sashimi.lcu.com),</span><br><span class="line">       E. Tye McQueen (tye%spillman.UUCP@uunet.uu.net),</span><br><span class="line">       Matthew Green (mrg@eterna.com.au),</span><br><span class="line">       Christopher Williams (cgw@pobox.com),</span><br><span class="line">       Matt Mosley (mattm@access.digex.net),</span><br><span class="line">       Gregory Neil Shapiro (gshapiro@wpi.WPI.EDU),</span><br><span class="line">       Johannes Zellner (johannes@zellner.org),</span><br><span class="line">       Pablo Averbuj (pablo@averbuj.com).</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VERSION</span><br><span class="line">       This is version 4.0.2. Its roots are a merge of a custom version 2.3PR7</span><br><span class="line">       by Wayne Davison and several enhancements to Oliver  Laumann&#x27;s  version</span><br><span class="line">       2.0.  Note  that all versions numbered 2.x are copyright by Oliver Lau-</span><br><span class="line">       mann.</span><br><span class="line"></span><br><span class="line">AVAILABILITY</span><br><span class="line">       The latest official release of screen available via anonymous ftp  from</span><br><span class="line">       gnudist.gnu.org,  nic.funet.fi  or any other GNU distribution site. The</span><br><span class="line">       home site of screen is ftp.uni-erlangen.de, in the directory pub/utili-</span><br><span class="line">       ties/screen.  The subdirectory `private&#x27; contains the latest beta test-</span><br><span class="line">       ing release. If you want to help,  send  a  note  to  screen@uni-erlan-</span><br><span class="line">       gen.de.</span><br><span class="line"></span><br><span class="line">BUGS</span><br><span class="line">       o  `dm&#x27;  (delete  mode)  and  `xs&#x27;  are not handled correctly (they are</span><br><span class="line">          ignored). `xn&#x27; is treated as a magic-margin indicator.</span><br><span class="line"></span><br><span class="line">       o  Screen has no clue about double-high or double-wide characters.  But</span><br><span class="line">          this is the only area where vttest is allowed to fail.</span><br><span class="line"></span><br><span class="line">       o  It  is not possible to change the environment variable $TERMCAP when</span><br><span class="line">          reattaching under a different terminal type.</span><br><span class="line"></span><br><span class="line">       o  The support of terminfo based systems is very limited. Adding  extra</span><br><span class="line">          capabilities to $TERMCAP may not have any effects.</span><br><span class="line"></span><br><span class="line">       o  Screen does not make use of hardware tabs.</span><br><span class="line"></span><br><span class="line">       o  Screen  must be installed as set-uid with owner root on most systems</span><br><span class="line">          in order to be able to correctly change the owner of the tty  device</span><br><span class="line">          file  for  each  window.  Special permission may also be required to</span><br><span class="line">          write the file &quot;/etc/utmp&quot;.</span><br><span class="line"></span><br><span class="line">       o  Entries in &quot;/etc/utmp&quot; are not removed when screen  is  killed  with</span><br><span class="line">          SIGKILL.   This  will  cause  some  programs (like &quot;w&quot; or &quot;rwho&quot;) to</span><br><span class="line">          advertise that a user is logged on who really isn&#x27;t.</span><br><span class="line"></span><br><span class="line">       o  Screen may give a strange warning when your tty has no utmp entry.</span><br><span class="line"></span><br><span class="line">       o  When the modem line was hung up, screen may not automatically detach</span><br><span class="line">          (or  quit)  unless  the device driver is configured to send a HANGUP</span><br><span class="line">          signal.  To detach a screen session use the -D or  -d  command  line</span><br><span class="line">          option.</span><br><span class="line"></span><br><span class="line">       o  If  a  password  is  set,  the  command line options -d and -D still</span><br><span class="line">          detach a session without asking.</span><br><span class="line"></span><br><span class="line">       o  Both &quot;breaktype&quot; and  &quot;defbreaktype&quot;  change  the  break  generating</span><br><span class="line">          method  used by all terminal devices. The first should change a win-</span><br><span class="line">          dow specific setting,  where  the  latter  should  change  only  the</span><br><span class="line">          default for new windows.</span><br><span class="line"></span><br><span class="line">       o  When  attaching to a multiuser session, the user&#x27;s .screenrc file is</span><br><span class="line">          not sourced. Each user&#x27;s personal settings have to  be  included  in</span><br><span class="line">          the  .screenrc  file from which the session is booted, or have to be</span><br><span class="line">          changed manually.</span><br><span class="line"></span><br><span class="line">       o  A weird imagination is most useful to gain full advantage of all the</span><br><span class="line">          features.</span><br><span class="line"></span><br><span class="line">       o  Send bug-reports, fixes, enhancements, t-shirts, money, beer &amp; pizza</span><br><span class="line">          to screen@uni-erlangen.de.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4th Berkeley Distribution          Aug 2003                          SCREEN(1)</span><br><span class="line">skd@mdm ~ % open screen.md </span><br><span class="line">skd@mdm ~ % clear</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % man  screen            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          programs (like &quot;w&quot; or &quot;rwho&quot;) to advertise that a user is logged on who really isn&#x27;t.</span><br><span class="line"></span><br><span class="line">       o  Screen may give a strange warning when your tty has no utmp entry.</span><br><span class="line"></span><br><span class="line">       o  When the modem line was hung up, screen may not automatically detach (or  quit)  unless  the  device</span><br><span class="line">          driver  is  configured to send a HANGUP signal.  To detach a screen session use the -D or -d command</span><br><span class="line">          line option.</span><br><span class="line"></span><br><span class="line">       o  If a password is set, the command line options -d and -D still detach a session without asking.</span><br><span class="line"></span><br><span class="line">       o  Both &quot;breaktype&quot; and &quot;defbreaktype&quot; change the break generating method used by all terminal devices.</span><br><span class="line">          The  first  should change a window specific setting, where the latter should change only the default</span><br><span class="line">          for new windows.</span><br><span class="line"></span><br><span class="line">       o  When attaching to a multiuser session, the user&#x27;s .screenrc file is not sourced.  Each  user&#x27;s  per-</span><br><span class="line">          sonal  settings  have to be included in the .screenrc file from which the session is booted, or have</span><br><span class="line">          to be changed manually.</span><br><span class="line"></span><br><span class="line">       o  A weird imagination is most useful to gain full advantage of all the features.</span><br><span class="line"></span><br><span class="line">       o  Send bug-reports, fixes, enhancements, t-shirts, money, beer &amp; pizza to screen@uni-erlangen.de.</span><br><span class="line"></span><br><span class="line">4th Berkeley Distribution                          Aug 2003                                          SCREEN(1)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>man screen</title>
    <url>/2016/03/20/system-darwin-manScreen-zh/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Last login: Sun Mar 20 10:15:05 on ttys000</span><br><span class="line">skd@mdm ~ % screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.mdm	(Attached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.mdm	(Attached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.mdm	(Detached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.mdm	(Attached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % man  screen</span><br><span class="line">skd@mdm ~ % man  screen &gt; screen.md</span><br><span class="line">skd@mdm ~ % ls</span><br><span class="line">Applications  Documents	Library		Music		Public		同步空间</span><br><span class="line">Desktop    Downloads	Movies		Pictures	screen.md</span><br><span class="line">skd@mdm ~ % cat screen.md </span><br><span class="line">SCREEN(1)                                                            SCREEN(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       screen - screen manager with VT100/ANSI terminal emulation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       screen [ -options ] [ cmd [ args ] ]</span><br><span class="line">       screen -r [[pid.]tty[.host]]</span><br><span class="line">       screen -r sessionowner/[[pid.]tty[.host]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       Screen is a full-screen window manager that multiplexes a physical ter-</span><br><span class="line">       minal between several processes (typically interactive  shells).   Each</span><br><span class="line">       virtual terminal provides the functions of a DEC VT100 terminal and, in</span><br><span class="line">       addition, several control functions from the ISO 6429  (ECMA  48,  ANSI</span><br><span class="line">       X3.64)  and ISO 2022 standards (e.g. insert/delete line and support for</span><br><span class="line">       multiple character sets).  There is a  scrollback  history  buffer  for</span><br><span class="line">       each virtual terminal and a copy-and-paste mechanism that allows moving</span><br><span class="line">       text regions between windows.</span><br><span class="line"></span><br><span class="line">       When screen is called, it creates a single window with a  shell  in  it</span><br><span class="line">       (or  the  specified  command) and then gets out of your way so that you</span><br><span class="line">       can use the program as you normally would.  Then, at any time, you  can</span><br><span class="line">       create new (full-screen) windows with other programs in them (including</span><br><span class="line">       more shells), kill existing windows, view a list of windows, turn  out-</span><br><span class="line">       put  logging  on and off, copy-and-paste text between windows, view the</span><br><span class="line">       scrollback history, switch between windows in whatever manner you wish,</span><br><span class="line">       etc.  All  windows  run  their  programs completely independent of each</span><br><span class="line">       other. Programs continue to run when their window is currently not vis-</span><br><span class="line">       ible and even when the whole screen session is detached from the user&#x27;s</span><br><span class="line">       terminal.  When a program terminates, screen (per  default)  kills  the</span><br><span class="line">       window  that  contained  it.  If this window was in the foreground, the</span><br><span class="line">       display switches to the previous  window;  if  none  are  left,  screen</span><br><span class="line">       exits.</span><br><span class="line"></span><br><span class="line">       Everything  you type is sent to the program running in the current win-</span><br><span class="line">       dow.  The only exception to this is the one keystroke that is  used  to</span><br><span class="line">       initiate  a  command  to  the window manager.  By default, each command</span><br><span class="line">       begins with a control-a (abbreviated C-a from now on), and is  followed</span><br><span class="line">       by one other keystroke.  The command character and all the key bindings</span><br><span class="line">       can be fully customized to be anything you like, though they are always</span><br><span class="line">       two characters in length.</span><br><span class="line"></span><br><span class="line">       Screen does not understand the prefix &quot;C-&quot; to mean control.  Please use</span><br><span class="line">       the caret notation (&quot;^A&quot; instead of &quot;C-a&quot;) as  arguments  to  e.g.  the</span><br><span class="line">       escape  command  or  the -e option.  Screen will also print out control</span><br><span class="line">       characters in caret notation.</span><br><span class="line"></span><br><span class="line">       The standard way to create a new window is to type &quot;C-a c&quot;.  This  cre-</span><br><span class="line">       ates  a  new window running a shell and switches to that window immedi-</span><br><span class="line">       ately, regardless of the state of the process running  in  the  current</span><br><span class="line">       window.   Similarly,  you can create a new window with a custom command</span><br><span class="line">       in it by first binding the command to a keystroke  (in  your  .screenrc</span><br><span class="line">       file  or  at  the &quot;C-a :&quot; command line) and then using it just like the</span><br><span class="line">       &quot;C-a c&quot; command.  In addition, new windows can be created by running  a</span><br><span class="line">       command like:</span><br><span class="line"></span><br><span class="line">              screen emacs prog.c</span><br><span class="line"></span><br><span class="line">       from  a shell prompt within a previously created window.  This will not</span><br><span class="line">       run another copy of screen, but will instead supply  the  command  name</span><br><span class="line">       and its arguments to the window manager (specified in the $STY environ-</span><br><span class="line">       ment variable) who will use it to create the  new  window.   The  above</span><br><span class="line">       example would start the emacs editor (editing prog.c) and switch to its</span><br><span class="line">       window.</span><br><span class="line"></span><br><span class="line">       If &quot;/etc/utmp&quot; is writable by screen, an  appropriate  record  will  be</span><br><span class="line">       written  to  this  file for each window, and removed when the window is</span><br><span class="line">       terminated.  This is useful for working with &quot;talk&quot;,  &quot;script&quot;,  &quot;shut-</span><br><span class="line">       down&quot;,  &quot;rsend&quot;,  &quot;sccs&quot;  and  other similar programs that use the utmp</span><br><span class="line">       file to determine who you are. As long as screen is active on your ter-</span><br><span class="line">       minal,  the  terminal&#x27;s  own  record is removed from the utmp file. See</span><br><span class="line">       also &quot;C-a L&quot;.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GETTING STARTED</span><br><span class="line">       Before you begin to use screen you&#x27;ll need to make sure you  have  cor-</span><br><span class="line">       rectly  selected  your  terminal  type, just as you would for any other</span><br><span class="line">       termcap/terminfo program.  (You can do this by using tset for example.)</span><br><span class="line"></span><br><span class="line">       If  you&#x27;re  impatient  and want to get started without doing a lot more</span><br><span class="line">       reading, you should remember this one command:  &quot;C-a ?&quot;.  Typing  these</span><br><span class="line">       two characters will display a list of the available screen commands and</span><br><span class="line">       their bindings. Each keystroke is discussed in the section &quot;DEFAULT KEY</span><br><span class="line">       BINDINGS&quot;.  The  manual section &quot;CUSTOMIZATION&quot; deals with the contents</span><br><span class="line">       of your .screenrc.</span><br><span class="line"></span><br><span class="line">       If your terminal is a &quot;true&quot; auto-margin terminal (it doesn&#x27;t allow the</span><br><span class="line">       last position on the screen to be updated without scrolling the screen)</span><br><span class="line">       consider using a version of your terminal&#x27;s termcap that has  automatic</span><br><span class="line">       margins  turned off. This will ensure an accurate and optimal update of</span><br><span class="line">       the screen in all circumstances. Most terminals nowadays  have  &quot;magic&quot;</span><br><span class="line">       margins  (automatic margins plus usable last column). This is the VT100</span><br><span class="line">       style type and perfectly suited for screen.  If all  you&#x27;ve  got  is  a</span><br><span class="line">       &quot;true&quot;  auto-margin  terminal  screen  will  be  content to use it, but</span><br><span class="line">       updating a character put into the last position on the screen  may  not</span><br><span class="line">       be  possible  until the screen scrolls or the character is moved into a</span><br><span class="line">       safe position in some other way. This delay can be shortened by using a</span><br><span class="line">       terminal with insert-character capability.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">COMMAND-LINE OPTIONS</span><br><span class="line">       Screen has the following command-line options:</span><br><span class="line"></span><br><span class="line">       -a   include all capabilities (with some minor exceptions) in each win-</span><br><span class="line">            dow&#x27;s termcap, even if screen must redraw parts of the display  in</span><br><span class="line">            order to implement a function.</span><br><span class="line"></span><br><span class="line">       -A   Adapt  the  sizes of all windows to the size of the current termi-</span><br><span class="line">            nal.  By default, screen tries to restore  its  old  window  sizes</span><br><span class="line">            when  attaching  to  resizable  terminals  (those with &quot;WS&quot; in its</span><br><span class="line">            description, e.g. suncmd or some xterm).</span><br><span class="line"></span><br><span class="line">       -c file</span><br><span class="line">            override the default configuration file from &quot;$HOME/.screenrc&quot;  to</span><br><span class="line">            file.</span><br><span class="line"></span><br><span class="line">       -d|-D [pid.tty.host]</span><br><span class="line">            does  not  start screen, but detaches the elsewhere running screen</span><br><span class="line">            session. It has the same effect as typing &quot;C-a  d&quot;  from  screen&#x27;s</span><br><span class="line">            controlling  terminal.  -D  is  the equivalent to the power detach</span><br><span class="line">            key.  If no session can be detached, this option  is  ignored.  In</span><br><span class="line">            combination  with  the  -r/-R  option more powerful effects can be</span><br><span class="line">            achieved:</span><br><span class="line"></span><br><span class="line">       -d -r   Reattach a session and if necessary detach it first.</span><br><span class="line"></span><br><span class="line">       -d -R   Reattach a session and if necessary detach or  even  create  it</span><br><span class="line">               first.</span><br><span class="line"></span><br><span class="line">       -d -RR  Reattach  a  session  and if necessary detach or create it. Use</span><br><span class="line">               the first session if more than one session is available.</span><br><span class="line"></span><br><span class="line">       -D -r   Reattach a session. If necessary  detach  and  logout  remotely</span><br><span class="line">               first.</span><br><span class="line"></span><br><span class="line">       -D -R   Attach here and now. In detail this means: If a session is run-</span><br><span class="line">               ning, then reattach. If necessary detach  and  logout  remotely</span><br><span class="line">               first.   If  it  was not running create it and notify the user.</span><br><span class="line">               This is the author&#x27;s favorite.</span><br><span class="line"></span><br><span class="line">       -D -RR  Attach here and now. Whatever that means, just do it.</span><br><span class="line"></span><br><span class="line">            Note: It is always a good idea to check the status  of  your  ses-</span><br><span class="line">            sions by means of &quot;screen -list&quot;.</span><br><span class="line"></span><br><span class="line">       -e xy</span><br><span class="line">            specifies the command character to be x and the character generat-</span><br><span class="line">            ing a literal command character to y (when typed after the command</span><br><span class="line">            character).   The default is &quot;C-a&quot; and `a&#x27;, which can be specified</span><br><span class="line">            as &quot;-e^Aa&quot;.  When creating a screen session, this option sets  the</span><br><span class="line">            default  command character. In a multiuser session all users added</span><br><span class="line">            will start off with this command character. But when attaching  to</span><br><span class="line">            an  already  running session, this option changes only the command</span><br><span class="line">            character of the attaching user.  This  option  is  equivalent  to</span><br><span class="line">            either the commands &quot;defescape&quot; or &quot;escape&quot; respectively.</span><br><span class="line"></span><br><span class="line">       -f, -fn, and -fa</span><br><span class="line">            turns  flow-control  on, off, or &quot;automatic switching mode&quot;.  This</span><br><span class="line">            can also be defined through the &quot;defflow&quot; .screenrc command.</span><br><span class="line"></span><br><span class="line">       -h num</span><br><span class="line">            Specifies the history scrollback buffer to be num lines high.</span><br><span class="line"></span><br><span class="line">       -i   will cause the interrupt key (usually C-c) to interrupt  the  dis-</span><br><span class="line">            play  immediately  when  flow-control  is  on.   See the &quot;defflow&quot;</span><br><span class="line">            .screenrc command for details.  The use of this option is discour-</span><br><span class="line">            aged.</span><br><span class="line"></span><br><span class="line">       -l and -ln</span><br><span class="line">            turns  login  mode  on  or off (for /etc/utmp updating).  This can</span><br><span class="line">            also be defined through the &quot;deflogin&quot; .screenrc command.</span><br><span class="line"></span><br><span class="line">       -ls and -list</span><br><span class="line">            does not start screen, but prints a list of  pid.tty.host  strings</span><br><span class="line">            identifying  your screen sessions.  Sessions marked `detached&#x27; can</span><br><span class="line">            be resumed with &quot;screen -r&quot;. Those marked `attached&#x27;  are  running</span><br><span class="line">            and  have a controlling terminal. If the session runs in multiuser</span><br><span class="line">            mode, it is  marked  `multi&#x27;.  Sessions  marked  as  `unreachable&#x27;</span><br><span class="line">            either  live  on  a  different host or are `dead&#x27;.  An unreachable</span><br><span class="line">            session is considered dead, when its name matches either the  name</span><br><span class="line">            of the local host, or the specified parameter, if any.  See the -r</span><br><span class="line">            flag for a description how to construct matches.  Sessions  marked</span><br><span class="line">            as `dead&#x27; should be thoroughly checked and removed.  Ask your sys-</span><br><span class="line">            tem administrator if you are not sure. Remove  sessions  with  the</span><br><span class="line">            -wipe option.</span><br><span class="line"></span><br><span class="line">       -L   tells  screen to turn on automatic output logging for the windows.</span><br><span class="line"></span><br><span class="line">       -m   causes screen  to  ignore  the  $STY  environment  variable.  With</span><br><span class="line">            &quot;screen  -m&quot;  creation  of  a  new session is enforced, regardless</span><br><span class="line">            whether screen is called from within  another  screen  session  or</span><br><span class="line">            not.  This  flag has a special meaning in connection with the `-d&#x27;</span><br><span class="line">            option:</span><br><span class="line"></span><br><span class="line">       -d -m   Start screen in &quot;detached&quot; mode. This creates a new session but</span><br><span class="line">               doesn&#x27;t  attach  to  it.  This  is  useful  for  system startup</span><br><span class="line">               scripts.</span><br><span class="line"></span><br><span class="line">       -D -m   This also starts screen in &quot;detached&quot; mode, but doesn&#x27;t fork  a</span><br><span class="line">               new process. The command exits if the session terminates.</span><br><span class="line"></span><br><span class="line">       -O   selects  a  more optimal output mode for your terminal rather than</span><br><span class="line">            true VT100 emulation (only affects auto-margin  terminals  without</span><br><span class="line">            `LP&#x27;).   This can also be set in your .screenrc by specifying `OP&#x27;</span><br><span class="line">            in a &quot;termcap&quot; command.</span><br><span class="line"></span><br><span class="line">       -p number_or_name</span><br><span class="line">            Preselect a window. This is usefull when you want to reattach to a</span><br><span class="line">            specific  windor or you want to send a command via the &quot;-X&quot; option</span><br><span class="line">            to a specific window. As with screen&#x27;s select commant, &quot;-&quot; selects</span><br><span class="line">            the  blank  window.  As a special case for reattach, &quot;=&quot; brings up</span><br><span class="line">            the windowlist on the blank window.</span><br><span class="line"></span><br><span class="line">       -q   Suppress printing of error messages. In combination with &quot;-ls&quot; the</span><br><span class="line">            exit  value  is  as  follows: 9 indicates a directory without ses-</span><br><span class="line">            sions. 10 indicates a directory with running  but  not  attachable</span><br><span class="line">            sessions.  11 (or more) indicates 1 (or more) usable sessions.  In</span><br><span class="line">            combination with &quot;-r&quot; the exit value is as follows:  10  indicates</span><br><span class="line">            that  there  is  no session to resume. 12 (or more) indicates that</span><br><span class="line">            there are 2 (or more) sessions to resume and  you  should  specify</span><br><span class="line">            which one to choose.  In all other cases &quot;-q&quot; has no effect.</span><br><span class="line"></span><br><span class="line">       -r [pid.tty.host]</span><br><span class="line">       -r sessionowner/[pid.tty.host]</span><br><span class="line">            resumes  a detached screen session.  No other options (except com-</span><br><span class="line">            binations with -d/-D) may be specified, though an optional  prefix</span><br><span class="line">            of  [pid.]tty.host  may  be needed to distinguish between multiple</span><br><span class="line">            detached screen sessions.  The second form is used to  connect  to</span><br><span class="line">            another  user&#x27;s  screen session which runs in multiuser mode. This</span><br><span class="line">            indicates that screen should look for sessions in  another  user&#x27;s</span><br><span class="line">            directory. This requires setuid-root.</span><br><span class="line"></span><br><span class="line">       -R   attempts to resume the first detached screen session it finds.  If</span><br><span class="line">            successful, all other command-line options  are  ignored.   If  no</span><br><span class="line">            detached  session exists, starts a new session using the specified</span><br><span class="line">            options, just as if -R had not been specified. The option  is  set</span><br><span class="line">            by default if screen is run as a login-shell (actually screen uses</span><br><span class="line">            &quot;-xRR&quot; in that case).  For combinations with the -d/-D option  see</span><br><span class="line">            there.</span><br><span class="line"></span><br><span class="line">       -s   sets  the  default  shell to the program specified, instead of the</span><br><span class="line">            value in the environment variable  $SHELL  (or  &quot;/bin/sh&quot;  if  not</span><br><span class="line">            defined).   This can also be defined through the &quot;shell&quot; .screenrc</span><br><span class="line">            command.</span><br><span class="line"></span><br><span class="line">       -S sessionname</span><br><span class="line">            When creating a new session, this option can be used to specify  a</span><br><span class="line">            meaningful  name for the session. This name identifies the session</span><br><span class="line">            for &quot;screen -list&quot; and &quot;screen -r&quot;  actions.  It  substitutes  the</span><br><span class="line">            default [tty.host] suffix.</span><br><span class="line"></span><br><span class="line">       -t name</span><br><span class="line">            sets  the  title  (a.k.a.) for the default shell or specified pro-</span><br><span class="line">            gram.  See also the &quot;shelltitle&quot; .screenrc command.</span><br><span class="line"></span><br><span class="line">       -U   Run screen in UTF-8 mode. This option tells screen that your  ter-</span><br><span class="line">            minal sends and understands UTF-8 encoded characters. It also sets</span><br><span class="line">            the default encoding for new windows to `utf8&#x27;.</span><br><span class="line"></span><br><span class="line">       -v   Print version number.</span><br><span class="line"></span><br><span class="line">       -wipe [match]</span><br><span class="line">            does the same as &quot;screen  -ls&quot;,  but  removes  destroyed  sessions</span><br><span class="line">            instead of marking them as `dead&#x27;.  An unreachable session is con-</span><br><span class="line">            sidered dead, when its name matches either the name of  the  local</span><br><span class="line">            host,  or the explicitly given parameter, if any.  See the -r flag</span><br><span class="line">            for a description how to construct matches.</span><br><span class="line"></span><br><span class="line">       -x   Attach to a not detached screen session. (Multi display mode).</span><br><span class="line"></span><br><span class="line">       -X   Send the specified command to a running screen  session.  You  can</span><br><span class="line">            use  the  -d or -r option to tell screen to look only for attached</span><br><span class="line">            or detached screen sessions. Note that this command  doesn&#x27;t  work</span><br><span class="line">            if the session is password protected.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DEFAULT KEY BINDINGS</span><br><span class="line">       As  mentioned,  each screen command consists of a &quot;C-a&quot; followed by one</span><br><span class="line">       other character.  For your convenience, all commands that are bound  to</span><br><span class="line">       lower-case  letters  are also bound to their control character counter-</span><br><span class="line">       parts (with the exception of &quot;C-a a&quot;; see below), thus, &quot;C-a c&quot; as well</span><br><span class="line">       as  &quot;C-a  C-c&quot;  can be used to create a window. See section &quot;CUSTOMIZA-</span><br><span class="line">       TION&quot; for a description of the command.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       The following table shows the default key bindings:</span><br><span class="line"></span><br><span class="line">       C-a &#x27;       (select)      Prompt for a window name or number to  switch</span><br><span class="line">                                 to.</span><br><span class="line"></span><br><span class="line">       C-a &quot;       (windowlist -b)</span><br><span class="line">                                 Present  a list of all windows for selection.</span><br><span class="line"></span><br><span class="line">       C-a 0       (select 0)</span><br><span class="line">        ...           ...</span><br><span class="line">       C-a 9       (select 9)</span><br><span class="line">       C-a -       (select -)    Switch to window number 0  -  9,  or  to  the</span><br><span class="line">                                 blank window.</span><br><span class="line"></span><br><span class="line">       C-a tab     (focus)       Switch the input focus to the next region.</span><br><span class="line"></span><br><span class="line">       C-a C-a     (other)       Toggle  to  the  window displayed previously.</span><br><span class="line">                                 Note that this binding defaults to  the  com-</span><br><span class="line">                                 mand  character  typed twice, unless overrid-</span><br><span class="line">                                 den.  For instance, if  you  use  the  option</span><br><span class="line">                                 &quot;-e]x&quot;, this command becomes &quot;]]&quot;.</span><br><span class="line"></span><br><span class="line">       C-a a       (meta)        Send  the  command character (C-a) to window.</span><br><span class="line">                                 See escape command.</span><br><span class="line"></span><br><span class="line">       C-a A       (title)       Allow the user to enter a name for  the  cur-</span><br><span class="line">                                 rent window.</span><br><span class="line"></span><br><span class="line">       C-a b</span><br><span class="line">       C-a C-b     (break)       Send a break to window.</span><br><span class="line"></span><br><span class="line">       C-a B       (pow_break)   Reopen the terminal line and send a break.</span><br><span class="line"></span><br><span class="line">       C-a c</span><br><span class="line">       C-a C-c     (screen)      Create  a  new window with a shell and switch</span><br><span class="line">                                 to that window.</span><br><span class="line"></span><br><span class="line">       C-a C       (clear)       Clear the screen.</span><br><span class="line"></span><br><span class="line">       C-a d</span><br><span class="line">       C-a C-d     (detach)      Detach screen from this terminal.</span><br><span class="line"></span><br><span class="line">       C-a D D     (pow_detach)  Detach and logout.</span><br><span class="line"></span><br><span class="line">       C-a f</span><br><span class="line">       C-a C-f     (flow)        Toggle flow on, off or auto.</span><br><span class="line"></span><br><span class="line">       C-a F       (fit)         Resize the window to the current region size.</span><br><span class="line"></span><br><span class="line">       C-a C-g     (vbell)       Toggles screen&#x27;s visual bell mode.</span><br><span class="line"></span><br><span class="line">       C-a h       (hardcopy)    Write a hardcopy of the current window to the</span><br><span class="line">                                 file &quot;hardcopy.n&quot;.</span><br><span class="line"></span><br><span class="line">       C-a H       (log)         Begins/ends logging of the current window  to</span><br><span class="line">                                 the file &quot;screenlog.n&quot;.</span><br><span class="line"></span><br><span class="line">       C-a i</span><br><span class="line">       C-a C-i     (info)        Show info about this window.</span><br><span class="line"></span><br><span class="line">       C-a k</span><br><span class="line">       C-a C-k     (kill)        Destroy current window.</span><br><span class="line"></span><br><span class="line">       C-a l</span><br><span class="line">       C-a C-l     (redisplay)   Fully refresh current window.</span><br><span class="line"></span><br><span class="line">       C-a L       (login)       Toggle  this  windows  login  slot. Available</span><br><span class="line">                                 only if screen is configured  to  update  the</span><br><span class="line">                                 utmp database.</span><br><span class="line"></span><br><span class="line">       C-a m</span><br><span class="line">       C-a C-m     (lastmsg)     Repeat the last message displayed in the mes-</span><br><span class="line">                                 sage line.</span><br><span class="line"></span><br><span class="line">       C-a M       (monitor)     Toggles monitoring of the current window.</span><br><span class="line"></span><br><span class="line">       C-a space</span><br><span class="line">       C-a n</span><br><span class="line">       C-a C-n     (next)        Switch to the next window.</span><br><span class="line"></span><br><span class="line">       C-a N       (number)      Show the number (and title)  of  the  current</span><br><span class="line">                                 window.</span><br><span class="line"></span><br><span class="line">       C-a backspace</span><br><span class="line">       C-a h</span><br><span class="line">       C-a p</span><br><span class="line">       C-a C-p     (prev)        Switch to the previous window (opposite of C-</span><br><span class="line">                                 a n).</span><br><span class="line"></span><br><span class="line">       C-a q</span><br><span class="line">       C-a C-q     (xon)         Send a control-q to the current window.</span><br><span class="line"></span><br><span class="line">       C-a Q       (only)        Delete all regions but the current one.</span><br><span class="line"></span><br><span class="line">       C-a r</span><br><span class="line">       C-a C-r     (wrap)        Toggle the current window&#x27;s line-wrap setting</span><br><span class="line">                                 (turn  the current window&#x27;s automatic margins</span><br><span class="line">                                 on and off).</span><br><span class="line"></span><br><span class="line">       C-a s</span><br><span class="line">       C-a C-s     (xoff)        Send a control-s to the current window.</span><br><span class="line"></span><br><span class="line">       C-a S       (split)       Split the current region into two new ones.</span><br><span class="line"></span><br><span class="line">       C-a t</span><br><span class="line">       C-a C-t     (time)        Show system information.</span><br><span class="line"></span><br><span class="line">       C-a v       (version)     Display the version and compilation date.</span><br><span class="line"></span><br><span class="line">       C-a C-v     (digraph)     Enter digraph.</span><br><span class="line"></span><br><span class="line">       C-a w</span><br><span class="line">       C-a C-w     (windows)     Show a list of window.</span><br><span class="line"></span><br><span class="line">       C-a W       (width)       Toggle 80/132 columns.</span><br><span class="line"></span><br><span class="line">       C-a x</span><br><span class="line">       C-a C-x     (lockscreen)  Lock this terminal.</span><br><span class="line"></span><br><span class="line">       C-a X       (remove)      Kill the current region.</span><br><span class="line"></span><br><span class="line">       C-a z</span><br><span class="line">       C-a C-z     (suspend)     Suspend screen.   Your  system  must  support</span><br><span class="line">                                 BSD-style job-control.</span><br><span class="line"></span><br><span class="line">       C-a Z       (reset)       Reset  the virtual terminal to its &quot;power-on&quot;</span><br><span class="line">                                 values.</span><br><span class="line"></span><br><span class="line">       C-a .       (dumptermcap) Write out a &quot;.termcap&quot; file.</span><br><span class="line"></span><br><span class="line">       C-a ?       (help)        Show key bindings.</span><br><span class="line"></span><br><span class="line">       C-a C-\     (quit)        Kill all windows and terminate screen.</span><br><span class="line"></span><br><span class="line">       C-a :       (colon)       Enter command line mode.</span><br><span class="line"></span><br><span class="line">       C-a [</span><br><span class="line">       C-a C-[</span><br><span class="line">       C-a esc     (copy)        Enter copy/scrollback mode.</span><br><span class="line"></span><br><span class="line">       C-a ]       (paste .)     Write the contents of the paste buffer to the</span><br><span class="line">                                 stdin queue of the current window.</span><br><span class="line"></span><br><span class="line">       C-a &#123;</span><br><span class="line">       C-a &#125;       (history)     Copy and paste a previous (command) line.</span><br><span class="line"></span><br><span class="line">       C-a &gt;       (writebuf)    Write paste buffer to a file.</span><br><span class="line"></span><br><span class="line">       C-a &lt;       (readbuf)     Reads the screen-exchange file into the paste</span><br><span class="line">                                 buffer.</span><br><span class="line"></span><br><span class="line">       C-a =       (removebuf)   Removes the file used by C-a &lt; and C-a &gt;.</span><br><span class="line"></span><br><span class="line">       C-a ,       (license)     Shows where screen comes from, where it  went</span><br><span class="line">                                 to and why you can use it.</span><br><span class="line"></span><br><span class="line">       C-a _       (silence)     Start/stop  monitoring the current window for</span><br><span class="line">                                 inactivity.</span><br><span class="line"></span><br><span class="line">       C-a *       (displays)    Show a listing of all currently attached dis-</span><br><span class="line">                                 plays.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CUSTOMIZATION</span><br><span class="line">       The  &quot;socket  directory&quot;  defaults either to $HOME/.screen or simply to</span><br><span class="line">       /tmp/screens or preferably to  /usr/local/screens  chosen  at  compile-</span><br><span class="line">       time. If screen is installed setuid-root, then the administrator should</span><br><span class="line">       compile screen with an adequate (not NFS mounted) socket directory.  If</span><br><span class="line">       screen  is  not  running setuid-root, the user can specify any mode 700</span><br><span class="line">       directory in the environment variable $SCREENDIR.</span><br><span class="line"></span><br><span class="line">       When screen is invoked, it executes initialization  commands  from  the</span><br><span class="line">       files  &quot;/usr/local/etc/screenrc&quot;  and  &quot;.screenrc&quot;  in  the user&#x27;s home</span><br><span class="line">       directory. These are the &quot;programmer&#x27;s defaults&quot; that can be overridden</span><br><span class="line">       in the following ways: for the global screenrc file screen searches for</span><br><span class="line">       the environment variable $SYSSCREENRC (this  override  feature  may  be</span><br><span class="line">       disabled  at compile-time). The user specific screenrc file is searched</span><br><span class="line">       in $SCREENRC, then $HOME/.screenrc.  The command line option  -c  takes</span><br><span class="line">       precedence over the above user screenrc files.</span><br><span class="line"></span><br><span class="line">       Commands  in  these  files  are  used to set options, bind functions to</span><br><span class="line">       keys, and to automatically establish one or more windows at the  begin-</span><br><span class="line">       ning  of  your  screen session.  Commands are listed one per line, with</span><br><span class="line">       empty lines being ignored.  A command&#x27;s arguments are separated by tabs</span><br><span class="line">       or  spaces,  and  may  be surrounded by single or double quotes.  A `#&#x27;</span><br><span class="line">       turns the rest of the line into a comment, except in quotes.   Unintel-</span><br><span class="line">       ligible  lines are warned about and ignored.  Commands may contain ref-</span><br><span class="line">       erences to environment variables. The syntax is the shell-like &quot;$VAR  &quot;</span><br><span class="line">       or &quot;$&#123;VAR&#125;&quot;. Note that this causes incompatibility with previous screen</span><br><span class="line">       versions, as now the &#x27;$&#x27;-character has to be protected with &#x27;\&#x27;  if  no</span><br><span class="line">       variable  substitution shall be performed. A string in single-quotes is</span><br><span class="line">       also protected from variable substitution.</span><br><span class="line"></span><br><span class="line">       Two configuration files are shipped as examples with your  screen  dis-</span><br><span class="line">       tribution:  &quot;etc/screenrc&quot; and &quot;etc/etcscreenrc&quot;. They contain a number</span><br><span class="line">       of useful examples for various commands.</span><br><span class="line"></span><br><span class="line">       Customization can also be done &#x27;on-line&#x27;. To  enter  the  command  mode</span><br><span class="line">       type  `C-a  :&#x27;.  Note  that commands starting with &quot;def&quot; change default</span><br><span class="line">       values, while others change current settings.</span><br><span class="line"></span><br><span class="line">       The following commands are available:</span><br><span class="line"></span><br><span class="line">       acladd usernames [crypted-pw]</span><br><span class="line">       addacl usernames</span><br><span class="line"></span><br><span class="line">       Enable users to fully access this screen session. Usernames can be  one</span><br><span class="line">       user or a comma separated list of users. This command enables to attach</span><br><span class="line">       to the screen session and performs the equivalent of `aclchg  usernames</span><br><span class="line">       +rwx  &quot;#?&quot;&#x27;.   executed.  To add a user with restricted access, use the</span><br><span class="line">       `aclchg&#x27; command below.  If an optional second parameter  is  supplied,</span><br><span class="line">       it  should  be  a crypted password for the named user(s). `Addacl&#x27; is a</span><br><span class="line">       synonym to `acladd&#x27;.  Multi user mode only.</span><br><span class="line"></span><br><span class="line">       aclchg usernames permbits list</span><br><span class="line">       chacl usernames permbits list</span><br><span class="line"></span><br><span class="line">       Change permissions for a comma separated list of users. Permission bits</span><br><span class="line">       are  represented  as `r&#x27;, `w&#x27; and `x&#x27;. Prefixing `+&#x27; grants the permis-</span><br><span class="line">       sion, `-&#x27; removes it. The third parameter is a comma separated list  of</span><br><span class="line">       commands and/or windows (specified either by number or title). The spe-</span><br><span class="line">       cial list `#&#x27; refers to all windows, `?&#x27; to all commands. if  usernames</span><br><span class="line">       consists  of a single `*&#x27;, all known users are affected.  A command can</span><br><span class="line">       be executed when the user has the `x&#x27; bit for it.  The  user  can  type</span><br><span class="line">       input to a window when he has its `w&#x27; bit set and no other user obtains</span><br><span class="line">       a writelock for this window.  Other bits  are  currently  ignored.   To</span><br><span class="line">       withdraw  the writelock from another user in window 2: `aclchg username</span><br><span class="line">       -w+w 2&#x27;.  To allow read-only access to the session: `aclchg username -w</span><br><span class="line">       &quot;#&quot;&#x27;.  As soon as a user&#x27;s name is known to screen he can attach to the</span><br><span class="line">       session and (per default) has full permissions for all command and win-</span><br><span class="line">       dows. Execution permission for the acl commands, `at&#x27; and others should</span><br><span class="line">       also be removed or the user may be able  to  regain  write  permission.</span><br><span class="line">       Rights  of  the special username nobody cannot be changed (see the &quot;su&quot;</span><br><span class="line">       command).  `Chacl&#x27; is a synonym to `aclchg&#x27;.  Multi user mode only.</span><br><span class="line"></span><br><span class="line">       acldel username</span><br><span class="line"></span><br><span class="line">       Remove a user from screen&#x27;s access control list. If currently attached,</span><br><span class="line">       all the user&#x27;s displays are detached from the session. He cannot attach</span><br><span class="line">       again.  Multi user mode only.</span><br><span class="line"></span><br><span class="line">       aclgrp username [groupname]</span><br><span class="line"></span><br><span class="line">       Creates groups of users that share common access rights.  The  name  of</span><br><span class="line">       the group is the username of the group leader. Each member of the group</span><br><span class="line">       inherits the permissions that are granted to  the  group  leader.  That</span><br><span class="line">       means,  if  a user fails an access check, another check is made for the</span><br><span class="line">       group leader.  A user is removed from  all  groups  the  special  value</span><br><span class="line">       &quot;none&quot;  is  used for groupname.  If the second parameter is omitted all</span><br><span class="line">       groups the user is in are listed.</span><br><span class="line"></span><br><span class="line">       aclumask [[users]+bits |[users]-bits .... ]</span><br><span class="line">       umask [[users]+bits |[users]-bits .... ]</span><br><span class="line"></span><br><span class="line">       This specifies the access other users have to windows that will be cre-</span><br><span class="line">       ated  by  the  caller  of the command.  Users may be no, one or a comma</span><br><span class="line">       separated list of known usernames. If no users are specified, a list of</span><br><span class="line">       all  currently  known  users  is  assumed.   Bits is any combination of</span><br><span class="line">       access control bits allowed defined with the &quot;aclchg&quot; command. The spe-</span><br><span class="line">       cial  username  &quot;?&quot; predefines the access that not yet known users will</span><br><span class="line">       be granted to any window initially.  The special username  &quot;??&quot;  prede-</span><br><span class="line">       fines  the  access that not yet known users are granted to any command.</span><br><span class="line">       Rights of the special username nobody cannot be changed (see  the  &quot;su&quot;</span><br><span class="line">       command).  `Umask&#x27; is a synonym to `aclumask&#x27;.</span><br><span class="line"></span><br><span class="line">       activity message</span><br><span class="line"></span><br><span class="line">       When  any  activity  occurs  in a background window that is being moni-</span><br><span class="line">       tored, screen displays a notification in the message line.  The notifi-</span><br><span class="line">       cation  message  can  be re-defined by means of the &quot;activity&quot; command.</span><br><span class="line">       Each occurrence of `%&#x27; in message is replaced by the number of the win-</span><br><span class="line">       dow  in  which  activity  has  occurred, and each occurrence of `^G&#x27; is</span><br><span class="line">       replaced by the definition for bell in your termcap (usually an audible</span><br><span class="line">       bell).  The default message is</span><br><span class="line"></span><br><span class="line">                   &#x27;Activity in window %n&#x27;</span><br><span class="line"></span><br><span class="line">       Note  that  monitoring  is  off  for all windows by default, but can be</span><br><span class="line">       altered by use of the &quot;monitor&quot; command (C-a M).</span><br><span class="line"></span><br><span class="line">       allpartial on|off</span><br><span class="line"></span><br><span class="line">       If set to on, only the current  cursor  line  is  refreshed  on  window</span><br><span class="line">       change.   This  affects  all  windows  and  is useful for slow terminal</span><br><span class="line">       lines. The previous setting of full/partial refresh for each window  is</span><br><span class="line">       restored with &quot;allpartial off&quot;.  This is a global flag that immediately</span><br><span class="line">       takes effect on all windows overriding the &quot;partial&quot; settings. It  does</span><br><span class="line">       not change the default redraw behavior of newly created windows.</span><br><span class="line"></span><br><span class="line">       altscreen on|off</span><br><span class="line"></span><br><span class="line">       If  set  to on, &quot;alternate screen&quot; support is enabled in virtual termi-</span><br><span class="line">       nals, just like in xterm.  Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       at [identifier][#|*|%] command [args ... ]</span><br><span class="line"></span><br><span class="line">       Execute a command at other displays  or  windows  as  if  it  had  been</span><br><span class="line">       entered there.  &quot;At&quot; changes the context (the `current window&#x27; or `cur-</span><br><span class="line">       rent display&#x27; setting) of the command. If the first parameter describes</span><br><span class="line">       a  non-unique  context, the command will be executed multiple times. If</span><br><span class="line">       the first parameter is of the form  `identifier*&#x27;  then  identifier  is</span><br><span class="line">       matched against user names.  The command is executed once for each dis-</span><br><span class="line">       play of the selected user(s). If the first parameter  is  of  the  form</span><br><span class="line">       `identifier%&#x27;  identifier  is  matched  against  displays. Displays are</span><br><span class="line">       named after the ttys they attach. The prefix `/dev/&#x27; or `/dev/tty&#x27;  may</span><br><span class="line">       be  omitted  from  the  identifier.  If identifier has a `#&#x27; or nothing</span><br><span class="line">       appended it is matched against window numbers and titles.  Omitting  an</span><br><span class="line">       identifier in front of the `#&#x27;, `*&#x27; or `%&#x27;-character selects all users,</span><br><span class="line">       displays or windows because a prefix-match is performed. Note  that  on</span><br><span class="line">       the  affected  display(s)  a short message will describe what happened.</span><br><span class="line">       Permission is checked for initiator of the &quot;at&quot; command,  not  for  the</span><br><span class="line">       owners  of  the affected display(s).  Note that the &#x27;#&#x27; character works</span><br><span class="line">       as a comment introducer when it is preceded by whitespace. This can  be</span><br><span class="line">       escaped by prefixing a &#x27;\&#x27;.  Permission is checked for the initiator of</span><br><span class="line">       the &quot;at&quot; command, not for the owners of the affected display(s).</span><br><span class="line">       Caveat: When matching against windows, the command is executed at least</span><br><span class="line">       once  per window. Commands that change the internal arrangement of win-</span><br><span class="line">       dows (like &quot;other&quot;) may be called again. In shared windows the  command</span><br><span class="line">       will be repeated for each attached display. Beware, when issuing toggle</span><br><span class="line">       commands like &quot;login&quot;!  Some commands (e.g. &quot;process&quot;) require  that  a</span><br><span class="line">       display  is associated with the target windows.  These commands may not</span><br><span class="line">       work correctly under &quot;at&quot; looping over windows.</span><br><span class="line"></span><br><span class="line">       attrcolor attrib [attribute/color-modifier]</span><br><span class="line"></span><br><span class="line">       This command can be used to highlight attributes by changing the  color</span><br><span class="line">       of  the  text.  If  the  attribute  attrib  is  in  use,  the specified</span><br><span class="line">       attribute/color modifier is also applied. If no modifier is given,  the</span><br><span class="line">       current one is deleted. See the &quot;STRING ESCAPES&quot; chapter for the syntax</span><br><span class="line">       of the modifier. Screen understands two pseudo-attributes,  &quot;i&quot;  stands</span><br><span class="line">       for  high-intensity  foreground  color and &quot;I&quot; for high-intensity back-</span><br><span class="line">       ground color.</span><br><span class="line"></span><br><span class="line">       Examples:</span><br><span class="line"></span><br><span class="line">              attrcolor b &quot;R&quot;</span><br><span class="line"></span><br><span class="line">       Change the color to bright red if bold text is to be printed.</span><br><span class="line"></span><br><span class="line">              attrcolor u &quot;-u b&quot;</span><br><span class="line"></span><br><span class="line">       Use blue text instead of underline.</span><br><span class="line"></span><br><span class="line">              attrcolor b &quot;.I&quot;</span><br><span class="line"></span><br><span class="line">       Use bright colors for  bold  text.  Most  terminal  emulators  do  this</span><br><span class="line">       already.</span><br><span class="line"></span><br><span class="line">              attrcolor i &quot;+b&quot;</span><br><span class="line"></span><br><span class="line">       Make bright colored text also bold.</span><br><span class="line"></span><br><span class="line">       autodetach on|off</span><br><span class="line"></span><br><span class="line">       Sets  whether screen will automatically detach upon hangup, which saves</span><br><span class="line">       all your running programs until they are resumed with a screen -r  com-</span><br><span class="line">       mand.   When  turned off, a hangup signal will terminate screen and all</span><br><span class="line">       the processes it contains. Autodetach is on by default.</span><br><span class="line"></span><br><span class="line">       autonuke on|off</span><br><span class="line"></span><br><span class="line">       Sets whether a clear screen sequence should nuke all  the  output  that</span><br><span class="line">       has not been written to the terminal. See also &quot;obuflimit&quot;.</span><br><span class="line"></span><br><span class="line">       backtick id lifespan autorefresh cmd args...</span><br><span class="line">       backtick id</span><br><span class="line"></span><br><span class="line">       Program  the  backtick command with the numerical id id.  The output of</span><br><span class="line">       such a command is used for substitution of the &quot;%`&quot; string escape.  The</span><br><span class="line">       specified  lifespan  is  the number of seconds the output is considered</span><br><span class="line">       valid. After this time, the command is run  again  if  a  corresponding</span><br><span class="line">       string  escape  is  encountered.  The autorefresh parameter triggers an</span><br><span class="line">       automatic refresh for caption and hardstatus strings after  the  speci-</span><br><span class="line">       fied  number  of seconds. Only the last line of output is used for sub-</span><br><span class="line">       stitution.</span><br><span class="line">       If both the lifespan and the autorefresh parameters are zero, the back-</span><br><span class="line">       tick  program is expected to stay in the background and generate output</span><br><span class="line">       once in a while.  In this case, the command is executed right away  and</span><br><span class="line">       screen  stores  the  last  line  of  output. If a new line gets printed</span><br><span class="line">       screen will automatically refresh the hardstatus or the captions.</span><br><span class="line">       The second form of the command deletes the backtick  command  with  the</span><br><span class="line">       numerical id id.</span><br><span class="line"></span><br><span class="line">       bce [on|off]</span><br><span class="line"></span><br><span class="line">       Change background-color-erase setting. If &quot;bce&quot; is set to on, all char-</span><br><span class="line">       acters cleared by an erase/insert/scroll/clear operation will  be  dis-</span><br><span class="line">       played  in  the  current  background color. Otherwise the default back-</span><br><span class="line">       ground color is used.</span><br><span class="line"></span><br><span class="line">       bell_msg [message]</span><br><span class="line"></span><br><span class="line">       When a bell character is sent to a background window, screen displays a</span><br><span class="line">       notification  in the message line.  The notification message can be re-</span><br><span class="line">       defined by this command.  Each occurrence of `%&#x27; in message is replaced</span><br><span class="line">       by  the  number  of  the window to which a bell has been sent, and each</span><br><span class="line">       occurrence of `^G&#x27; is replaced by the definition for bell in your term-</span><br><span class="line">       cap (usually an audible bell).  The default message is</span><br><span class="line"></span><br><span class="line">                   &#x27;Bell in window %n&#x27;</span><br><span class="line"></span><br><span class="line">       An  empty message can be supplied to the &quot;bell_msg&quot; command to suppress</span><br><span class="line">       output of a message line (bell_msg &quot;&quot;).  Without parameter, the current</span><br><span class="line">       message is shown.</span><br><span class="line"></span><br><span class="line">       bind [-c class] key [command [args]]</span><br><span class="line"></span><br><span class="line">       Bind  a command to a key.  By default, most of the commands provided by</span><br><span class="line">       screen are bound to one or more keys as indicated in the  &quot;DEFAULT  KEY</span><br><span class="line">       BINDINGS&quot;  section, e.g. the command to create a new window is bound to</span><br><span class="line">       &quot;C-c&quot; and &quot;c&quot;.  The &quot;bind&quot; command can be  used  to  redefine  the  key</span><br><span class="line">       bindings and to define new bindings.  The key argument is either a sin-</span><br><span class="line">       gle character, a two-character sequence of the form &quot;^x&quot;  (meaning  &quot;C-</span><br><span class="line">       x&quot;), a backslash followed by an octal number (specifying the ASCII code</span><br><span class="line">       of the character), or a backslash followed by a second character,  such</span><br><span class="line">       as  &quot;\^&quot; or &quot;\\&quot;.  The argument can also be quoted, if you like.  If no</span><br><span class="line">       further argument is given, any previously established binding for  this</span><br><span class="line">       key is removed.  The command argument can be any command listed in this</span><br><span class="line">       section.</span><br><span class="line"></span><br><span class="line">       If a command class is specified via the &quot;-c&quot; option, the key  is  bound</span><br><span class="line">       for the specified class. Use the &quot;command&quot; command to activate a class.</span><br><span class="line">       Command classes can be used to create multiple command keys  or  multi-</span><br><span class="line">       character bindings.</span><br><span class="line"></span><br><span class="line">       Some examples:</span><br><span class="line"></span><br><span class="line">                   bind &#x27; &#x27; windows</span><br><span class="line">                   bind ^k</span><br><span class="line">                   bind k</span><br><span class="line">                   bind K kill</span><br><span class="line">                   bind ^f screen telnet foobar</span><br><span class="line">                   bind \033 screen -ln -t root -h 1000 9 su</span><br><span class="line"></span><br><span class="line">       would bind the space key to the command that displays a list of windows</span><br><span class="line">       (so that the command usually invoked by &quot;C-a C-w&quot; would also be  avail-</span><br><span class="line">       able  as  &quot;C-a  space&quot;).  The  next three lines remove the default kill</span><br><span class="line">       binding from &quot;C-a C-k&quot; and &quot;C-a k&quot;.  &quot;C-a K&quot; is then bound to the  kill</span><br><span class="line">       command.  Then  it  binds  &quot;C-f&quot; to the command &quot;create a window with a</span><br><span class="line">       TELNET connection to foobar&quot;, and bind &quot;escape&quot;  to  the  command  that</span><br><span class="line">       creates an non-login window with a.k.a. &quot;root&quot; in slot #9, with a supe-</span><br><span class="line">       ruser shell and a scrollback buffer of 1000 lines.</span><br><span class="line"></span><br><span class="line">                   bind -c demo1 0 select 10</span><br><span class="line">                   bind -c demo1 1 select 11</span><br><span class="line">                   bind -c demo1 2 select 12</span><br><span class="line">                   bindkey &quot;^B&quot; command -c demo1</span><br><span class="line"></span><br><span class="line">       makes &quot;C-b 0&quot; select window 10, &quot;C-b 1&quot; window 11, etc.</span><br><span class="line"></span><br><span class="line">                   bind -c demo2 0 select 10</span><br><span class="line">                   bind -c demo2 1 select 11</span><br><span class="line">                   bind -c demo2 2 select 12</span><br><span class="line">                   bind - command -c demo2</span><br><span class="line"></span><br><span class="line">       makes &quot;C-a - 0&quot; select window 10, &quot;C-a - 1&quot; window 11, etc.</span><br><span class="line"></span><br><span class="line">       bindkey [-d] [-m] [-a] [[-k|-t] string [cmd args]]</span><br><span class="line"></span><br><span class="line">       This command manages screen&#x27;s input translation tables. Every entry  in</span><br><span class="line">       one  of  the  tables tells screen how to react if a certain sequence of</span><br><span class="line">       characters is encountered. There are three tables: one that should con-</span><br><span class="line">       tain  actions  programmed by the user, one for the default actions used</span><br><span class="line">       for terminal emulation and one for screen&#x27;s  copy  mode  to  do  cursor</span><br><span class="line">       movement.  See  section  &quot;INPUT  TRANSLATION&quot; for a list of default key</span><br><span class="line">       bindings.</span><br><span class="line">       If the -d option is given,  bindkey  modifies  the  default  table,  -m</span><br><span class="line">       changes  the  copy mode table and with neither option the user table is</span><br><span class="line">       selected.  The argument string is the sequence of characters  to  which</span><br><span class="line">       an action is bound. This can either be a fixed string or a termcap key-</span><br><span class="line">       board capability name (selectable with the -k option).</span><br><span class="line">       Some keys on a VT100 terminal can send a different string  if  applica-</span><br><span class="line">       tion  mode  is  turned  on  (e.g  the cursor keys).  Such keys have two</span><br><span class="line">       entries in the translation table. You can select the  application  mode</span><br><span class="line">       entry by specifying the -a option.</span><br><span class="line">       The -t option tells screen not to do inter-character timing. One cannot</span><br><span class="line">       turn off the timing if a termcap capability is used.</span><br><span class="line">       Cmd can be any of screen&#x27;s commands with an arbitrary number  of  args.</span><br><span class="line">       If cmd is omitted the key-binding is removed from the table.</span><br><span class="line">       Here are some examples of keyboard bindings:</span><br><span class="line"></span><br><span class="line">               bindkey -d</span><br><span class="line">       Show  all of the default key bindings. The application mode entries are</span><br><span class="line">       marked with [A].</span><br><span class="line"></span><br><span class="line">               bindkey -k k1 select 1</span><br><span class="line">       Make the &quot;F1&quot; key switch to window one.</span><br><span class="line"></span><br><span class="line">               bindkey -t foo stuff barfoo</span><br><span class="line">       Make &quot;foo&quot; an abbreviation of the word &quot;barfoo&quot;. Timeout is disabled so</span><br><span class="line">       that users can type slowly.</span><br><span class="line"></span><br><span class="line">               bindkey &quot;\024&quot; mapdefault</span><br><span class="line">       This  key-binding  makes  &quot;^T&quot; an escape character for key-bindings. If</span><br><span class="line">       you did the above &quot;stuff barfoo&quot; binding, you can enter the word  &quot;foo&quot;</span><br><span class="line">       by  typing  &quot;^Tfoo&quot;. If you want to insert a &quot;^T&quot; you have to press the</span><br><span class="line">       key twice (i.e. escape the escape binding).</span><br><span class="line"></span><br><span class="line">               bindkey -k F1 command</span><br><span class="line">       Make the F11 (not F1!) key an alternative screen escape (besides ^A).</span><br><span class="line"></span><br><span class="line">       break [duration]</span><br><span class="line"></span><br><span class="line">       Send a break signal for duration*0.25 seconds to this window.  For non-</span><br><span class="line">       Posix  systems  the  time  interval  may be rounded up to full seconds.</span><br><span class="line">       Most useful if a character device is attached to the window rather than</span><br><span class="line">       a shell process (See also chapter &quot;WINDOW TYPES&quot;). The maximum duration</span><br><span class="line">       of a break signal is limited to 15 seconds.</span><br><span class="line"></span><br><span class="line">       blanker</span><br><span class="line"></span><br><span class="line">       Activate the screen blanker. First the screen is cleared. If no blanker</span><br><span class="line">       program is defined, the cursor is turned off, otherwise, the program is</span><br><span class="line">       started and it&#x27;s output is written to the screen.  The  screen  blanker</span><br><span class="line">       is killed with the first keypress, the read key is discarded.</span><br><span class="line">       This command is normally used together with the &quot;idle&quot; command.</span><br><span class="line"></span><br><span class="line">       blankerprg [program args]</span><br><span class="line"></span><br><span class="line">       Defines a blanker program. Disables the blanker program if no arguments</span><br><span class="line">       are given.</span><br><span class="line"></span><br><span class="line">       breaktype [tcsendbreak|TIOCSBRK |TCSBRK]</span><br><span class="line"></span><br><span class="line">       Choose one of the available methods of generating a  break  signal  for</span><br><span class="line">       terminal  devices.  This command should affect the current window only.</span><br><span class="line">       But it still behaves identical to &quot;defbreaktype&quot;. This will be  changed</span><br><span class="line">       in  the  future.   Calling  &quot;breaktype&quot;  with no parameter displays the</span><br><span class="line">       break method for the current window.</span><br><span class="line"></span><br><span class="line">       bufferfile [exchange-file]</span><br><span class="line"></span><br><span class="line">       Change the filename used for reading and writing with the paste buffer.</span><br><span class="line">       If  the  optional  argument to the &quot;bufferfile&quot; command is omitted, the</span><br><span class="line">       default setting (&quot;/tmp/screen-exchange&quot;) is reactivated.  The following</span><br><span class="line">       example  will  paste  the system&#x27;s password file into the screen window</span><br><span class="line">       (using the paste buffer, where a copy remains):</span><br><span class="line"></span><br><span class="line">                   C-a : bufferfile /etc/passwd</span><br><span class="line">                   C-a &lt; C-a ]</span><br><span class="line">                   C-a : bufferfile</span><br><span class="line"></span><br><span class="line">       c1 [on|off]</span><br><span class="line"></span><br><span class="line">       Change c1 code processing. &quot;C1 on&quot; tells  screen  to  treat  the  input</span><br><span class="line">       characters  between  128  and  159 as control functions.  Such an 8-bit</span><br><span class="line">       code is normally the same as ESC followed by  the  corresponding  7-bit</span><br><span class="line">       code.  The  default  setting  is to process c1 codes and can be changed</span><br><span class="line">       with the &quot;defc1&quot; command.  Users with fonts that have usable characters</span><br><span class="line">       in the c1 positions may want to turn this off.</span><br><span class="line"></span><br><span class="line">       caption always|splitonly [string]</span><br><span class="line">       caption string [string]</span><br><span class="line"></span><br><span class="line">       This  command  controls  the display of the window captions. Normally a</span><br><span class="line">       caption is only used if more than one window is shown  on  the  display</span><br><span class="line">       (split  screen  mode).  But if the type is set to always screen shows a</span><br><span class="line">       caption even if only one window is displayed. The default is splitonly.</span><br><span class="line"></span><br><span class="line">       The  second form changes the text used for the caption. You can use all</span><br><span class="line">       escapes from the &quot;STRING ESCAPES&quot; chapter. Screen  uses  a  default  of</span><br><span class="line">       `%3n %t&#x27;.</span><br><span class="line"></span><br><span class="line">       You can mix both forms by providing a string as an additional argument.</span><br><span class="line"></span><br><span class="line">       charset set</span><br><span class="line"></span><br><span class="line">       Change the current character set slot designation and charset  mapping.</span><br><span class="line">       The  first  four  character  of  set are treated as charset designators</span><br><span class="line">       while the fifth and sixth character must be in range &#x27;0&#x27; to &#x27;3&#x27; and set</span><br><span class="line">       the GL/GR charset mapping. On every position a &#x27;.&#x27; may be used to indi-</span><br><span class="line">       cate that the corresponding charset/mapping should not be changed  (set</span><br><span class="line">       is  padded  to  six characters internally by appending &#x27;.&#x27;  chars). New</span><br><span class="line">       windows have &quot;BBBB02&quot; as default charset, unless a  &quot;encoding&quot;  command</span><br><span class="line">       is active.</span><br><span class="line">       The current setting can be viewed with the &quot;info&quot; command.</span><br><span class="line"></span><br><span class="line">       chdir [directory]</span><br><span class="line"></span><br><span class="line">       Change  the  current directory of screen to the specified directory or,</span><br><span class="line">       if called without an argument, to your home directory (the value of the</span><br><span class="line">       environment  variable $HOME).  All windows that are created by means of</span><br><span class="line">       the &quot;screen&quot; command from within &quot;.screenrc&quot; or  by  means  of  &quot;C-a  :</span><br><span class="line">       screen  ...&quot; or &quot;C-a c&quot; use this as their default directory.  Without a</span><br><span class="line">       chdir command, this would  be  the  directory  from  which  screen  was</span><br><span class="line">       invoked.   Hardcopy  and  log  files are always written to the window&#x27;s</span><br><span class="line">       default directory, not the current directory of the process running  in</span><br><span class="line">       the  window.  You can use this command multiple times in your .screenrc</span><br><span class="line">       to start various windows in different default directories, but the last</span><br><span class="line">       chdir value will affect all the windows you create interactively.</span><br><span class="line"></span><br><span class="line">       clear</span><br><span class="line"></span><br><span class="line">       Clears the current window and saves its image to the scrollback buffer.</span><br><span class="line"></span><br><span class="line">       colon [prefix]</span><br><span class="line"></span><br><span class="line">       Allows you to enter &quot;.screenrc&quot; command lines.  Useful  for  on-the-fly</span><br><span class="line">       modification  of  key  bindings,  specific window creation and changing</span><br><span class="line">       settings. Note that the &quot;set&quot; keyword no longer  exists!  Usually  com-</span><br><span class="line">       mands affect the current window rather than default settings for future</span><br><span class="line">       windows. Change defaults with commands starting with &#x27;def...&#x27;.</span><br><span class="line"></span><br><span class="line">       If you consider this as the `Ex command mode&#x27; of screen, you may regard</span><br><span class="line">       &quot;C-a esc&quot; (copy mode) as its `Vi command mode&#x27;.</span><br><span class="line"></span><br><span class="line">       command [-c class]</span><br><span class="line"></span><br><span class="line">       This  command has the same effect as typing the screen escape character</span><br><span class="line">       (^A). It is probably only useful for key bindings.  If the &quot;-c&quot;  option</span><br><span class="line">       is  given,  select  the  specified  command class.  See also &quot;bind&quot; and</span><br><span class="line">       &quot;bindkey&quot;.</span><br><span class="line"></span><br><span class="line">       compacthist [on|off]</span><br><span class="line"></span><br><span class="line">       This tells  screen  whether  to  suppress  trailing  blank  lines  when</span><br><span class="line">       scrolling up text into the history buffer.</span><br><span class="line"></span><br><span class="line">       console [on|off]</span><br><span class="line"></span><br><span class="line">       Grabs  or un-grabs the machines console output to a window.  Note: Only</span><br><span class="line">       the owner of /dev/console can grab the console output.  This command is</span><br><span class="line">       only available if the machine supports the ioctl TIOCCONS.</span><br><span class="line"></span><br><span class="line">       copy</span><br><span class="line"></span><br><span class="line">       Enter  copy/scrollback mode. This allows you to copy text from the cur-</span><br><span class="line">       rent window and its history into the paste buffer. In this mode  a  vi-</span><br><span class="line">       like `full screen editor&#x27; is active:</span><br><span class="line">       Movement keys:</span><br><span class="line">         h, j, k, l move the cursor line by line or column by column.</span><br><span class="line">         0,  ^  and  $  move to the leftmost column, to the first or last non-</span><br><span class="line">           whitespace character on the line.</span><br><span class="line">         H, M and L move the cursor to the leftmost column of the top,  center</span><br><span class="line">           or bottom line of the window.</span><br><span class="line">         + and - positions one line up and down.</span><br><span class="line">         G moves to the specified absolute line (default: end of buffer).</span><br><span class="line">         | moves to the specified absolute column.</span><br><span class="line">         w, b, e move the cursor word by word.</span><br><span class="line">         B, E move the cursor WORD by WORD (as in vi).</span><br><span class="line">         C-u  and  C-d  scroll  the display up/down by the specified amount of</span><br><span class="line">           lines while preserving the cursor position. (Default: half  screen-</span><br><span class="line">           full).</span><br><span class="line">         C-b and C-f scroll the display up/down a full screen.</span><br><span class="line">         g moves to the beginning of the buffer.</span><br><span class="line">         % jumps to the specified percentage of the buffer.</span><br><span class="line"></span><br><span class="line">       Note:</span><br><span class="line">           Emacs style movement keys can be customized by a .screenrc command.</span><br><span class="line">           (E.g. markkeys &quot;h=^B:l=^F:$=^E&quot;) There is no simple  method  for  a</span><br><span class="line">           full emacs-style keymap, as this involves multi-character codes.</span><br><span class="line"></span><br><span class="line">       Marking:</span><br><span class="line">           The  copy range is specified by setting two marks. The text between</span><br><span class="line">           these marks will be highlighted. Press</span><br><span class="line">         space to set the first or second mark respectively.</span><br><span class="line">         Y and y used to mark one whole line or to mark from start of line.</span><br><span class="line">         W marks exactly one word.</span><br><span class="line">       Repeat count:</span><br><span class="line">           Any of these commands can be prefixed with a repeat count number by</span><br><span class="line">           pressing digits</span><br><span class="line">         0..9 which is taken as a repeat count.</span><br><span class="line">           Example:  &quot;C-a  C-[  H  10 j 5 Y&quot; will copy lines 11 to 15 into the</span><br><span class="line">           paste buffer.</span><br><span class="line">       Searching:</span><br><span class="line">         / Vi-like search forward.</span><br><span class="line">         ? Vi-like search backward.</span><br><span class="line">         C-a s Emacs style incremental search forward.</span><br><span class="line">         C-r Emacs style reverse i-search.</span><br><span class="line">       Specials:</span><br><span class="line">           There are however some keys that act differently than  in  vi.   Vi</span><br><span class="line">           does  not  allow one to yank rectangular blocks of text, but screen</span><br><span class="line">           does. Press</span><br><span class="line">         c or C to set the left or right margin  respectively.  If  no  repeat</span><br><span class="line">           count is given, both default to the current cursor position.</span><br><span class="line">           Example: Try this on a rather full text screen: &quot;C-a [ M 20 l SPACE</span><br><span class="line">           c 10 l 5 j C SPACE&quot;.</span><br><span class="line"></span><br><span class="line">           This moves one to the middle line of the screen, moves in  20  col-</span><br><span class="line">           umns  left,  marks the beginning of the paste buffer, sets the left</span><br><span class="line">           column, moves 5 columns down, sets the right column, and then marks</span><br><span class="line">           the end of the paste buffer. Now try:</span><br><span class="line">           &quot;C-a [ M 20 l SPACE 10 l 5 j SPACE&quot;</span><br><span class="line"></span><br><span class="line">           and notice the difference in the amount of text copied.</span><br><span class="line">         J  joins lines. It toggles between 4 modes: lines separated by a new-</span><br><span class="line">           line character (012), lines glued seamless, lines  separated  by  a</span><br><span class="line">           single  whitespace  and  comma  separated  lines. Note that you can</span><br><span class="line">           prepend the newline character with a carriage return character,  by</span><br><span class="line">           issuing a &quot;crlf on&quot;.</span><br><span class="line">         v  is  for all the vi users with &quot;:set numbers&quot; - it toggles the left</span><br><span class="line">           margin between column 9 and 1. Press</span><br><span class="line">         a before the final space key to toggle in append mode. Thus the  con-</span><br><span class="line">           tents  of the paste buffer will not be overwritten, but is appended</span><br><span class="line">           to.</span><br><span class="line">         A toggles in append mode and sets a (second) mark.</span><br><span class="line">         &gt; sets the (second) mark and writes the contents of the paste  buffer</span><br><span class="line">           to the screen-exchange file (/tmp/screen-exchange per default) once</span><br><span class="line">           copy-mode is finished.</span><br><span class="line">           This example demonstrates how to dump the whole  scrollback  buffer</span><br><span class="line">           to that file: &quot;C-A [ g SPACE G $ &gt;&quot;.</span><br><span class="line">         C-g gives information about the current line and column.</span><br><span class="line">         x  exchanges  the first mark and the current cursor position. You can</span><br><span class="line">           use this to adjust an already placed mark.</span><br><span class="line">         @ does nothing. Does not even exit copy mode.</span><br><span class="line">         All keys not described here exit copy mode.</span><br><span class="line"></span><br><span class="line">       copy_reg [key]</span><br><span class="line"></span><br><span class="line">       No longer exists, use &quot;readreg&quot; instead.</span><br><span class="line"></span><br><span class="line">       crlf [on|off]</span><br><span class="line"></span><br><span class="line">       This affects the copying of text regions with the `C-a [&#x27;  command.  If</span><br><span class="line">       it  is  set  to  `on&#x27;,  lines  will  be  separated by the two character</span><br><span class="line">       sequence `CR&#x27; - `LF&#x27;.  Otherwise (default) only `LF&#x27; is used.  When  no</span><br><span class="line">       parameter is given, the state is toggled.</span><br><span class="line"></span><br><span class="line">       debug on|off</span><br><span class="line"></span><br><span class="line">       Turns  runtime  debugging  on  or off. If screen has been compiled with</span><br><span class="line">       option -DDEBUG debugging available and is turned on per  default.  Note</span><br><span class="line">       that  this command only affects debugging output from the main &quot;SCREEN&quot;</span><br><span class="line">       process correctly. Debug output from attacher  processes  can  only  be</span><br><span class="line">       turned off once and forever.</span><br><span class="line"></span><br><span class="line">       defc1 on|off</span><br><span class="line"></span><br><span class="line">       Same  as the c1 command except that the default setting for new windows</span><br><span class="line">       is changed. Initial setting is `on&#x27;.</span><br><span class="line"></span><br><span class="line">       defautonuke on|off</span><br><span class="line"></span><br><span class="line">       Same as the autonuke command except that the default  setting  for  new</span><br><span class="line">       displays  is  changed. Initial setting is `off&#x27;.  Note that you can use</span><br><span class="line">       the special `AN&#x27; terminal capability if you want to have  a  dependency</span><br><span class="line">       on the terminal type.</span><br><span class="line"></span><br><span class="line">       defbce on|off</span><br><span class="line"></span><br><span class="line">       Same as the bce command except that the default setting for new windows</span><br><span class="line">       is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defbreaktype [tcsendbreak|TIOCSBRK |TCSBRK]</span><br><span class="line"></span><br><span class="line">       Choose one of the available methods of generating a  break  signal  for</span><br><span class="line">       terminal  devices.  The preferred methods are tcsendbreak and TIOCSBRK.</span><br><span class="line">       The third, TCSBRK, blocks the complete screen session for the  duration</span><br><span class="line">       of  the  break,  but  it  may  be the only way to generate long breaks.</span><br><span class="line">       Tcsendbreak and TIOCSBRK may or may not produce long breaks with spikes</span><br><span class="line">       (e.g.  4 per second). This is not only system dependant, this also dif-</span><br><span class="line">       fers between serial board  drivers.   Calling  &quot;defbreaktype&quot;  with  no</span><br><span class="line">       parameter displays the current setting.</span><br><span class="line"></span><br><span class="line">       defcharset [set]</span><br><span class="line"></span><br><span class="line">       Like  the  charset command except that the default setting for new win-</span><br><span class="line">       dows is changed. Shows current default if called without argument.</span><br><span class="line"></span><br><span class="line">       defescape xy</span><br><span class="line"></span><br><span class="line">       Set the default command characters. This is equivalent to the  &quot;escape&quot;</span><br><span class="line">       except  that  it is useful multiuser sessions only. In a multiuser ses-</span><br><span class="line">       sion &quot;escape&quot; changes the command character of the calling user,  where</span><br><span class="line">       &quot;defescape&quot;  changes the default command characters for users that will</span><br><span class="line">       be added later.</span><br><span class="line"></span><br><span class="line">       defflow on|off|auto [interrupt]</span><br><span class="line"></span><br><span class="line">       Same as the flow command except that the default setting for  new  win-</span><br><span class="line">       dows  is  changed. Initial setting is `auto&#x27;.  Specifying &quot;defflow auto</span><br><span class="line">       interrupt&quot; is the same as the command-line options -fa and -i.</span><br><span class="line"></span><br><span class="line">       defgr on|off</span><br><span class="line"></span><br><span class="line">       Same as the gr command except that the default setting for new  windows</span><br><span class="line">       is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defhstatus [status]</span><br><span class="line"></span><br><span class="line">       The  hardstatus  line  that  all new windows will get is set to status.</span><br><span class="line">       This command is useful to make the hardstatus of every  window  display</span><br><span class="line">       the  window  number  or title or the like.  Status may contain the same</span><br><span class="line">       directives as in the window messages, but the directive escape  charac-</span><br><span class="line">       ter is &#x27;^E&#x27; (octal 005) instead of &#x27;%&#x27;.  This was done to make a misin-</span><br><span class="line">       terpretation of program generated hardstatus lines impossible.  If  the</span><br><span class="line">       parameter  status  is omitted, the current default string is displayed.</span><br><span class="line">       Per default the hardstatus line of new windows is empty.</span><br><span class="line"></span><br><span class="line">       defencoding enc</span><br><span class="line"></span><br><span class="line">       Same as the encoding command except that the default  setting  for  new</span><br><span class="line">       windows is changed. Initial setting is the encoding taken from the ter-</span><br><span class="line">       minal.</span><br><span class="line"></span><br><span class="line">       deflog on|off</span><br><span class="line"></span><br><span class="line">       Same as the log command except that the default setting for new windows</span><br><span class="line">       is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       deflogin on|off</span><br><span class="line"></span><br><span class="line">       Same  as the login command except that the default setting for new win-</span><br><span class="line">       dows is changed. This is initialized with `on&#x27; as distributed (see con-</span><br><span class="line">       fig.h.in).</span><br><span class="line"></span><br><span class="line">       defmode mode</span><br><span class="line"></span><br><span class="line">       The mode of each newly allocated pseudo-tty is set to mode.  Mode is an</span><br><span class="line">       octal number.  When no &quot;defmode&quot; command is given, mode 0622 is used.</span><br><span class="line"></span><br><span class="line">       defmonitor on|off</span><br><span class="line"></span><br><span class="line">       Same as the monitor command except that the  default  setting  for  new</span><br><span class="line">       windows is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defnonblock on|off|numsecs</span><br><span class="line"></span><br><span class="line">       Same  as  the nonblock command except that the default setting for dis-</span><br><span class="line">       plays is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defobuflimit limit</span><br><span class="line"></span><br><span class="line">       Same as the obuflimit command except that the default setting  for  new</span><br><span class="line">       displays  is  changed. Initial setting is 256 bytes.  Note that you can</span><br><span class="line">       use the special &#x27;OL&#x27; terminal capability if you want to have  a  depen-</span><br><span class="line">       dency on the terminal type.</span><br><span class="line"></span><br><span class="line">       defscrollback num</span><br><span class="line"></span><br><span class="line">       Same  as the scrollback command except that the default setting for new</span><br><span class="line">       windows is changed. Initial setting is 100.</span><br><span class="line"></span><br><span class="line">       defshell command</span><br><span class="line"></span><br><span class="line">       Synonym to the shell command. See there.</span><br><span class="line"></span><br><span class="line">       defsilence on|off</span><br><span class="line"></span><br><span class="line">       Same as the silence command except that the  default  setting  for  new</span><br><span class="line">       windows is changed. Initial setting is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defslowpaste msec&quot;</span><br><span class="line"></span><br><span class="line">       Same  as  the slowpaste command except that the default setting for new</span><br><span class="line">       windows is changed. Initial setting is 0 milliseconds, meaning `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defutf8 on|off</span><br><span class="line"></span><br><span class="line">       Same as the utf8 command except that the default setting for  new  win-</span><br><span class="line">       dows  is  changed.  Initial  setting is `on&#x27; if screen was started with</span><br><span class="line">       &quot;-U&quot;, otherwise `off&#x27;.</span><br><span class="line"></span><br><span class="line">       defwrap on|off</span><br><span class="line"></span><br><span class="line">       Same as the wrap command except that the default setting for  new  win-</span><br><span class="line">       dows  is changed. Initially line-wrap is on and can be toggled with the</span><br><span class="line">       &quot;wrap&quot; command (&quot;C-a r&quot;) or by means of &quot;C-a : wrap on|off&quot;.</span><br><span class="line"></span><br><span class="line">       defwritelock on|off|auto</span><br><span class="line"></span><br><span class="line">       Same as the writelock command except that the default setting  for  new</span><br><span class="line">       windows is changed. Initially writelocks will off.</span><br><span class="line"></span><br><span class="line">       defzombie [keys]</span><br><span class="line"></span><br><span class="line">       Synonym  to the zombie command. Both currently change the default.  See</span><br><span class="line">       there.</span><br><span class="line"></span><br><span class="line">       detach [-h]</span><br><span class="line"></span><br><span class="line">       Detach the screen session (disconnect it from the terminal and  put  it</span><br><span class="line">       into  the background).  This returns you to the shell where you invoked</span><br><span class="line">       screen.  A detached screen can be resumed by invoking screen  with  the</span><br><span class="line">       -r  option  (see  also  section  &quot;COMMAND-LINE OPTIONS&quot;). The -h option</span><br><span class="line">       tells screen to  immediately  close  the  connection  to  the  terminal</span><br><span class="line">       (&quot;hangup&quot;).</span><br><span class="line"></span><br><span class="line">       dinfo</span><br><span class="line"></span><br><span class="line">       Show what screen thinks about your terminal. Useful if you want to know</span><br><span class="line">       why features like color or the alternate charset don&#x27;t work.</span><br><span class="line"></span><br><span class="line">       displays</span><br><span class="line"></span><br><span class="line">       Shows a tabular listing of  all  currently  connected  user  front-ends</span><br><span class="line">       (displays).  This is most useful for multiuser sessions.</span><br><span class="line"></span><br><span class="line">       digraph [preset]</span><br><span class="line"></span><br><span class="line">       This  command  prompts  the  user  for a digraph sequence. The next two</span><br><span class="line">       characters typed are looked up in a builtin  table  and  the  resulting</span><br><span class="line">       character  is  inserted  in  the input stream. For example, if the user</span><br><span class="line">       enters &#x27;a&quot;&#x27;, an a-umlaut will  be  inserted.  If  the  first  character</span><br><span class="line">       entered  is  a 0 (zero), screen will treat the following characters (up</span><br><span class="line">       to three) as an octal number instead.  The optional argument preset  is</span><br><span class="line">       treated  as user input, thus one can create an &quot;umlaut&quot; key.  For exam-</span><br><span class="line">       ple the command &quot;bindkey ^K digraph &#x27;&quot;&#x27;&quot; enables the user  to  generate</span><br><span class="line">       an a-umlaut by typing CTRL-K a.</span><br><span class="line"></span><br><span class="line">       dumptermcap</span><br><span class="line"></span><br><span class="line">       Write the termcap entry for the virtual terminal optimized for the cur-</span><br><span class="line">       rently  active  window  to  the   file   &quot;.termcap&quot;   in   the   user&#x27;s</span><br><span class="line">       &quot;$HOME/.screen&quot;  directory  (or wherever screen stores its sockets. See</span><br><span class="line">       the &quot;FILES&quot; section below).  This termcap entry  is  identical  to  the</span><br><span class="line">       value of the environment variable $TERMCAP that is set up by screen for</span><br><span class="line">       each window. For terminfo based systems you will need  to  run  a  con-</span><br><span class="line">       verter like captoinfo and then compile the entry with tic.</span><br><span class="line"></span><br><span class="line">       echo [-n] message</span><br><span class="line"></span><br><span class="line">       The  echo  command may be used to annoy screen users with a &#x27;message of</span><br><span class="line">       the day&#x27;. Typically installed in  a  global  /local/etc/screenrc.   The</span><br><span class="line">       option  &quot;-n&quot;  may be used to suppress the line feed.  See also &quot;sleep&quot;.</span><br><span class="line">       Echo is also useful for online checking of environment variables.</span><br><span class="line"></span><br><span class="line">       encoding enc [enc]</span><br><span class="line"></span><br><span class="line">       Tell screen how to interpret the input/output. The first argument  sets</span><br><span class="line">       the encoding of the current window. Each window can emulate a different</span><br><span class="line">       encoding. The optional second parameter overwrites the encoding of  the</span><br><span class="line">       connected terminal. It should never be needed as screen uses the locale</span><br><span class="line">       setting to detect the encoding.  There is also a way to select a termi-</span><br><span class="line">       nal  encoding  depending on the terminal type by using the &quot;KJ&quot; termcap</span><br><span class="line">       entry.</span><br><span class="line"></span><br><span class="line">       Supported encodings are eucJP, SJIS, eucKR, eucCN, Big5,  GBK,  KOI8-R,</span><br><span class="line">       CP1251,  UTF-8,  ISO8859-2, ISO8859-3, ISO8859-4, ISO8859-5, ISO8859-6,</span><br><span class="line">       ISO8859-7, ISO8859-8, ISO8859-9, ISO8859-10, ISO8859-15, jis.</span><br><span class="line"></span><br><span class="line">       See also &quot;defencoding&quot;, which changes the default setting of a new win-</span><br><span class="line">       dow.</span><br><span class="line"></span><br><span class="line">       escape xy</span><br><span class="line"></span><br><span class="line">       Set  the  command character to x and the character generating a literal</span><br><span class="line">       command character (by triggering the &quot;meta&quot; command) to y  (similar  to</span><br><span class="line">       the  -e  option).   Each  argument is either a single character, a two-</span><br><span class="line">       character sequence of the form &quot;^x&quot; (meaning &quot;C-x&quot;), a  backslash  fol-</span><br><span class="line">       lowed  by an octal number (specifying the ASCII code of the character),</span><br><span class="line">       or a backslash followed by a second character, such as  &quot;\^&quot;  or  &quot;\\&quot;.</span><br><span class="line">       The default is &quot;^Aa&quot;.</span><br><span class="line"></span><br><span class="line">       eval command1 [command2 ...]</span><br><span class="line"></span><br><span class="line">       Parses and executes each argument as separate command.</span><br><span class="line"></span><br><span class="line">       exec [[fdpat] newcommand [args ...]]</span><br><span class="line"></span><br><span class="line">       Run  a  unix subprocess (specified by an executable path newcommand and</span><br><span class="line">       its optional arguments) in the current window. The flow of data between</span><br><span class="line">       newcommands  stdin/stdout/stderr, the process originally started in the</span><br><span class="line">       window (let us call it &quot;application-process&quot;) and screen  itself  (win-</span><br><span class="line">       dow)  is  controlled by the filedescriptor pattern fdpat.  This pattern</span><br><span class="line">       is basically a three character sequence representing stdin, stdout  and</span><br><span class="line">       stderr of newcommand. A dot (.) connects the file descriptor to screen.</span><br><span class="line">       An exclamation mark (!) causes the file descriptor to be  connected  to</span><br><span class="line">       the application-process. A colon (:) combines both.  User input will go</span><br><span class="line">       to newcommand unless newcommand receives the application-process&#x27;  out-</span><br><span class="line">       put  (fdpats  first  character  is  `!&#x27; or `:&#x27;) or a pipe symbol (|) is</span><br><span class="line">       added (as a fourth character) to the end of fdpat.</span><br><span class="line">       Invoking `exec&#x27; without arguments shows name and arguments of the  cur-</span><br><span class="line">       rently  running  subprocess  in this window. Only one subprocess a time</span><br><span class="line">       can be running in each window.</span><br><span class="line">       When a subprocess is running the `kill&#x27; command will affect it  instead</span><br><span class="line">       of the windows process.</span><br><span class="line">       Refer  to  the postscript file `doc/fdpat.ps&#x27; for a confusing illustra-</span><br><span class="line">       tion of all 21 possible combinations. Each  drawing  shows  the  digits</span><br><span class="line">       2,1,0  representing  the  three file descriptors of newcommand. The box</span><br><span class="line">       marked `W&#x27; is the usual pty that has  the  application-process  on  its</span><br><span class="line">       slave  side.   The  box  marked  `P&#x27;  is the secondary pty that now has</span><br><span class="line">       screen at its master side.</span><br><span class="line"></span><br><span class="line">       Abbreviations:</span><br><span class="line">       Whitespace between the word `exec&#x27; and fdpat and  the  command  can  be</span><br><span class="line">       omitted. Trailing dots and a fdpat consisting only of dots can be omit-</span><br><span class="line">       ted. A simple `|&#x27; is synonymous for the pattern `!..|&#x27;; the  word  exec</span><br><span class="line">       can be omitted here and can always be replaced by `!&#x27;.</span><br><span class="line"></span><br><span class="line">       Examples:</span><br><span class="line"></span><br><span class="line">              exec ... /bin/sh</span><br><span class="line">              exec /bin/sh</span><br><span class="line">              !/bin/sh</span><br><span class="line"></span><br><span class="line">       Creates  another  shell in the same window, while the original shell is</span><br><span class="line">       still running. Output of both shells is displayed  and  user  input  is</span><br><span class="line">       sent to the new /bin/sh.</span><br><span class="line"></span><br><span class="line">              exec !.. stty 19200</span><br><span class="line">              exec ! stty 19200</span><br><span class="line">              !!stty 19200</span><br><span class="line"></span><br><span class="line">       Set  the  speed  of  the window&#x27;s tty. If your stty command operates on</span><br><span class="line">       stdout, then add another `!&#x27;.</span><br><span class="line"></span><br><span class="line">              exec !..| less</span><br><span class="line">              |less</span><br><span class="line"></span><br><span class="line">       This adds a pager to the window output. The special  character  `|&#x27;  is</span><br><span class="line">       needed  to  give  the  user control over the pager although it gets its</span><br><span class="line">       input from the window&#x27;s process. This works, because  less  listens  on</span><br><span class="line">       stderr  (a  behavior that screen would not expect without the `|&#x27;) when</span><br><span class="line">       its stdin is not a tty.  Less versions newer than  177  fail  miserably</span><br><span class="line">       here; good old pg still works.</span><br><span class="line"></span><br><span class="line">              !:sed -n s/.*Error.*/\007/p</span><br><span class="line"></span><br><span class="line">       Sends  window  output  to  both,  the user and the sed command. The sed</span><br><span class="line">       inserts an additional bell character (oct. 007) to  the  window  output</span><br><span class="line">       seen  by screen.  This will cause &quot;Bell in window x&quot; messages, whenever</span><br><span class="line">       the string &quot;Error&quot; appears in the window.</span><br><span class="line"></span><br><span class="line">       fit</span><br><span class="line"></span><br><span class="line">       Change the window size to the size of the current region. This  command</span><br><span class="line">       is needed because screen doesn&#x27;t adapt the window size automatically if</span><br><span class="line">       the window is displayed more than once.</span><br><span class="line"></span><br><span class="line">       flow [on|off|auto]</span><br><span class="line"></span><br><span class="line">       Sets the flow-control mode for  this  window.   Without  parameters  it</span><br><span class="line">       cycles  the  current  window&#x27;s flow-control setting from &quot;automatic&quot; to</span><br><span class="line">       &quot;on&quot; to &quot;off&quot;.  See the discussion on &quot;FLOW-CONTROL&quot; later on  in  this</span><br><span class="line">       document  for  full details and note, that this is subject to change in</span><br><span class="line">       future releases.  Default is set by `defflow&#x27;.</span><br><span class="line"></span><br><span class="line">       focus [up|down|top|bottom]</span><br><span class="line"></span><br><span class="line">       Move the input focus to the next region. This is done in a  cyclic  way</span><br><span class="line">       so  that the top region is selected after the bottom one. If no subcom-</span><br><span class="line">       mand is given it defaults to `down&#x27;. `up&#x27; cycles in the opposite order,</span><br><span class="line">       `top&#x27; and `bottom&#x27; go to the top and bottom region respectively. Useful</span><br><span class="line">       bindings are (j and k as in vi)</span><br><span class="line">           bind j focus down</span><br><span class="line">           bind k focus up</span><br><span class="line">           bind t focus top</span><br><span class="line">           bind b focus bottom</span><br><span class="line"></span><br><span class="line">       gr [on|off]</span><br><span class="line"></span><br><span class="line">       Turn GR charset switching on/off. Whenever screen sees an input charac-</span><br><span class="line">       ter with the 8th bit set, it will use the charset stored in the GR slot</span><br><span class="line">       and print the character with the 8th bit  stripped.  The  default  (see</span><br><span class="line">       also  &quot;defgr&quot;)  is  not  to  process GR switching because otherwise the</span><br><span class="line">       ISO88591 charset would not work.</span><br><span class="line"></span><br><span class="line">       hardcopy [-h] [file]</span><br><span class="line"></span><br><span class="line">       Writes out the currently displayed image to the file file,  or,  if  no</span><br><span class="line">       filename  is specified, to hardcopy.n in the default directory, where n</span><br><span class="line">       is the number of the current window.  This either appends or overwrites</span><br><span class="line">       the  file if it exists. See below.  If the option -h is specified, dump</span><br><span class="line">       also the contents of the scrollback buffer.</span><br><span class="line"></span><br><span class="line">       hardcopy_append on|off</span><br><span class="line"></span><br><span class="line">       If set to &quot;on&quot;, screen will append to the &quot;hardcopy.n&quot; files created by</span><br><span class="line">       the  command  &quot;C-a h&quot;, otherwise these files are overwritten each time.</span><br><span class="line">       Default is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       hardcopydir directory</span><br><span class="line"></span><br><span class="line">       Defines a directory where hardcopy files  will  be  placed.  If  unset,</span><br><span class="line">       hardcopys are dumped in screen&#x27;s current working directory.</span><br><span class="line"></span><br><span class="line">       hardstatus [on|off]</span><br><span class="line">       hardstatus [always]lastline|message|ignore [string]</span><br><span class="line">       hardstatus string [string]</span><br><span class="line"></span><br><span class="line">       This  command  configures the use and emulation of the terminal&#x27;s hard-</span><br><span class="line">       status line. The first form toggles whether screen will use  the  hard-</span><br><span class="line">       ware  status  line  to  display  messages. If the flag is set to `off&#x27;,</span><br><span class="line">       these messages are overlaid in reverse video mode at the display  line.</span><br><span class="line">       The default setting is `on&#x27;.</span><br><span class="line"></span><br><span class="line">       The  second form tells screen what to do if the terminal doesn&#x27;t have a</span><br><span class="line">       hardstatus line (i.e. the  termcap/terminfo  capabilities  &quot;hs&quot;,  &quot;ts&quot;,</span><br><span class="line">       &quot;fs&quot; and &quot;ds&quot; are not set). If the type &quot;lastline&quot; is used, screen will</span><br><span class="line">       reserve the last line of the display for the hardstatus. &quot;message&quot; uses</span><br><span class="line">       screen&#x27;s  message  mechanism and &quot;ignore&quot; tells screen never to display</span><br><span class="line">       the hardstatus.  If you prepend the word &quot;always&quot; to  the  type  (e.g.,</span><br><span class="line">       &quot;alwayslastline&quot;),  screen  will use the type even if the terminal sup-</span><br><span class="line">       ports a hardstatus.</span><br><span class="line"></span><br><span class="line">       The third form specifies the contents of the hardstatus line.  &#x27;%h&#x27;  is</span><br><span class="line">       used  as default string, i.e. the stored hardstatus of the current win-</span><br><span class="line">       dow (settable via &quot;ESC]0;&lt;string&gt;^G&quot;  or  &quot;ESC_&lt;string&gt;ESC\&quot;)  is  dis-</span><br><span class="line">       played.   You  can  customize this to any string you like including the</span><br><span class="line">       escapes from the &quot;STRING ESCAPES&quot; chapter. If you leave out  the  argu-</span><br><span class="line">       ment string, the current string is displayed.</span><br><span class="line"></span><br><span class="line">       You  can mix the second and third form by providing the string as addi-</span><br><span class="line">       tional argument.</span><br><span class="line"></span><br><span class="line">       height [-w|-d] [lines [cols]]</span><br><span class="line"></span><br><span class="line">       Set the display height to a specified number of lines. When no argument</span><br><span class="line">       is given it toggles between 24 and 42 lines display. You can also spec-</span><br><span class="line">       ify a width if you want to change both values.   The  -w  option  tells</span><br><span class="line">       screen  to  leave  the  display  size unchanged and just set the window</span><br><span class="line">       size, -d vice versa.</span><br><span class="line"></span><br><span class="line">       help [-c class]</span><br><span class="line"></span><br><span class="line">       Not really a online help, but displays a help screen  showing  you  all</span><br><span class="line">       the  key bindings.  The first pages list all the internal commands fol-</span><br><span class="line">       lowed by their current bindings.  Subsequent  pages  will  display  the</span><br><span class="line">       custom  commands,  one  command  per key.  Press space when you&#x27;re done</span><br><span class="line">       reading each page, or return to exit early.  All other  characters  are</span><br><span class="line">       ignored.  If  the  &quot;-c&quot; option is given, display all bound commands for</span><br><span class="line">       the specified command class.  See also &quot;DEFAULT KEY BINDINGS&quot;  section.</span><br><span class="line"></span><br><span class="line">       history</span><br><span class="line"></span><br><span class="line">       Usually  users  work  with  a shell that allows easy access to previous</span><br><span class="line">       commands.  For example csh has the command &quot;!!&quot; to repeat the last com-</span><br><span class="line">       mand executed.  Screen allows you to have a primitive way of re-calling</span><br><span class="line">       &quot;the command that started ...&quot;: You just type the first letter of  that</span><br><span class="line">       command, then hit `C-a &#123;&#x27; and screen tries to find a previous line that</span><br><span class="line">       matches with the `prompt character&#x27; to the left  of  the  cursor.  This</span><br><span class="line">       line  is  pasted into this window&#x27;s input queue.  Thus you have a crude</span><br><span class="line">       command history (made up by  the  visible  window  and  its  scrollback</span><br><span class="line">       buffer).</span><br><span class="line"></span><br><span class="line">       hstatus status</span><br><span class="line"></span><br><span class="line">       Change the window&#x27;s hardstatus line to the string status.</span><br><span class="line"></span><br><span class="line">       idle [timeout [cmd args]]</span><br><span class="line"></span><br><span class="line">       Sets  a command that is run after the specified number of seconds inac-</span><br><span class="line">       tivity is reached. This command will normally be the &quot;blanker&quot;  command</span><br><span class="line">       to  create  a  screen blanker, but it can be any screen command.  If no</span><br><span class="line">       command is specified, only the timeout is set. A timeout  of  zero  (ot</span><br><span class="line">       the  special  timeout  off)  disables  the  timer.  If no arguments are</span><br><span class="line">       given, the current settings are displayed.</span><br><span class="line"></span><br><span class="line">       ignorecase [on|off]</span><br><span class="line"></span><br><span class="line">       Tell screen to ignore the case of characters in  searches.  Default  is</span><br><span class="line">       `off&#x27;.</span><br><span class="line"></span><br><span class="line">       info</span><br><span class="line"></span><br><span class="line">       Uses  the  message  line  to display some information about the current</span><br><span class="line">       window: the cursor position in the form  &quot;(column,row)&quot;  starting  with</span><br><span class="line">       &quot;(1,1)&quot;,  the terminal width and height plus the size of the scrollback</span><br><span class="line">       buffer in lines, like in &quot;(80,24)+50&quot;,  the  current  state  of  window</span><br><span class="line">       XON/XOFF  flow  control  is shown like this (See also section FLOW CON-</span><br><span class="line">       TROL):</span><br><span class="line"></span><br><span class="line">         +flow     automatic flow control, currently on.</span><br><span class="line">         -flow     automatic flow control, currently off.</span><br><span class="line">         +(+)flow  flow control enabled. Agrees with automatic control.</span><br><span class="line">         -(+)flow  flow control disabled. Disagrees with automatic control.</span><br><span class="line">         +(-)flow  flow control enabled. Disagrees with automatic control.</span><br><span class="line">         -(-)flow  flow control disabled. Agrees with automatic control.</span><br><span class="line"></span><br><span class="line">       The current line wrap setting (`+wrap&#x27; indicates enabled, `-wrap&#x27;  not)</span><br><span class="line">       is  also  shown. The flags `ins&#x27;, `org&#x27;, `app&#x27;, `log&#x27;, `mon&#x27; or `nored&#x27;</span><br><span class="line">       are displayed when the window is in insert mode, origin mode,  applica-</span><br><span class="line">       tion-keypad  mode,  has  output logging, activity monitoring or partial</span><br><span class="line">       redraw enabled.</span><br><span class="line"></span><br><span class="line">       The currently active character set (G0, G1, G2, or G3)  and  in  square</span><br><span class="line">       brackets  the  terminal character sets that are currently designated as</span><br><span class="line">       G0 through G3 is shown. If the window is  in  UTF-8  mode,  the  string</span><br><span class="line">       &quot;UTF-8&quot; is shown instead.</span><br><span class="line"></span><br><span class="line">       Additional  modes  depending on the type of the window are displayed at</span><br><span class="line">       the end of the status line (See also chapter &quot;WINDOW TYPES&quot;).</span><br><span class="line">       If the state machine of the  terminal  emulator  is  in  a  non-default</span><br><span class="line">       state,  the  info line is started with a string identifying the current</span><br><span class="line">       state.</span><br><span class="line">       For system information use the &quot;time&quot; command.</span><br><span class="line"></span><br><span class="line">       ins_reg [key]</span><br><span class="line"></span><br><span class="line">       No longer exists, use &quot;paste&quot; instead.</span><br><span class="line"></span><br><span class="line">       kill</span><br><span class="line"></span><br><span class="line">       Kill current window.</span><br><span class="line">       If there is an `exec&#x27; command running then it is killed. Otherwise  the</span><br><span class="line">       process  (shell) running in the window receives a HANGUP condition, the</span><br><span class="line">       window structure is removed  and  screen  (your  display)  switches  to</span><br><span class="line">       another  window.   When  the  last  window  is destroyed, screen exits.</span><br><span class="line">       After a kill screen switches to the previously displayed window.</span><br><span class="line">       Note: Emacs users should keep this command  in  mind,  when  killing  a</span><br><span class="line">       line.   It  is recommended not to use &quot;C-a&quot; as the screen escape key or</span><br><span class="line">       to rebind kill to &quot;C-a K&quot;.</span><br><span class="line"></span><br><span class="line">       lastmsg</span><br><span class="line"></span><br><span class="line">       Redisplay the last contents of  the  message/status  line.   Useful  if</span><br><span class="line">       you&#x27;re  typing  when  a message appears, because  the message goes away</span><br><span class="line">       when you press a key (unless your terminal has a hardware status line).</span><br><span class="line">       Refer to the commands &quot;msgwait&quot; and &quot;msgminwait&quot; for fine tuning.</span><br><span class="line"></span><br><span class="line">       license</span><br><span class="line"></span><br><span class="line">       Display  the  disclaimer  page. This is done whenever screen is started</span><br><span class="line">       without  options,  which  should  be  often  enough.   See   also   the</span><br><span class="line">       &quot;startup_message&quot; command.</span><br><span class="line"></span><br><span class="line">       lockscreen</span><br><span class="line"></span><br><span class="line">       Lock  this  display.   Call  a  screenlock  program  (/local/bin/lck or</span><br><span class="line">       /usr/bin/lock or a builtin if no other is available). Screen  does  not</span><br><span class="line">       accept  any  command keys until this program terminates. Meanwhile pro-</span><br><span class="line">       cesses in  the  windows  may  continue,  as  the  windows  are  in  the</span><br><span class="line">       `detached&#x27;  state.  The  screenlock  program may be changed through the</span><br><span class="line">       environment variable $LOCKPRG (which must be  set  in  the  shell  from</span><br><span class="line">       which screen is started) and is executed with the user&#x27;s uid and gid.</span><br><span class="line">       Warning:  When you leave other shells unlocked and you have no password</span><br><span class="line">       set on screen, the lock is void: One could  easily  re-attach  from  an</span><br><span class="line">       unlocked shell. This feature should rather be called `lockterminal&#x27;.</span><br><span class="line"></span><br><span class="line">       log [on|off]</span><br><span class="line"></span><br><span class="line">       Start/stop writing output of the current window to a file &quot;screenlog.n&quot;</span><br><span class="line">       in the window&#x27;s default directory, where n is the number of the current</span><br><span class="line">       window.  This filename can be changed with the `logfile&#x27; command. If no</span><br><span class="line">       parameter is given, the state of logging is toggled. The session log is</span><br><span class="line">       appended to the previous contents of the file if it already exists. The</span><br><span class="line">       current contents and the contents of the  scrollback  history  are  not</span><br><span class="line">       included in the session log.  Default is `off&#x27;.</span><br><span class="line"></span><br><span class="line">       logfile filename</span><br><span class="line">       logfile flush secs</span><br><span class="line"></span><br><span class="line">       Defines  the name the logfiles will get. The default is &quot;screenlog.%n&quot;.</span><br><span class="line">       The second form changes the number of seconds screen will  wait  before</span><br><span class="line">       flushing the logfile buffer to the file-system. The default value is 10</span><br><span class="line">       seconds.</span><br><span class="line"></span><br><span class="line">       login [on|off]</span><br><span class="line"></span><br><span class="line">       Adds or removes the entry in the utmp database  file  for  the  current</span><br><span class="line">       window.  This controls if the window is `logged in&#x27;.  When no parameter</span><br><span class="line">       is given, the login state of the window is  toggled.   Additionally  to</span><br><span class="line">       that  toggle,  it  is convenient having a `log in&#x27; and a `log out&#x27; key.</span><br><span class="line">       E.g. `bind I login on&#x27; and `bind O login off&#x27; will map these keys to be</span><br><span class="line">       C-a  I  and C-a O.  The default setting (in config.h.in) should be &quot;on&quot;</span><br><span class="line">       for a screen that runs under suid-root.  Use the &quot;deflogin&quot; command  to</span><br><span class="line">       change  the default login state for new windows. Both commands are only</span><br><span class="line">       present when screen has been compiled with utmp support.</span><br><span class="line"></span><br><span class="line">       logtstamp [on|off]</span><br><span class="line">       logtstamp after [secs]</span><br><span class="line">       logtstamp string [string]</span><br><span class="line"></span><br><span class="line">       This command controls logfile time-stamp mechanism of screen.  If time-</span><br><span class="line">       stamps  are  turned  &quot;on&quot;,  screen adds a string containing the current</span><br><span class="line">       time to the logfile after two minutes of inactivity.  When output  con-</span><br><span class="line">       tinues  and  more  than another two minutes have passed, a second time-</span><br><span class="line">       stamp is added to document the restart of the output.  You  can  change</span><br><span class="line">       this  timeout  with  the  second form of the command. The third form is</span><br><span class="line">       used for customizing the time-stamp string (`-- %n:%t -- time-stamp  --</span><br><span class="line">       %M/%d/%y %c:%s --\n&#x27; by default).</span><br><span class="line"></span><br><span class="line">       mapdefault</span><br><span class="line"></span><br><span class="line">       Tell  screen  that the next input character should only be looked up in</span><br><span class="line">       the default bindkey table. See also &quot;bindkey&quot;.</span><br><span class="line"></span><br><span class="line">       mapnotnext</span><br><span class="line"></span><br><span class="line">       Like mapdefault, but don&#x27;t even look in the default bindkey table.</span><br><span class="line"></span><br><span class="line">       maptimeout [timo]</span><br><span class="line"></span><br><span class="line">       Set the inter-character timer for input sequence detection to a timeout</span><br><span class="line">       of  timo ms. The default timeout is 300ms. Maptimeout with no arguments</span><br><span class="line">       shows the current setting.  See also &quot;bindkey&quot;.</span><br><span class="line"></span><br><span class="line">       markkeys string</span><br><span class="line"></span><br><span class="line">       This is a method of changing the keymap  used  for  copy/history  mode.</span><br><span class="line">       The  string  is made up of oldchar=newchar pairs which are separated by</span><br><span class="line">       `:&#x27;. Example: The string &quot;B=^B:F=^F&quot; will change the keys `C-b&#x27; and `C-</span><br><span class="line">       f&#x27; to the vi style binding (scroll up/down fill page).  This happens to</span><br><span class="line">       be the  default  binding  for  `B&#x27;  and  `F&#x27;.   The  command  &quot;markkeys</span><br><span class="line">       h=^B:l=^F:$=^E&quot; would set the mode for an emacs-style binding.  If your</span><br><span class="line">       terminal sends characters, that cause you to abort copy mode, then this</span><br><span class="line">       command  may help by binding these characters to do nothing.  The no-op</span><br><span class="line">       character is `@&#x27; and is used like this: &quot;markkeys @=L=H&quot; if you do  not</span><br><span class="line">       want to use the `H&#x27; or `L&#x27; commands any longer.  As shown in this exam-</span><br><span class="line">       ple, multiple keys can be assigned to one function in a  single  state-</span><br><span class="line">       ment.</span><br><span class="line"></span><br><span class="line">       maxwin num</span><br><span class="line"></span><br><span class="line">       Set  the  maximum  window  number  screen  will  create. Doesn&#x27;t affect</span><br><span class="line">       already existing windows. The number may only be decreased.</span><br><span class="line"></span><br><span class="line">       meta</span><br><span class="line"></span><br><span class="line">       Insert the command  character  (C-a)  in  the  current  window&#x27;s  input</span><br><span class="line">       stream.</span><br><span class="line"></span><br><span class="line">       monitor [on|off]</span><br><span class="line"></span><br><span class="line">       Toggles  activity  monitoring of windows.  When monitoring is turned on</span><br><span class="line">       and an affected window  is  switched  into  the  background,  you  will</span><br><span class="line">       receive  the  activity  notification  message in the status line at the</span><br><span class="line">       first sign of output and the window will also be marked with an `@&#x27;  in</span><br><span class="line">       the  window-status  display.   Monitoring is initially off for all win-</span><br><span class="line">       dows.</span><br><span class="line"></span><br><span class="line">       msgminwait sec</span><br><span class="line"></span><br><span class="line">       Defines the time screen delays a new message when one message  is  cur-</span><br><span class="line">       rently displayed.  The default is 1 second.</span><br><span class="line"></span><br><span class="line">       msgwait sec</span><br><span class="line"></span><br><span class="line">       Defines  the  time a message is displayed if screen is not disturbed by</span><br><span class="line">       other activity. The default is 5 seconds.</span><br><span class="line"></span><br><span class="line">       multiuser on|off</span><br><span class="line"></span><br><span class="line">       Switch between singleuser and multiuser mode. Standard screen operation</span><br><span class="line">       is  singleuser.  In  multiuser  mode  the  commands `acladd&#x27;, `aclchg&#x27;,</span><br><span class="line">       `aclgrp&#x27; and `acldel&#x27; can be used to enable (and disable)  other  users</span><br><span class="line">       accessing this screen session.</span><br><span class="line"></span><br><span class="line">       nethack on|off</span><br><span class="line"></span><br><span class="line">       Changes the kind of error messages used by screen.  When you are famil-</span><br><span class="line">       iar with the game &quot;nethack&quot;, you may enjoy the  nethack-style  messages</span><br><span class="line">       which will often blur the facts a little, but are much funnier to read.</span><br><span class="line">       Anyway, standard messages often tend to be unclear as well.</span><br><span class="line">       This option is only available if screen was compiled with  the  NETHACK</span><br><span class="line">       flag defined. The default setting is then determined by the presence of</span><br><span class="line">       the environment variable $NETHACKOPTIONS.</span><br><span class="line"></span><br><span class="line">       next</span><br><span class="line"></span><br><span class="line">       Switch to the next window.  This command  can  be  used  repeatedly  to</span><br><span class="line">       cycle through the list of windows.</span><br><span class="line"></span><br><span class="line">       nonblock [on|off|numsecs]</span><br><span class="line"></span><br><span class="line">       Tell  screen  how to deal with user interfaces (displays) that cease to</span><br><span class="line">       accept output. This can happen if a user presses ^S or a TCP/modem con-</span><br><span class="line">       nection gets cut but no hangup is received. If nonblock is off (this is</span><br><span class="line">       the default) screen waits until the display restarts to accept the out-</span><br><span class="line">       put.  If  nonblock is on, screen waits until the timeout is reached (on</span><br><span class="line">       is treated as 1s). If the display  still  doesn&#x27;t  receive  characters,</span><br><span class="line">       screen will consider it &quot;blocked&quot; and stop sending characters to it. If</span><br><span class="line">       at some time it restarts to accept characters, screen will unblock  the</span><br><span class="line">       display and redisplay the updated window contents.</span><br><span class="line"></span><br><span class="line">       number [n]</span><br><span class="line"></span><br><span class="line">       Change  the  current  windows  number. If the given number n is already</span><br><span class="line">       used by another window, both windows  exchange  their  numbers.  If  no</span><br><span class="line">       argument  is specified, the current window number (and title) is shown.</span><br><span class="line"></span><br><span class="line">       obuflimit [limit]</span><br><span class="line"></span><br><span class="line">       If the output buffer contains more bytes than the specified  limit,  no</span><br><span class="line">       more  data  will be read from the windows. The default value is 256. If</span><br><span class="line">       you have a fast display (like xterm), you can set  it  to  some  higher</span><br><span class="line">       value. If no argument is specified, the current setting is displayed.</span><br><span class="line"></span><br><span class="line">       only</span><br><span class="line"></span><br><span class="line">       Kill all regions but the current one.</span><br><span class="line"></span><br><span class="line">       other</span><br><span class="line"></span><br><span class="line">       Switch  to  the  window  displayed  previously.  If this window does no</span><br><span class="line">       longer exist, other has the same effect as next.</span><br><span class="line"></span><br><span class="line">       partial on|off</span><br><span class="line"></span><br><span class="line">       Defines whether the display should be  refreshed  (as  with  redisplay)</span><br><span class="line">       after  switching  to  the current window. This command only affects the</span><br><span class="line">       current window.  To immediately affect all windows use  the  allpartial</span><br><span class="line">       command.  Default is `off&#x27;, of course.  This default is fixed, as there</span><br><span class="line">       is currently no defpartial command.</span><br><span class="line"></span><br><span class="line">       password [crypted_pw]</span><br><span class="line"></span><br><span class="line">       Present a crypted password in your &quot;.screenrc&quot; file and screen will ask</span><br><span class="line">       for  it, whenever someone attempts to resume a detached. This is useful</span><br><span class="line">       if you have privileged programs running under screen and  you  want  to</span><br><span class="line">       protect  your session from reattach attempts by another user masquerad-</span><br><span class="line">       ing as your uid (i.e. any superuser.)  If no crypted password is speci-</span><br><span class="line">       fied, screen prompts twice for typing a password and places its encryp-</span><br><span class="line">       tion in the paste buffer.  Default is `none&#x27;,  this  disables  password</span><br><span class="line">       checking.</span><br><span class="line"></span><br><span class="line">       paste [registers [dest_reg]]</span><br><span class="line"></span><br><span class="line">       Write  the  (concatenated)  contents  of the specified registers to the</span><br><span class="line">       stdin queue of the current window. The register &#x27;.&#x27; is treated  as  the</span><br><span class="line">       paste  buffer. If no parameter is given the user is prompted for a sin-</span><br><span class="line">       gle register to paste.  The paste buffer can be filled with  the  copy,</span><br><span class="line">       history  and  readbuf commands.  Other registers can be filled with the</span><br><span class="line">       register, readreg and paste commands.  If paste is called with a second</span><br><span class="line">       argument,  the  contents  of the specified registers is pasted into the</span><br><span class="line">       named destination register rather than the window. If &#x27;.&#x27;  is  used  as</span><br><span class="line">       the  second  argument,  the  displays  paste buffer is the destination.</span><br><span class="line">       Note, that &quot;paste&quot; uses a wide variety of resources: Whenever a  second</span><br><span class="line">       argument  is  specified  no  current  window is needed. When the source</span><br><span class="line">       specification only contains registers (not the paste buffer) then there</span><br><span class="line">       need not be a current display (terminal attached), as the registers are</span><br><span class="line">       a global resource. The paste buffer exists once for every user.</span><br><span class="line"></span><br><span class="line">       pastefont [on|off]</span><br><span class="line"></span><br><span class="line">       Tell screen to include  font  information  in  the  paste  buffer.  The</span><br><span class="line">       default  is  not  to do so. This command is especially useful for multi</span><br><span class="line">       character fonts like kanji.</span><br><span class="line"></span><br><span class="line">       pow_break</span><br><span class="line"></span><br><span class="line">       Reopen the window&#x27;s terminal line  and  send  a  break  condition.  See</span><br><span class="line">       `break&#x27;.</span><br><span class="line"></span><br><span class="line">       pow_detach</span><br><span class="line"></span><br><span class="line">       Power  detach.  Mainly the same as detach, but also sends a HANGUP sig-</span><br><span class="line">       nal to the parent process of screen.  CAUTION: This will  result  in  a</span><br><span class="line">       logout, when screen was started from your login shell.</span><br><span class="line"></span><br><span class="line">       pow_detach_msg [message]</span><br><span class="line"></span><br><span class="line">       The message specified here is output whenever a `Power detach&#x27; was per-</span><br><span class="line">       formed. It may be used as a replacement for  a  logout  message  or  to</span><br><span class="line">       reset baud rate, etc.  Without parameter, the current message is shown.</span><br><span class="line"></span><br><span class="line">       prev</span><br><span class="line"></span><br><span class="line">       Switch to the window with the next lower number.  This command  can  be</span><br><span class="line">       used repeatedly to cycle through the list of windows.</span><br><span class="line"></span><br><span class="line">       printcmd [cmd]</span><br><span class="line"></span><br><span class="line">       If  cmd  is not an empty string, screen will not use the terminal capa-</span><br><span class="line">       bilities &quot;po/pf&quot; if it detects an ansi print sequence ESC [  5  i,  but</span><br><span class="line">       pipe the output into cmd.  This should normally be a command like &quot;lpr&quot;</span><br><span class="line">       or &quot;&#x27;cat &gt; /tmp/scrprint&#x27;&quot;.  printcmd without a  command  displays  the</span><br><span class="line">       current  setting.  The ansi sequence ESC \ ends printing and closes the</span><br><span class="line">       pipe.</span><br><span class="line">       Warning: Be careful with this command! If other user have write  access</span><br><span class="line">       to your terminal, they will be able to fire off print commands.</span><br><span class="line"></span><br><span class="line">       process [key]</span><br><span class="line"></span><br><span class="line">       Stuff the contents of the specified register into screen&#x27;s input queue.</span><br><span class="line">       If no argument is given you are prompted for a register name. The  text</span><br><span class="line">       is  parsed  as  if  it had been typed in from the user&#x27;s keyboard. This</span><br><span class="line">       command can be used to bind multiple actions to a single key.</span><br><span class="line"></span><br><span class="line">       quit</span><br><span class="line"></span><br><span class="line">       Kill all windows and terminate screen.  Note that on VT100-style termi-</span><br><span class="line">       nals  the keys C-4 and C-\ are identical.  This makes the default bind-</span><br><span class="line">       ings dangerous: Be careful not to type C-a C-4  when  selecting  window</span><br><span class="line">       no.  4.  Use the empty bind command (as in &quot;bind &#x27;^\&#x27;&quot;) to remove a key</span><br><span class="line">       binding.</span><br><span class="line"></span><br><span class="line">       readbuf [-e encoding] [filename]</span><br><span class="line"></span><br><span class="line">       Reads the contents of the specified file into the  paste  buffer.   You</span><br><span class="line">       can tell screen the encoding of the file via the -e option.  If no file</span><br><span class="line">       is specified, the screen-exchange filename is used.  See also  &quot;buffer-</span><br><span class="line">       file&quot; command.</span><br><span class="line"></span><br><span class="line">       readreg [-e encoding] [register [filename]]</span><br><span class="line"></span><br><span class="line">       Does  one of two things, dependent on number of arguments: with zero or</span><br><span class="line">       one arguments it it duplicates the paste buffer contents into the  reg-</span><br><span class="line">       ister  specified  or entered at the prompt. With two arguments it reads</span><br><span class="line">       the contents of the named file into the register, just as readbuf reads</span><br><span class="line">       the  screen-exchange  file  into the paste buffer.  You can tell screen</span><br><span class="line">       the encoding of the file via the -e option.  The following example will</span><br><span class="line">       paste the system&#x27;s password file into the screen window (using register</span><br><span class="line">       p, where a copy remains):</span><br><span class="line"></span><br><span class="line">                   C-a : readreg p /etc/passwd</span><br><span class="line">                   C-a : paste p</span><br><span class="line"></span><br><span class="line">       redisplay</span><br><span class="line"></span><br><span class="line">       Redisplay the current window. Needed to get a full  redisplay  when  in</span><br><span class="line">       partial redraw mode.</span><br><span class="line"></span><br><span class="line">       register [-e encoding] key string</span><br><span class="line"></span><br><span class="line">       Save  the  specified  string  to the register key.  The encoding of the</span><br><span class="line">       string can be specified via the -e option.  See also the  &quot;paste&quot;  com-</span><br><span class="line">       mand.</span><br><span class="line"></span><br><span class="line">       remove</span><br><span class="line"></span><br><span class="line">       Kill the current region. This is a no-op if there is only one region.</span><br><span class="line"></span><br><span class="line">       removebuf</span><br><span class="line"></span><br><span class="line">       Unlinks  the  screen-exchange  file used by the commands &quot;writebuf&quot; and</span><br><span class="line">       &quot;readbuf&quot;.</span><br><span class="line"></span><br><span class="line">       reset</span><br><span class="line"></span><br><span class="line">       Reset the virtual  terminal  to  its  &quot;power-on&quot;  values.  Useful  when</span><br><span class="line">       strange  settings  (like  scroll regions or graphics character set) are</span><br><span class="line">       left over from an application.</span><br><span class="line"></span><br><span class="line">       resize</span><br><span class="line"></span><br><span class="line">       Resize the current region. The space will be removed from or  added  to</span><br><span class="line">       the  region below or if there&#x27;s not enough space from the region above.</span><br><span class="line"></span><br><span class="line">              resize +N   increase current region height by N</span><br><span class="line"></span><br><span class="line">              resize -N   decrease current region height by N</span><br><span class="line"></span><br><span class="line">              resize  N   set current region height to N</span><br><span class="line"></span><br><span class="line">              resize  =   make all windows equally high</span><br><span class="line"></span><br><span class="line">              resize  max maximize current region height</span><br><span class="line"></span><br><span class="line">              resize  min minimize current region height</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       screen [-opts] [n] [cmd [args]]</span><br><span class="line"></span><br><span class="line">       Establish a new window.  The flow-control options (-f,  -fn  and  -fa),</span><br><span class="line">       title  (a.k.a.) option (-t), login options (-l and -ln) , terminal type</span><br><span class="line">       option (-T &lt;term&gt;), the all-capability-flag (-a) and scrollback  option</span><br><span class="line">       (-h  &lt;num&gt;)  may be specified with each command.  The option (-M) turns</span><br><span class="line">       monitoring on for this window.  The option (-L) turns output logging on</span><br><span class="line">       for  this  window.  If an optional number n in the range 0..9 is given,</span><br><span class="line">       the window number n is assigned to the newly  created  window  (or,  if</span><br><span class="line">       this  number  is already in-use, the next available number).  If a com-</span><br><span class="line">       mand is specified after &quot;screen&quot;, this command (with  the  given  argu-</span><br><span class="line">       ments)  is started in the window; otherwise, a shell is created.  Thus,</span><br><span class="line">       if your &quot;.screenrc&quot; contains the lines</span><br><span class="line"></span><br><span class="line">                   # example for .screenrc:</span><br><span class="line">                   screen 1</span><br><span class="line">                   screen -fn -t foobar -L 2 telnet foobar</span><br><span class="line"></span><br><span class="line">       screen creates a shell window (in window #1) and a window with a TELNET</span><br><span class="line">       connection  to the machine foobar (with no flow-control using the title</span><br><span class="line">       &quot;foobar&quot; in window #2) and will write a logfile (&quot;screenlog.2&quot;) of  the</span><br><span class="line">       telnet session.  Note, that unlike previous versions of screen no addi-</span><br><span class="line">       tional default window is created when &quot;screen&quot; commands are included in</span><br><span class="line">       your  &quot;.screenrc&quot;  file.  When  the initialization is completed, screen</span><br><span class="line">       switches to the last window specified in your  .screenrc  file  or,  if</span><br><span class="line">       none, opens a default window #0.</span><br><span class="line">       Screen  has built in some functionality of &quot;cu&quot; and &quot;telnet&quot;.  See also</span><br><span class="line">       chapter &quot;WINDOW TYPES&quot;.</span><br><span class="line"></span><br><span class="line">       scrollback num</span><br><span class="line"></span><br><span class="line">       Set the size of the scrollback buffer for the current  windows  to  num</span><br><span class="line">       lines.  The  default scrollback is 100 lines.  See also the &quot;defscroll-</span><br><span class="line">       back&quot; command and use &quot;C-a i&quot; to view the current setting.</span><br><span class="line"></span><br><span class="line">       select [WindowID]</span><br><span class="line"></span><br><span class="line">       Switch to the window identified by WindowID.  This can be a prefix of a</span><br><span class="line">       window title (alphanumeric window name) or a window number.  The param-</span><br><span class="line">       eter is optional and if omitted, you get prompted  for  an  identifier.</span><br><span class="line">       When  a  new  window  is  established,  the  first  available number is</span><br><span class="line">       assigned to this window.  Thus, the first window can  be  activated  by</span><br><span class="line">       &quot;select  0&quot;.   The  number of windows is limited at compile-time by the</span><br><span class="line">       MAXWIN configuration parameter.  There are two special  WindowIDs,  &quot;-&quot;</span><br><span class="line">       selects  the  internal blank window and &quot;.&quot; selects the current window.</span><br><span class="line">       The latter is useful if used with screen&#x27;s &quot;-X&quot; option.</span><br><span class="line"></span><br><span class="line">       sessionname [name]</span><br><span class="line"></span><br><span class="line">       Rename the current session. Note, that  for  &quot;screen  -list&quot;  the  name</span><br><span class="line">       shows up with the process-id prepended. If the argument &quot;name&quot; is omit-</span><br><span class="line">       ted, the name of this session is displayed. Caution: The $STY  environ-</span><br><span class="line">       ment  variables  still reflects the old name. This may result in confu-</span><br><span class="line">       sion.  The default is constructed from the tty and host names.</span><br><span class="line"></span><br><span class="line">       setenv [var [string]]</span><br><span class="line"></span><br><span class="line">       Set the environment variable var to value string.  If only var is spec-</span><br><span class="line">       ified,  the  user  will be prompted to enter a value.  If no parameters</span><br><span class="line">       are specified, the user will be prompted for both variable  and  value.</span><br><span class="line">       The environment is inherited by all subsequently forked shells.</span><br><span class="line"></span><br><span class="line">       setsid [on|off]</span><br><span class="line"></span><br><span class="line">       Normally screen uses different sessions and process groups for the win-</span><br><span class="line">       dows. If setsid is turned off, this is not done anymore and all windows</span><br><span class="line">       will  be  in the same process group as the screen backend process. This</span><br><span class="line">       also breaks job-control, so be careful.  The default is on, of  course.</span><br><span class="line">       This command is probably useful only in rare circumstances.</span><br><span class="line"></span><br><span class="line">       shell command</span><br><span class="line"></span><br><span class="line">       Set  the  command to be used to create a new shell.  This overrides the</span><br><span class="line">       value of the environment variable $SHELL.  This is useful if you&#x27;d like</span><br><span class="line">       to  run a tty-enhancer which is expecting to execute the program speci-</span><br><span class="line">       fied in $SHELL. If the command begins with a &#x27;-&#x27; character,  the  shell</span><br><span class="line">       will be started as a login-shell.</span><br><span class="line"></span><br><span class="line">       shelltitle title</span><br><span class="line"></span><br><span class="line">       Set  the  title for all shells created during startup or by the C-A C-c</span><br><span class="line">       command.  For details about what a title is, see the  discussion  enti-</span><br><span class="line">       tled &quot;TITLES (naming windows)&quot;.</span><br><span class="line"></span><br><span class="line">       silence [on|off|sec]</span><br><span class="line"></span><br><span class="line">       Toggles  silence  monitoring of windows.  When silence is turned on and</span><br><span class="line">       an affected window is switched into the background,  you  will  receive</span><br><span class="line">       the  silence  notification message in the status line after a specified</span><br><span class="line">       period of inactivity (silence). The default timeout can be changed with</span><br><span class="line">       the  `silencewait&#x27; command or by specifying a number of seconds instead</span><br><span class="line">       of `on&#x27; or `off&#x27;.  Silence is initially off for all windows.</span><br><span class="line"></span><br><span class="line">       silencewait sec</span><br><span class="line"></span><br><span class="line">       Define the time that all windows  monitored  for  silence  should  wait</span><br><span class="line">       before displaying a message. Default 30 seconds.</span><br><span class="line"></span><br><span class="line">       sleep num</span><br><span class="line"></span><br><span class="line">       This  command will pause the execution of a .screenrc file for num sec-</span><br><span class="line">       onds.  Keyboard activity will end the sleep.  It may be  used  to  give</span><br><span class="line">       users a chance to read the messages output by &quot;echo&quot;.</span><br><span class="line"></span><br><span class="line">       slowpaste msec</span><br><span class="line"></span><br><span class="line">       Define  the  speed at which text is inserted into the current window by</span><br><span class="line">       the paste (&quot;C-a ]&quot;) command.  If the slowpaste value is nonzero text is</span><br><span class="line">       written  character by character.  screen will make a pause of msec mil-</span><br><span class="line">       liseconds after each single character write to allow the application to</span><br><span class="line">       process its input. Only use slowpaste if your underlying system exposes</span><br><span class="line">       flow control problems while pasting large amounts of text.</span><br><span class="line"></span><br><span class="line">       source file</span><br><span class="line"></span><br><span class="line">       Read and execute commands from file file. Source commands may be nested</span><br><span class="line">       to  a  maximum  recursion level of ten. If file is not an absolute path</span><br><span class="line">       and screen is already processing a source command, the parent directory</span><br><span class="line">       of  the  running source command file is used to search for the new com-</span><br><span class="line">       mand file before screen&#x27;s current directory.</span><br><span class="line"></span><br><span class="line">       Note that termcap/terminfo/termcapinfo commands only  work  at  startup</span><br><span class="line">       and  reattach  time,  so  they must be reached via the default screenrc</span><br><span class="line">       files to have an effect.</span><br><span class="line"></span><br><span class="line">       sorendition [attr [color]]</span><br><span class="line"></span><br><span class="line">       Change the way screen does highlighting for text marking  and  printing</span><br><span class="line">       messages.  See the &quot;STRING ESCAPES&quot; chapter for the syntax of the modi-</span><br><span class="line">       fiers.  The default is currently &quot;=s dd&quot; (standout, default colors).</span><br><span class="line"></span><br><span class="line">       split</span><br><span class="line"></span><br><span class="line">       Split the current region into two new ones. All regions on the  display</span><br><span class="line">       are  resized  to make room for the new region. The blank window is dis-</span><br><span class="line">       played on the new region. Use the &quot;remove&quot; or  the  &quot;only&quot;  command  to</span><br><span class="line">       delete regions.</span><br><span class="line"></span><br><span class="line">       startup_message on|off</span><br><span class="line"></span><br><span class="line">       Select  whether  you  want  to see the copyright notice during startup.</span><br><span class="line">       Default is `on&#x27;, as you probably noticed.</span><br><span class="line"></span><br><span class="line">       stuff string</span><br><span class="line"></span><br><span class="line">       Stuff the string string in the input  buffer  of  the  current  window.</span><br><span class="line">       This is like the &quot;paste&quot; command but with much less overhead.  You can-</span><br><span class="line">       not paste large buffers with the &quot;stuff&quot; command. It is most useful for</span><br><span class="line">       key bindings. See also &quot;bindkey&quot;.</span><br><span class="line"></span><br><span class="line">       su [username [password [password2]]</span><br><span class="line"></span><br><span class="line">       Substitute  the  user of a display. The command prompts for all parame-</span><br><span class="line">       ters that are omitted. If passwords are specified as  parameters,  they</span><br><span class="line">       have  to be specified un-crypted. The first password is matched against</span><br><span class="line">       the systems passwd database, the second password is matched against the</span><br><span class="line">       screen  password as set with the commands &quot;acladd&quot; or &quot;password&quot;.  &quot;Su&quot;</span><br><span class="line">       may be useful for the screen administrator to  test  multiuser  setups.</span><br><span class="line">       When  the  identification  fails,  the  user has access to the commands</span><br><span class="line">       available for user nobody.  These are &quot;detach&quot;,  &quot;license&quot;,  &quot;version&quot;,</span><br><span class="line">       &quot;help&quot; and &quot;displays&quot;.</span><br><span class="line"></span><br><span class="line">       suspend</span><br><span class="line"></span><br><span class="line">       Suspend  screen.  The windows are in the `detached&#x27; state, while screen</span><br><span class="line">       is suspended. This feature relies on the shell being  able  to  do  job</span><br><span class="line">       control.</span><br><span class="line"></span><br><span class="line">       term term</span><br><span class="line"></span><br><span class="line">       In each window&#x27;s environment screen opens, the $TERM variable is set to</span><br><span class="line">       &quot;screen&quot; by default.  But when no description for &quot;screen&quot; is installed</span><br><span class="line">       in  the  local  termcap or terminfo data base, you set $TERM to - say -</span><br><span class="line">       &quot;vt100&quot;. This won&#x27;t do much harm, as screen is  VT100/ANSI  compatible.</span><br><span class="line">       The  use  of the &quot;term&quot; command is discouraged for non-default purpose.</span><br><span class="line">       That is, one may want to specify special $TERM  settings  (e.g.  vt100)</span><br><span class="line">       for  the  next  &quot;screen  rlogin  othermachine&quot; command. Use the command</span><br><span class="line">       &quot;screen -T vt100 rlogin othermachine&quot; rather than setting and resetting</span><br><span class="line">       the default.</span><br><span class="line"></span><br><span class="line">       termcap term terminal-tweaks [window-tweaks]</span><br><span class="line">       terminfo term terminal-tweaks [window-tweaks]</span><br><span class="line">       termcapinfo term terminal-tweaks [window-tweaks]</span><br><span class="line"></span><br><span class="line">       Use  this command to modify your terminal&#x27;s termcap entry without going</span><br><span class="line">       through all the hassles involved in creating a  custom  termcap  entry.</span><br><span class="line">       Plus,  you  can optionally customize the termcap generated for the win-</span><br><span class="line">       dows.  You have to place these commands in one of the screenrc  startup</span><br><span class="line">       files, as they are meaningless once the terminal emulator is booted.</span><br><span class="line">       If  your  system  works uses the terminfo database rather than termcap,</span><br><span class="line">       screen will understand the  `terminfo&#x27;  command,  which  has  the  same</span><br><span class="line">       effects  as the `termcap&#x27; command.  Two separate commands are provided,</span><br><span class="line">       as there are subtle syntactic differences, e.g. when parameter interpo-</span><br><span class="line">       lation (using `%&#x27;) is required. Note that termcap names of the capabil-</span><br><span class="line">       ities have to be used with the `terminfo&#x27; command.</span><br><span class="line">       In many cases, where the arguments are valid in both terminfo and term-</span><br><span class="line">       cap  syntax,  you  can  use  the command `termcapinfo&#x27;, which is just a</span><br><span class="line">       shorthand for a pair of `termcap&#x27; and `terminfo&#x27; commands with  identi-</span><br><span class="line">       cal arguments.</span><br><span class="line"></span><br><span class="line">       The  first  argument  specifies which terminal(s) should be affected by</span><br><span class="line">       this definition.  You can specify multiple terminal names by separating</span><br><span class="line">       them  with `|&#x27;s.  Use `*&#x27; to match all terminals and `vt*&#x27; to match all</span><br><span class="line">       terminals that begin with &quot;vt&quot;.</span><br><span class="line"></span><br><span class="line">       Each tweak argument contains one or more termcap defines (separated  by</span><br><span class="line">       `:&#x27;s)  to  be  inserted  at the start of the appropriate termcap entry,</span><br><span class="line">       enhancing it or overriding existing values.  The first  tweak  modifies</span><br><span class="line">       your  terminal&#x27;s  termcap,  and contains definitions that your terminal</span><br><span class="line">       uses to perform certain functions.  Specify a null string to leave this</span><br><span class="line">       unchanged (e.g. &#x27;&#x27;).  The second (optional) tweak modifies all the win-</span><br><span class="line">       dow termcaps, and should contain definitions  that  screen  understands</span><br><span class="line">       (see the &quot;VIRTUAL TERMINAL&quot; section).</span><br><span class="line"></span><br><span class="line">       Some examples:</span><br><span class="line"></span><br><span class="line">              termcap xterm*  LP:hs@</span><br><span class="line"></span><br><span class="line">       Informs  screen  that  all  terminals that begin with `xterm&#x27; have firm</span><br><span class="line">       auto-margins that allow the last position on the screen to  be  updated</span><br><span class="line">       (LP), but they don&#x27;t really have a status line (no &#x27;hs&#x27; - append `@&#x27; to</span><br><span class="line">       turn entries off).  Note that we assume `LP&#x27;  for  all  terminal  names</span><br><span class="line">       that  start  with &quot;vt&quot;, but only if you don&#x27;t specify a termcap command</span><br><span class="line">       for that terminal.</span><br><span class="line"></span><br><span class="line">              termcap vt*  LP</span><br><span class="line">              termcap vt102|vt220  Z0=\E[?3h:Z1=\E[?3l</span><br><span class="line"></span><br><span class="line">       Specifies the firm-margined `LP&#x27;  capability  for  all  terminals  that</span><br><span class="line">       begin with `vt&#x27;, and the second line will also add the escape-sequences</span><br><span class="line">       to switch into (Z0) and back out of (Z1) 132-character-per-line mode if</span><br><span class="line">       this  is a VT102 or VT220.  (You must specify Z0 and Z1 in your termcap</span><br><span class="line">       to use the width-changing commands.)</span><br><span class="line"></span><br><span class="line">              termcap vt100  &quot;&quot;  l0=PF1:l1=PF2:l2=PF3:l3=PF4</span><br><span class="line"></span><br><span class="line">       This leaves your vt100 termcap alone and adds the function  key  labels</span><br><span class="line">       to each window&#x27;s termcap entry.</span><br><span class="line"></span><br><span class="line">              termcap h19|z19  am@:im=\E@:ei=\EO  dc=\E[P</span><br><span class="line"></span><br><span class="line">       Takes a h19 or z19 termcap and turns off auto-margins (am@) and enables</span><br><span class="line">       the insert mode (im) and end-insert (ei) capabilities (the `@&#x27;  in  the</span><br><span class="line">       `im&#x27; string is after the `=&#x27;, so it is part of the string).  Having the</span><br><span class="line">       `im&#x27; and `ei&#x27; definitions put into your terminal&#x27;s termcap  will  cause</span><br><span class="line">       screen  to  automatically  advertise the character-insert capability in</span><br><span class="line">       each window&#x27;s termcap.  Each window will also get the  delete-character</span><br><span class="line">       capability  (dc) added to its termcap, which screen will translate into</span><br><span class="line">       a line-update for the terminal (we&#x27;re  pretending  it  doesn&#x27;t  support</span><br><span class="line">       character deletion).</span><br><span class="line"></span><br><span class="line">       If  you  would  like  to fully specify each window&#x27;s termcap entry, you</span><br><span class="line">       should instead set the $SCREENCAP variable  prior  to  running  screen.</span><br><span class="line">       See  the  discussion  on the &quot;VIRTUAL TERMINAL&quot; in this manual, and the</span><br><span class="line">       termcap(5) man page for more information on termcap definitions.</span><br><span class="line"></span><br><span class="line">       time [string]</span><br><span class="line"></span><br><span class="line">       Uses the message line to display the time of day, the  host  name,  and</span><br><span class="line">       the  load  averages  over 1, 5, and 15 minutes (if this is available on</span><br><span class="line">       your system).  For window specific information use &quot;info&quot;.</span><br><span class="line"></span><br><span class="line">       If a string is specified, it changes the format of the time report like</span><br><span class="line">       it  is described in the &quot;STRING ESCAPES&quot; chapter. Screen uses a default</span><br><span class="line">       of &quot;%c:%s %M %d %H%? %l%?&quot;.</span><br><span class="line"></span><br><span class="line">       title [windowtitle]</span><br><span class="line"></span><br><span class="line">       Set the name of the current window to windowtitle. If no name is speci-</span><br><span class="line">       fied, screen prompts for one. This command was known as `aka&#x27; in previ-</span><br><span class="line">       ous releases.</span><br><span class="line"></span><br><span class="line">       unsetenv var</span><br><span class="line"></span><br><span class="line">       Unset an environment variable.</span><br><span class="line"></span><br><span class="line">       utf8 [on|off [on|off]]</span><br><span class="line"></span><br><span class="line">       Change the encoding used in the current window. If utf8 is enabled, the</span><br><span class="line">       strings  sent to the window will be UTF-8 encoded and vice versa. Omit-</span><br><span class="line">       ting the parameter toggles the setting. If a second parameter is given,</span><br><span class="line">       the display&#x27;s encoding is also changed (this should rather be done with</span><br><span class="line">       screen&#x27;s &quot;-U&quot; option).  See also &quot;defutf8&quot;, which changes  the  default</span><br><span class="line">       setting of a new window.</span><br><span class="line"></span><br><span class="line">       vbell [on|off]</span><br><span class="line"></span><br><span class="line">       Sets  the  visual  bell setting for this window. Omitting the parameter</span><br><span class="line">       toggles the setting. If vbell is switched on, but  your  terminal  does</span><br><span class="line">       not support a visual bell, a `vbell-message&#x27; is displayed in the status</span><br><span class="line">       line when the bell character (^G) is received.  Visual bell support  of</span><br><span class="line">       a terminal is defined by the termcap variable `vb&#x27; (terminfo: &#x27;flash&#x27;).</span><br><span class="line">       Per default, vbell is off, thus the audible bell  is  used.   See  also</span><br><span class="line">       `bell_msg&#x27;.</span><br><span class="line"></span><br><span class="line">       vbell_msg [message]</span><br><span class="line"></span><br><span class="line">       Sets  the visual bell message. message is printed to the status line if</span><br><span class="line">       the window receives a bell character (^G), vbell is set  to  &quot;on&quot;,  but</span><br><span class="line">       the  terminal  does  not support a visual bell.  The default message is</span><br><span class="line">       &quot;Wuff, Wuff!!&quot;.  Without parameter, the current message is shown.</span><br><span class="line"></span><br><span class="line">       vbellwait sec</span><br><span class="line"></span><br><span class="line">       Define a delay in seconds after each display of  screen&#x27;s  visual  bell</span><br><span class="line">       message. The default is 1 second.</span><br><span class="line"></span><br><span class="line">       verbose [on|off]</span><br><span class="line"></span><br><span class="line">       If  verbose is switched on, the command name is echoed, whenever a win-</span><br><span class="line">       dow is created (or resurrected from  zombie  state).  Default  is  off.</span><br><span class="line">       Without parameter, the current setting is shown.</span><br><span class="line"></span><br><span class="line">       version</span><br><span class="line"></span><br><span class="line">       Print the current version and the compile date in the status line.</span><br><span class="line"></span><br><span class="line">       wall message</span><br><span class="line"></span><br><span class="line">       Write  a message to all displays. The message will appear in the termi-</span><br><span class="line">       nal&#x27;s status line.</span><br><span class="line"></span><br><span class="line">       width [-w|-d] [cols [lines]]</span><br><span class="line"></span><br><span class="line">       Toggle the window width between 80 and 132 columns or set  it  to  cols</span><br><span class="line">       columns  if an argument is specified.  This requires a capable terminal</span><br><span class="line">       and the termcap entries &quot;Z0&quot; and &quot;Z1&quot;.  See the &quot;termcap&quot;  command  for</span><br><span class="line">       more  information.  You  can  also  specify a new height if you want to</span><br><span class="line">       change both values.  The -w option tells screen to  leave  the  display</span><br><span class="line">       size unchanged and just set the window size, -d vice versa.</span><br><span class="line"></span><br><span class="line">       windowlist [-b] [-m]</span><br><span class="line">       windowlist string [string]</span><br><span class="line">       windowlist title [title]</span><br><span class="line"></span><br><span class="line">       Display all windows in a table for visual window selection. The desired</span><br><span class="line">       window can be selected via the standard movement keys (see  the  &quot;copy&quot;</span><br><span class="line">       command)  and activated via the return key.  If the -b option is given,</span><br><span class="line">       screen will switch to the blank window before presenting the  list,  so</span><br><span class="line">       that  the current window is also selectable.  The -m option changes the</span><br><span class="line">       order of the windows, instead of sorting by window numbers screen  uses</span><br><span class="line">       its internal most-recently-used list.</span><br><span class="line"></span><br><span class="line">       The  table  format can be changed with the string and title option, the</span><br><span class="line">       title is displayed as table heading, while the lines are made by  using</span><br><span class="line">       the  string  setting.  The default setting is &quot;Num Name%=Flags&quot; for the</span><br><span class="line">       title and &quot;%3n %t%=%f&quot; for the lines.  See the &quot;STRING ESCAPES&quot; chapter</span><br><span class="line">       for more codes (e.g. color settings).</span><br><span class="line"></span><br><span class="line">       windows</span><br><span class="line"></span><br><span class="line">       Uses  the message line to display a list of all the windows.  Each win-</span><br><span class="line">       dow is listed by number with the name of process that has been  started</span><br><span class="line">       in  the window (or its title); the current window is marked with a `*&#x27;;</span><br><span class="line">       the previous window is marked with a `-&#x27;;  all  the  windows  that  are</span><br><span class="line">       &quot;logged  in&quot;  are  marked  with  a  `$&#x27;;  a  background window that has</span><br><span class="line">       received a bell is marked with a `!&#x27;; a background window that is being</span><br><span class="line">       monitored  and  has  had activity occur is marked with an `@&#x27;; a window</span><br><span class="line">       which has output logging turned on is marked with `(L)&#x27;; windows  occu-</span><br><span class="line">       pied  by  other  users are marked with `&amp;&#x27;; windows in the zombie state</span><br><span class="line">       are marked with `Z&#x27;.  If this list is too long to fit on the terminal&#x27;s</span><br><span class="line">       status line only the portion around the current window is displayed.</span><br><span class="line"></span><br><span class="line">       wrap [on|off]</span><br><span class="line"></span><br><span class="line">       Sets  the  line-wrap setting for the current window.  When line-wrap is</span><br><span class="line">       on, the second consecutive printable character output at the last  col-</span><br><span class="line">       umn  of  a  line  will  wrap to the start of the following line.  As an</span><br><span class="line">       added feature, backspace (^H) will also wrap through the left margin to</span><br><span class="line">       the previous line.  Default is `on&#x27;.</span><br><span class="line"></span><br><span class="line">       writebuf [-e encoding] [filename]</span><br><span class="line"></span><br><span class="line">       Writes  the  contents of the paste buffer to the specified file, or the</span><br><span class="line">       public accessible screen-exchange file if no filename is given. This is</span><br><span class="line">       thought  of  as a primitive means of communication between screen users</span><br><span class="line">       on the same host. If an encoding  is  specified  the  paste  buffer  is</span><br><span class="line">       recoded on the fly to match the encoding.  The filename can be set with</span><br><span class="line">       the bufferfile command and defaults to &quot;/tmp/screen-exchange&quot;.</span><br><span class="line"></span><br><span class="line">       writelock [on|off|auto]</span><br><span class="line"></span><br><span class="line">       In addition to access control lists, not all users may be able to write</span><br><span class="line">       to  the  same  window at once. Per default, writelock is in `auto&#x27; mode</span><br><span class="line">       and grants exclusive input permission to the user who is the  first  to</span><br><span class="line">       switch to the particular window. When he leaves the window, other users</span><br><span class="line">       may obtain the writelock (automatically). The writelock of the  current</span><br><span class="line">       window  is  disabled by the command &quot;writelock off&quot;. If the user issues</span><br><span class="line">       the command &quot;writelock on&quot; he  keeps  the  exclusive  write  permission</span><br><span class="line">       while switching to other windows.</span><br><span class="line"></span><br><span class="line">       xoff</span><br><span class="line">       xon</span><br><span class="line"></span><br><span class="line">       Insert  a  CTRL-s  / CTRL-q character to the stdin queue of the current</span><br><span class="line">       window.</span><br><span class="line"></span><br><span class="line">       zmodem [off|auto|catch|pass]</span><br><span class="line">       zmodem sendcmd [string]</span><br><span class="line">       zmodem recvcmd [string]</span><br><span class="line"></span><br><span class="line">       Define zmodem support for  screen.  Screen  understands  two  different</span><br><span class="line">       modes  when  it  detects  a zmodem request: &quot;pass&quot; and &quot;catch&quot;.  If the</span><br><span class="line">       mode is set to &quot;pass&quot;, screen will relay all data to the attacher until</span><br><span class="line">       the end of the transmission is reached.  In &quot;catch&quot; mode screen acts as</span><br><span class="line">       a zmodem endpoint and starts the corresponding rz/sz commands.  If  the</span><br><span class="line">       mode  is  set to &quot;auto&quot;, screen will use &quot;catch&quot; if the window is a tty</span><br><span class="line">       (e.g. a serial line), otherwise it will use &quot;pass&quot;.</span><br><span class="line">       You can define the templates screen uses in &quot;catch&quot; mode via the second</span><br><span class="line">       and the third form.</span><br><span class="line">       Note also that this is an experimental feature.</span><br><span class="line"></span><br><span class="line">       zombie [keys]</span><br><span class="line">       defzombie [keys]</span><br><span class="line"></span><br><span class="line">       Per  default screen windows are removed from the window list as soon as</span><br><span class="line">       the windows process (e.g. shell) exits. When a string of  two  keys  is</span><br><span class="line">       specified  to  the  zombie  command,  `dead&#x27; windows will remain in the</span><br><span class="line">       list.  The kill command may be used to remove such a  window.  Pressing</span><br><span class="line">       the first key in the dead window has the same effect. When pressing the</span><br><span class="line">       second key, screen will attempt to resurrect the  window.  The  process</span><br><span class="line">       that  was initially running in the window will be launched again. Call-</span><br><span class="line">       ing zombie without parameters will clear the zombie setting, thus  mak-</span><br><span class="line">       ing windows disappear when their process exits.</span><br><span class="line"></span><br><span class="line">       As  the  zombie-setting  is  manipulated globally for all windows, this</span><br><span class="line">       command should only be called defzombie. Until we need this  as  a  per</span><br><span class="line">       window setting, the commands zombie and defzombie are synonymous.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">THE MESSAGE LINE</span><br><span class="line">       Screen  displays informational messages and other diagnostics in a mes-</span><br><span class="line">       sage line.  While this line is distributed to appear at the  bottom  of</span><br><span class="line">       the screen, it can be defined to appear at the top of the screen during</span><br><span class="line">       compilation.  If your terminal has a status line defined in  its  term-</span><br><span class="line">       cap, screen will use this for displaying its messages, otherwise a line</span><br><span class="line">       of the current screen will be temporarily overwritten and  output  will</span><br><span class="line">       be  momentarily  interrupted. The message line is automatically removed</span><br><span class="line">       after a few seconds delay, but it can also be removed early (on  termi-</span><br><span class="line">       nals without a status line) by beginning to type.</span><br><span class="line"></span><br><span class="line">       The  message line facility can be used by an application running in the</span><br><span class="line">       current window by means of the ANSI Privacy message  control  sequence.</span><br><span class="line">       For instance, from within the shell, try something like:</span><br><span class="line"></span><br><span class="line">              echo &#x27;&lt;esc&gt;^Hello world from window &#x27;$WINDOW&#x27;&lt;esc&gt;\\&#x27;</span><br><span class="line"></span><br><span class="line">       where  &#x27;&lt;esc&gt;&#x27;  is an escape, &#x27;^&#x27; is a literal up-arrow, and &#x27;\\&#x27; turns</span><br><span class="line">       into a single backslash.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WINDOW TYPES</span><br><span class="line">       Screen provides three different window types. New windows  are  created</span><br><span class="line">       with screen&#x27;s screen command (see also the entry in chapter &quot;CUSTOMIZA-</span><br><span class="line">       TION&quot;). The first parameter to the screen command defines which type of</span><br><span class="line">       window  is created. The different window types are all special cases of</span><br><span class="line">       the normal type. They have been added in order to allow  screen  to  be</span><br><span class="line">       used efficiently as a console multiplexer with 100 or more windows.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       o  The  normal  window  contains  a  shell (default, if no parameter is</span><br><span class="line">          given) or any other system command that could  be  executed  from  a</span><br><span class="line">          shell (e.g.  slogin, etc...)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       o  If a tty (character special device) name (e.g. &quot;/dev/ttya&quot;) is spec-</span><br><span class="line">          ified as the first parameter, then the window is directly  connected</span><br><span class="line">          to  this  device.   This  window  type  is  similar to &quot;screen cu -l</span><br><span class="line">          /dev/ttya&quot;.  Read and write access is required on the  device  node,</span><br><span class="line">          an  exclusive  open  is attempted on the node to mark the connection</span><br><span class="line">          line as busy.  An optional parameter  is  allowed  consisting  of  a</span><br><span class="line">          comma separated list of flags in the notation used by stty(1):</span><br><span class="line"></span><br><span class="line">          &lt;baud_rate&gt;</span><br><span class="line">                 Usually  300,  1200, 9600 or 19200. This affects transmission</span><br><span class="line">                 as well as receive speed.</span><br><span class="line"></span><br><span class="line">          cs8 or cs7</span><br><span class="line">                 Specify the transmission of eight (or seven) bits per byte.</span><br><span class="line"></span><br><span class="line">          ixon or -ixon</span><br><span class="line">                 Enables (or disables) software  flow-control  (CTRL-S/CTRL-Q)</span><br><span class="line">                 for sending data.</span><br><span class="line"></span><br><span class="line">          ixoff or -ixon</span><br><span class="line">                 Enables  (or  disables)  software  flow-control for receiving</span><br><span class="line">                 data.</span><br><span class="line"></span><br><span class="line">          istrip or -istrip</span><br><span class="line">                 Clear (or keep) the eight bit in each received byte.</span><br><span class="line"></span><br><span class="line">          You may want to specify as many  of  these  options  as  applicable.</span><br><span class="line">          Unspecified options cause the terminal driver to make up the parame-</span><br><span class="line">          ter values of the connection.  These values are system dependant and</span><br><span class="line">          may be in defaults or values saved from a previous connection.</span><br><span class="line"></span><br><span class="line">          For  tty  windows,  the info command shows some of the modem control</span><br><span class="line">          lines in the status line. These may  include  `RTS&#x27;,  `CTS&#x27;,  &#x27;DTR&#x27;,</span><br><span class="line">          `DSR&#x27;,  `CD&#x27;  and more.  This depends on the available ioctl()&#x27;s and</span><br><span class="line">          system header files as well as the on the physical  capabilities  of</span><br><span class="line">          the  serial  board.   Signals  that  are logical low (inactive) have</span><br><span class="line">          their name preceded by an exclamation mark (!), otherwise the signal</span><br><span class="line">          is logical high (active).  Signals not supported by the hardware but</span><br><span class="line">          available to the ioctl() interface are usually shown low.</span><br><span class="line">          When the CLOCAL status bit is true, the whole set of  modem  signals</span><br><span class="line">          is  placed inside curly braces (&#123; and &#125;).  When the CRTSCTS or TIOC-</span><br><span class="line">          SOFTCAR bit is set, the signals `CTS&#x27; or `CD&#x27; are shown in parenthe-</span><br><span class="line">          sis, respectively.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          For tty windows, the command break causes the Data transmission line</span><br><span class="line">          (TxD) to go low for a specified period of time. This is expected  to</span><br><span class="line">          be  interpreted  as break signal on the other side.  No data is sent</span><br><span class="line">          and no modem control line is changed when a break is issued.</span><br><span class="line"></span><br><span class="line">       o  If the first  parameter  is  &quot;//telnet&quot;,  the  second  parameter  is</span><br><span class="line">          expected  to  be  a  host  name, and an optional third parameter may</span><br><span class="line">          specify a TCP port number (default decimal 23).  Screen will connect</span><br><span class="line">          to a server listening on the remote host and use the telnet protocol</span><br><span class="line">          to communicate with that server.</span><br><span class="line">          For telnet windows, the command info shows details about the connec-</span><br><span class="line">          tion in square brackets ([ and ]) at the end of the status line.</span><br><span class="line"></span><br><span class="line">          b      BINARY. The connection is in binary mode.</span><br><span class="line"></span><br><span class="line">          e      ECHO. Local echo is disabled.</span><br><span class="line"></span><br><span class="line">          c      SGA.  The  connection  is in `character mode&#x27; (default: `line</span><br><span class="line">                 mode&#x27;).</span><br><span class="line"></span><br><span class="line">          t      TTYPE. The terminal type has been  requested  by  the  remote</span><br><span class="line">                 host.   Screen sends the name &quot;screen&quot; unless instructed oth-</span><br><span class="line">                 erwise (see also the command `term&#x27;).</span><br><span class="line"></span><br><span class="line">          w      NAWS. The remote site is notified about window size  changes.</span><br><span class="line"></span><br><span class="line">          f      LFLOW.  The  remote  host will send flow control information.</span><br><span class="line">                 (Ignored at the moment.)</span><br><span class="line"></span><br><span class="line">          Additional flags for debugging are x, t and n (XDISPLOC, TSPEED  and</span><br><span class="line">          NEWENV).</span><br><span class="line"></span><br><span class="line">          For  telnet  windows,  the  command  break sends the telnet code IAC</span><br><span class="line">          BREAK (decimal 243) to the remote host.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          This window type is only available if screen was compiled  with  the</span><br><span class="line">          BUILTIN_TELNET option defined.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">STRING ESCAPES</span><br><span class="line">       Screen provides an escape mechanism to insert information like the cur-</span><br><span class="line">       rent time into messages or file names. The escape character is &#x27;%&#x27; with</span><br><span class="line">       one  exception:  inside  of  a  window&#x27;s hardstatus &#x27;^%&#x27; (&#x27;^E&#x27;) is used</span><br><span class="line">       instead.</span><br><span class="line"></span><br><span class="line">       Here is the full list of supported escapes:</span><br><span class="line"></span><br><span class="line">       %      the escape character itself</span><br><span class="line"></span><br><span class="line">       a      either &#x27;am&#x27; or &#x27;pm&#x27;</span><br><span class="line"></span><br><span class="line">       A      either &#x27;AM&#x27; or &#x27;PM&#x27;</span><br><span class="line"></span><br><span class="line">       c      current time HH:MM in 24h format</span><br><span class="line"></span><br><span class="line">       C      current time HH:MM in 12h format</span><br><span class="line"></span><br><span class="line">       d      day number</span><br><span class="line"></span><br><span class="line">       D      weekday name</span><br><span class="line"></span><br><span class="line">       f      flags of the window</span><br><span class="line"></span><br><span class="line">       F      sets %? to true if the window has the focus</span><br><span class="line"></span><br><span class="line">       h      hardstatus of the window</span><br><span class="line"></span><br><span class="line">       H      hostname of the system</span><br><span class="line"></span><br><span class="line">       l      current load of the system</span><br><span class="line"></span><br><span class="line">       m      month number</span><br><span class="line"></span><br><span class="line">       M      month name</span><br><span class="line"></span><br><span class="line">       n      window number</span><br><span class="line"></span><br><span class="line">       s      seconds</span><br><span class="line"></span><br><span class="line">       t      window title</span><br><span class="line"></span><br><span class="line">       u      all other users on this window</span><br><span class="line"></span><br><span class="line">       w      all window numbers and names. With &#x27;-&#x27;  quailifier:  up  to  the</span><br><span class="line">              current  window;  with  &#x27;+&#x27;  qualifier: starting with the window</span><br><span class="line">              after the current one.</span><br><span class="line"></span><br><span class="line">       W      all window numbers and names except the current one</span><br><span class="line"></span><br><span class="line">       y      last two digits of the year number</span><br><span class="line"></span><br><span class="line">       Y      full year number</span><br><span class="line"></span><br><span class="line">       ?      the part to the next &#x27;%?&#x27; is displayed  only  if  a  &#x27;%&#x27;  escape</span><br><span class="line">              inside the part expands to a non-empty string</span><br><span class="line"></span><br><span class="line">       :      else part of &#x27;%?&#x27;</span><br><span class="line"></span><br><span class="line">       =      pad  the  string to the display&#x27;s width (like TeX&#x27;s hfill). If a</span><br><span class="line">              number is specified, pad  to  the  percentage  of  the  window&#x27;s</span><br><span class="line">              width.   A  &#x27;0&#x27;  qualifier  tells  screen to treat the number as</span><br><span class="line">              absolute position.  You can specify to pad relative to the  last</span><br><span class="line">              absolute  pad position by adding a &#x27;+&#x27; qualifier or to pad rela-</span><br><span class="line">              tive to the right margin by using &#x27;-&#x27;. The padding truncates the</span><br><span class="line">              string  if  the specified position lies before the current posi-</span><br><span class="line">              tion. Add the &#x27;L&#x27; qualifier to change this.</span><br><span class="line"></span><br><span class="line">       &lt;      same as &#x27;%=&#x27; but just do truncation, do not fill with spaces</span><br><span class="line"></span><br><span class="line">       &gt;      mark the current text position for  the  next  truncation.  When</span><br><span class="line">              screen  needs  to do truncation, it tries to do it in a way that</span><br><span class="line">              the marked position gets moved to the  specified  percentage  of</span><br><span class="line">              the  output  area.  (The  area starts from the last absolute pad</span><br><span class="line">              position and ends with the position specified by the  truncation</span><br><span class="line">              operator.)  The &#x27;L&#x27; qualifier tells screen to mark the truncated</span><br><span class="line">              parts with &#x27;...&#x27;.</span><br><span class="line"></span><br><span class="line">       &#123;      attribute/color modifier string terminated by the next &quot;&#125;&quot;</span><br><span class="line"></span><br><span class="line">       `      Substitute with the output of a &#x27;backtick&#x27; command.  The  length</span><br><span class="line">              qualifier is misused to identify one of the commands.</span><br><span class="line"></span><br><span class="line">       The  &#x27;c&#x27;  and &#x27;C&#x27; escape may be qualified with a &#x27;0&#x27; to make screen use</span><br><span class="line">       zero instead of space as fill character. The &#x27;0&#x27; qualifier  also  makes</span><br><span class="line">       the  &#x27;=&#x27;  escape use absolute positions. The &#x27;n&#x27; and &#x27;=&#x27; escapes under-</span><br><span class="line">       stand a length qualifier (e.g. &#x27;%3n&#x27;), &#x27;D&#x27; and &#x27;M&#x27; can be prefixed with</span><br><span class="line">       &#x27;L&#x27;  to  generate long names, &#x27;w&#x27; and &#x27;W&#x27; also show the window flags if</span><br><span class="line">       &#x27;L&#x27; is given.</span><br><span class="line"></span><br><span class="line">       An attribute/color modifier is is used to change the attributes or  the</span><br><span class="line">       color  settings.  Its  format  is &quot;[attribute modifier] [color descrip-</span><br><span class="line">       tion]&quot;. The attribute modifier must be prefixed by a change type  indi-</span><br><span class="line">       cator  if  it  can  be  confused with a color desciption. The following</span><br><span class="line">       change types are known:</span><br><span class="line"></span><br><span class="line">       +      add the specified set to the current attributes</span><br><span class="line"></span><br><span class="line">       -      remove the set from the current attributes</span><br><span class="line"></span><br><span class="line">       !      invert the set in the current attributes</span><br><span class="line"></span><br><span class="line">       =      change the current attributes to the specified set</span><br><span class="line"></span><br><span class="line">       The attribute set can either be specified as a hexadecimal number or  a</span><br><span class="line">       combination of the following letters:</span><br><span class="line"></span><br><span class="line">       d      dim</span><br><span class="line">       u      underline</span><br><span class="line">       b      bold</span><br><span class="line">       r      reverse</span><br><span class="line">       s      standout</span><br><span class="line">       B      blinking</span><br><span class="line"></span><br><span class="line">       Colors are coded either as a hexadecimal number or two letters specify-</span><br><span class="line">       ing the desired background and foreground color (in  that  order).  The</span><br><span class="line">       following colors are known:</span><br><span class="line"></span><br><span class="line">       k      black</span><br><span class="line">       r      red</span><br><span class="line">       g      green</span><br><span class="line">       y      yellow</span><br><span class="line">       b      blue</span><br><span class="line">       m      magenta</span><br><span class="line">       c      cyan</span><br><span class="line">       w      white</span><br><span class="line">       d      default color</span><br><span class="line">       .      leave color unchanged</span><br><span class="line"></span><br><span class="line">       The  capitalized  versions of the letter specify bright colors. You can</span><br><span class="line">       also use the pseudo-color &#x27;i&#x27; to set just the brightness and leave  the</span><br><span class="line">       color unchanged.</span><br><span class="line">       A  one digit/letter color description is treated as foreground or back-</span><br><span class="line">       ground color dependant on the current attributes: if  reverse  mode  is</span><br><span class="line">       set,  the  background color is changed instead of the foreground color.</span><br><span class="line">       If you don&#x27;t like this, prefix the color with a &quot;.&quot;. If  you  want  the</span><br><span class="line">       same behaviour for two-letter color descriptions, also prefix them with</span><br><span class="line">       a &quot;.&quot;.</span><br><span class="line">       As a special case, &quot;%&#123;-&#125;&quot; restores the attributes and colors that  were</span><br><span class="line">       set  before the last change was made (i.e. pops one level of the color-</span><br><span class="line">       change stack).</span><br><span class="line"></span><br><span class="line">       Examples:</span><br><span class="line"></span><br><span class="line">       &quot;G&quot;    set color to bright green</span><br><span class="line"></span><br><span class="line">       &quot;+b r&quot; use bold red</span><br><span class="line"></span><br><span class="line">       &quot;= yd&quot; clear all attributes, write in default  color  on  yellow  back-</span><br><span class="line">              ground.</span><br><span class="line"></span><br><span class="line">       %-Lw%&#123;= BW&#125;%50&gt;%n%f* %t%&#123;-&#125;%+Lw%&lt;</span><br><span class="line">              The  available  windows centered at the current window and trun-</span><br><span class="line">              cated to the available width. The current  window  is  displayed</span><br><span class="line">              white  on  blue.   This can be used with &quot;hardstatus alwayslast-</span><br><span class="line">              line&quot;.</span><br><span class="line"></span><br><span class="line">       %?%F%&#123;.R.&#125;%?%3n %t%? [%h]%?</span><br><span class="line">              The window number and title and the window&#x27;s hardstatus, if  one</span><br><span class="line">              is  set.  Also use a red background if this is the active focus.</span><br><span class="line">              Useful for &quot;caption string&quot;.</span><br><span class="line"></span><br><span class="line">FLOW-CONTROL</span><br><span class="line">       Each window has a flow-control setting that determines how screen deals</span><br><span class="line">       with the XON and XOFF characters (and perhaps the interrupt character).</span><br><span class="line">       When flow-control is turned off, screen ignores the XON and XOFF  char-</span><br><span class="line">       acters,  which  allows  the user to send them to the current program by</span><br><span class="line">       simply typing them (useful for the emacs editor,  for  instance).   The</span><br><span class="line">       trade-off  is  that it will take longer for output from a &quot;normal&quot; pro-</span><br><span class="line">       gram to pause in response to an XOFF.  With flow-control turned on, XON</span><br><span class="line">       and  XOFF  characters  are  used to immediately pause the output of the</span><br><span class="line">       current window.  You can still send these  characters  to  the  current</span><br><span class="line">       program, but you must use the appropriate two-character screen commands</span><br><span class="line">       (typically &quot;C-a q&quot; (xon) and &quot;C-a s&quot; (xoff)).   The  xon/xoff  commands</span><br><span class="line">       are  also useful for typing C-s and C-q past a terminal that intercepts</span><br><span class="line">       these characters.</span><br><span class="line"></span><br><span class="line">       Each window has an initial flow-control value set with  either  the  -f</span><br><span class="line">       option  or the &quot;defflow&quot; .screenrc command. Per default the windows are</span><br><span class="line">       set to automatic flow-switching.  It can then be  toggled  between  the</span><br><span class="line">       three states &#x27;fixed on&#x27;, &#x27;fixed off&#x27; and &#x27;automatic&#x27; interactively with</span><br><span class="line">       the &quot;flow&quot; command bound to &quot;C-a f&quot;.</span><br><span class="line"></span><br><span class="line">       The automatic flow-switching mode deals with  flow  control  using  the</span><br><span class="line">       TIOCPKT  mode  (like &quot;rlogin&quot; does). If the tty driver does not support</span><br><span class="line">       TIOCPKT, screen tries to find out the right mode based on  the  current</span><br><span class="line">       setting of the application keypad - when it is enabled, flow-control is</span><br><span class="line">       turned off and visa versa.  Of course, you can still  manipulate  flow-</span><br><span class="line">       control manually when needed.</span><br><span class="line"></span><br><span class="line">       If  you&#x27;re running with flow-control enabled and find that pressing the</span><br><span class="line">       interrupt key (usually  C-c)  does  not  interrupt  the  display  until</span><br><span class="line">       another 6-8 lines have scrolled by, try running screen with the &quot;inter-</span><br><span class="line">       rupt&quot; option (add the &quot;interrupt&quot; flag to the &quot;flow&quot;  command  in  your</span><br><span class="line">       .screenrc,  or use the -i command-line option).  This causes the output</span><br><span class="line">       that screen has accumulated from the interrupted program to be flushed.</span><br><span class="line">       One  disadvantage  is  that  the virtual terminal&#x27;s memory contains the</span><br><span class="line">       non-flushed version of the output, which in rare cases can cause  minor</span><br><span class="line">       inaccuracies  in  the  output.   For example, if you switch screens and</span><br><span class="line">       return, or update the screen with &quot;C-a l&quot; you would see the version  of</span><br><span class="line">       the  output  you would have gotten without &quot;interrupt&quot; being on.  Also,</span><br><span class="line">       you might need to turn off flow-control (or use auto-flow mode to  turn</span><br><span class="line">       it  off  automatically) when running a program that expects you to type</span><br><span class="line">       the interrupt character as input, as it is possible  to  interrupt  the</span><br><span class="line">       output of the virtual terminal to your physical terminal when flow-con-</span><br><span class="line">       trol is enabled.  If this happens, a simple refresh of the screen  with</span><br><span class="line">       &quot;C-a  l&quot; will restore it.  Give each mode a try, and use whichever mode</span><br><span class="line">       you find more comfortable.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TITLES (naming windows)</span><br><span class="line">       You can customize each window&#x27;s name in the window display (viewed with</span><br><span class="line">       the &quot;windows&quot; command (C-a w)) by setting it with one of the title com-</span><br><span class="line">       mands.  Normally the name displayed is the actual command name  of  the</span><br><span class="line">       program created in the window.  However, it is sometimes useful to dis-</span><br><span class="line">       tinguish various programs of the same name or to change  the  name  on-</span><br><span class="line">       the-fly to reflect the current state of the window.</span><br><span class="line"></span><br><span class="line">       The default name for all shell windows can be set with the &quot;shelltitle&quot;</span><br><span class="line">       command in the .screenrc file, while all other windows are created with</span><br><span class="line">       a &quot;screen&quot; command and thus can have their name set with the -t option.</span><br><span class="line">       Interactively,    there    is    the    title-string    escape-sequence</span><br><span class="line">       (&lt;esc&gt;kname&lt;esc&gt;\)  and the &quot;title&quot; command (C-a A).  The former can be</span><br><span class="line">       output from an application to control the window&#x27;s name under  software</span><br><span class="line">       control,  and  the  latter  will prompt for a name when typed.  You can</span><br><span class="line">       also bind pre-defined names to keys with the  &quot;title&quot;  command  to  set</span><br><span class="line">       things quickly without prompting.</span><br><span class="line"></span><br><span class="line">       Finally,  screen has a shell-specific heuristic that is enabled by set-</span><br><span class="line">       ting the window&#x27;s name to &quot;search|name&quot; and arranging to  have  a  null</span><br><span class="line">       title escape-sequence output as a part of your prompt.  The search por-</span><br><span class="line">       tion specifies an end-of-prompt search string, while the  name  portion</span><br><span class="line">       specifies the default shell name for the window.  If the name ends in a</span><br><span class="line">       `:&#x27; screen will add what it believes to be the current command  running</span><br><span class="line">       in  the window to the end of the window&#x27;s shell name (e.g. &quot;name:cmd&quot;).</span><br><span class="line">       Otherwise the current command name supersedes the shell name  while  it</span><br><span class="line">       is running.</span><br><span class="line"></span><br><span class="line">       Here&#x27;s  how  it  works:   you must modify your shell prompt to output a</span><br><span class="line">       null title-escape-sequence (&lt;esc&gt;k&lt;esc&gt;\) as a  part  of  your  prompt.</span><br><span class="line">       The  last part of your prompt must be the same as the string you speci-</span><br><span class="line">       fied for the search portion of the title.  Once this is set up,  screen</span><br><span class="line">       will  use  the title-escape-sequence to clear the previous command name</span><br><span class="line">       and get ready for the next command.  Then, when a newline  is  received</span><br><span class="line">       from  the shell, a search is made for the end of the prompt.  If found,</span><br><span class="line">       it will grab the first word after the matched string and use it as  the</span><br><span class="line">       command  name.  If the command name begins with either &#x27;!&#x27;, &#x27;%&#x27;, or &#x27;^&#x27;</span><br><span class="line">       screen will use the first word on the  following  line  (if  found)  in</span><br><span class="line">       preference  to  the  just-found  name.  This helps csh users get better</span><br><span class="line">       command names when using job control or history recall commands.</span><br><span class="line"></span><br><span class="line">       Here&#x27;s some .screenrc examples:</span><br><span class="line"></span><br><span class="line">              screen -t top 2 nice top</span><br><span class="line"></span><br><span class="line">       Adding this line to your .screenrc would start a nice-d version of  the</span><br><span class="line">       &quot;top&quot; command in window 2 named &quot;top&quot; rather than &quot;nice&quot;.</span><br><span class="line"></span><br><span class="line">                   shelltitle &#x27;&gt; |csh&#x27;</span><br><span class="line">                   screen 1</span><br><span class="line"></span><br><span class="line">       These  commands  would  start  a  shell with the given shelltitle.  The</span><br><span class="line">       title specified is an auto-title that would expect the prompt  and  the</span><br><span class="line">       typed command to look something like the following:</span><br><span class="line"></span><br><span class="line">              /usr/joe/src/dir&gt; trn</span><br><span class="line"></span><br><span class="line">       (it  looks  after  the  &#x27;&gt;  &#x27; for the command name).  The window status</span><br><span class="line">       would show the name &quot;trn&quot; while the command was running, and revert  to</span><br><span class="line">       &quot;csh&quot; upon completion.</span><br><span class="line"></span><br><span class="line">              bind R screen -t &#x27;% |root:&#x27; su</span><br><span class="line"></span><br><span class="line">       Having  this command in your .screenrc would bind the key sequence &quot;C-a</span><br><span class="line">       R&quot; to the &quot;su&quot; command and give it an auto-title name of &quot;root:&quot;.   For</span><br><span class="line">       this auto-title to work, the screen could look something like this:</span><br><span class="line"></span><br><span class="line">                   % !em</span><br><span class="line">                   emacs file.c</span><br><span class="line"></span><br><span class="line">       Here  the user typed the csh history command &quot;!em&quot; which ran the previ-</span><br><span class="line">       ously  entered  &quot;emacs&quot;  command.   The  window   status   would   show</span><br><span class="line">       &quot;root:emacs&quot;  during the execution of the command, and revert to simply</span><br><span class="line">       &quot;root:&quot; at its completion.</span><br><span class="line"></span><br><span class="line">                   bind o title</span><br><span class="line">                   bind E title &quot;&quot;</span><br><span class="line">                   bind u title (unknown)</span><br><span class="line"></span><br><span class="line">       The first binding doesn&#x27;t have any arguments, so it  would  prompt  you</span><br><span class="line">       for  a title. when you type &quot;C-a o&quot;.  The second binding would clear an</span><br><span class="line">       auto-title&#x27;s current setting (C-a E).  The third binding would set  the</span><br><span class="line">       current window&#x27;s title to &quot;(unknown)&quot; (C-a u).</span><br><span class="line"></span><br><span class="line">       One  thing  to keep in mind when adding a null title-escape-sequence to</span><br><span class="line">       your prompt is that some shells (like the csh) count all  the  non-con-</span><br><span class="line">       trol  characters  as  part  of the prompt&#x27;s length.  If these invisible</span><br><span class="line">       characters aren&#x27;t a multiple of 8 then  backspacing  over  a  tab  will</span><br><span class="line">       result in an incorrect display.  One way to get around this is to use a</span><br><span class="line">       prompt like this:</span><br><span class="line"></span><br><span class="line">              set prompt=&#x27;^[[0000m^[k^[\% &#x27;</span><br><span class="line"></span><br><span class="line">       The escape-sequence &quot;&lt;esc&gt;[0000m&quot; not  only  normalizes  the  character</span><br><span class="line">       attributes, but all the zeros round the length of the invisible charac-</span><br><span class="line">       ters up to 8.  Bash  users  will  probably  want  to  echo  the  escape</span><br><span class="line">       sequence in the PROMPT_COMMAND:</span><br><span class="line"></span><br><span class="line">              PROMPT_COMMAND=&#x27;echo -n -e &quot;\033k\033\134&quot;&#x27;</span><br><span class="line"></span><br><span class="line">       (I used &quot;134&quot; to output a `\&#x27; because of a bug in bash v1.04).</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">THE VIRTUAL TERMINAL</span><br><span class="line">       Each  window  in  a screen session emulates a VT100 terminal, with some</span><br><span class="line">       extra functions added. The VT100 emulator is hard-coded, no other  ter-</span><br><span class="line">       minal types can be emulated.</span><br><span class="line">       Usually  screen  tries to emulate as much of the VT100/ANSI standard as</span><br><span class="line">       possible. But if your terminal lacks certain capabilities,  the  emula-</span><br><span class="line">       tion  may not be complete. In these cases screen has to tell the appli-</span><br><span class="line">       cations that some of the features are missing. This is  no  problem  on</span><br><span class="line">       machines using termcap, because screen can use the $TERMCAP variable to</span><br><span class="line">       customize the standard screen termcap.</span><br><span class="line"></span><br><span class="line">       But if you do a rlogin on another machine or your machine supports only</span><br><span class="line">       terminfo  this  method  fails.  Because of this, screen offers a way to</span><br><span class="line">       deal with these cases.  Here is how it works:</span><br><span class="line"></span><br><span class="line">       When screen tries to figure out a terminal name for  itself,  it  first</span><br><span class="line">       looks  for an entry named &quot;screen.&lt;term&gt;&quot;, where &lt;term&gt; is the contents</span><br><span class="line">       of your $TERM variable.  If no such entry exists, screen tries &quot;screen&quot;</span><br><span class="line">       (or  &quot;screen-w&quot;  if  the terminal is wide (132 cols or more)).  If even</span><br><span class="line">       this entry cannot be found, &quot;vt100&quot; is used as a substitute.</span><br><span class="line"></span><br><span class="line">       The idea is that if you have a terminal which doesn&#x27;t support an impor-</span><br><span class="line">       tant  feature  (e.g.  delete  char or clear to EOS) you can build a new</span><br><span class="line">       termcap/terminfo entry for screen (named &quot;screen.&lt;dumbterm&gt;&quot;) in  which</span><br><span class="line">       this  capability  has been disabled. If this entry is installed on your</span><br><span class="line">       machines you are able to do a rlogin and still keep the  correct  term-</span><br><span class="line">       cap/terminfo  entry.  The terminal name is put in the $TERM variable of</span><br><span class="line">       all new windows.  Screen also sets the $TERMCAP variable reflecting the</span><br><span class="line">       capabilities of the virtual terminal emulated. Notice that, however, on</span><br><span class="line">       machines using the terminfo database this variable has no effect.  Fur-</span><br><span class="line">       thermore, the variable $WINDOW is set to the window number of each win-</span><br><span class="line">       dow.</span><br><span class="line"></span><br><span class="line">       The actual set  of  capabilities  supported  by  the  virtual  terminal</span><br><span class="line">       depends  on  the  capabilities supported by the physical terminal.  If,</span><br><span class="line">       for instance, the physical terminal does not support  underscore  mode,</span><br><span class="line">       screen  does  not  put the `us&#x27; and `ue&#x27; capabilities into the window&#x27;s</span><br><span class="line">       $TERMCAP variable, accordingly.  However, a minimum number of capabili-</span><br><span class="line">       ties  must  be  supported  by a terminal in order to run screen; namely</span><br><span class="line">       scrolling, clear screen, and direct  cursor  addressing  (in  addition,</span><br><span class="line">       screen  does  not  run on hardcopy terminals or on terminals that over-</span><br><span class="line">       strike).</span><br><span class="line"></span><br><span class="line">       Also, you can customize the $TERMCAP value used by screen by using  the</span><br><span class="line">       &quot;termcap&quot;  .screenrc  command,  or  by defining the variable $SCREENCAP</span><br><span class="line">       prior to startup.  When the is latter defined, its value will be copied</span><br><span class="line">       verbatim  into each window&#x27;s $TERMCAP variable.  This can either be the</span><br><span class="line">       full terminal definition, or a filename  where  the  terminal  &quot;screen&quot;</span><br><span class="line">       (and/or &quot;screen-w&quot;) is defined.</span><br><span class="line"></span><br><span class="line">       Note  that screen honors the &quot;terminfo&quot; .screenrc command if the system</span><br><span class="line">       uses the terminfo database rather than termcap.</span><br><span class="line"></span><br><span class="line">       When the boolean `G0&#x27; capability is present in the  termcap  entry  for</span><br><span class="line">       the terminal on which screen has been called, the terminal emulation of</span><br><span class="line">       screen supports multiple character sets.  This allows an application to</span><br><span class="line">       make use of, for instance, the VT100 graphics character set or national</span><br><span class="line">       character sets.  The following control functions from ISO 2022 are sup-</span><br><span class="line">       ported:  lock  shift  G0  (SI), lock shift G1 (SO), lock shift G2, lock</span><br><span class="line">       shift G3, single shift G2, and single shift G3.  When a virtual  termi-</span><br><span class="line">       nal  is  created  or reset, the ASCII character set is designated as G0</span><br><span class="line">       through G3.  When the `G0&#x27; capability is present, screen evaluates  the</span><br><span class="line">       capabilities  `S0&#x27;, `E0&#x27;, and `C0&#x27; if present. `S0&#x27; is the sequence the</span><br><span class="line">       terminal uses to enable and start the  graphics  character  set  rather</span><br><span class="line">       than  SI.   `E0&#x27;  is the corresponding replacement for SO. `C0&#x27; gives a</span><br><span class="line">       character by character translation string that  is  used  during  semi-</span><br><span class="line">       graphics  mode.  This string is built like the `acsc&#x27; terminfo capabil-</span><br><span class="line">       ity.</span><br><span class="line"></span><br><span class="line">       When the `po&#x27; and `pf&#x27; capabilities are present in the terminal&#x27;s term-</span><br><span class="line">       cap  entry,  applications running in a screen window can send output to</span><br><span class="line">       the printer port of the terminal.  This allows a user to have an appli-</span><br><span class="line">       cation  in one window sending output to a printer connected to the ter-</span><br><span class="line">       minal, while all other windows are still active (the  printer  port  is</span><br><span class="line">       enabled  and  disabled  again  for  each  chunk of output).  As a side-</span><br><span class="line">       effect, programs running in different windows can send  output  to  the</span><br><span class="line">       printer  simultaneously.   Data sent to the printer is not displayed in</span><br><span class="line">       the window.  The info command displays a line starting `PRIN&#x27; while the</span><br><span class="line">       printer is active.</span><br><span class="line"></span><br><span class="line">       Screen  maintains  a hardstatus line for every window. If a window gets</span><br><span class="line">       selected, the display&#x27;s hardstatus will be updated to  match  the  win-</span><br><span class="line">       dow&#x27;s  hardstatus  line. If the display has no hardstatus the line will</span><br><span class="line">       be displayed as a standard screen message.  The hardstatus line can  be</span><br><span class="line">       changed    with   the   ANSI   Application   Program   Command   (APC):</span><br><span class="line">       &quot;ESC_&lt;string&gt;ESC\&quot;. As a  convenience  for  xterm  users  the  sequence</span><br><span class="line">       &quot;ESC]0..2;&lt;string&gt;^G&quot; is also accepted.</span><br><span class="line"></span><br><span class="line">       Some  capabilities  are only put into the $TERMCAP variable of the vir-</span><br><span class="line">       tual terminal if they can be efficiently implemented  by  the  physical</span><br><span class="line">       terminal.  For instance, `dl&#x27; (delete line) is only put into the $TERM-</span><br><span class="line">       CAP variable if the terminal supports  either  delete  line  itself  or</span><br><span class="line">       scrolling  regions. Note that this may provoke confusion, when the ses-</span><br><span class="line">       sion is reattached on a different terminal, as the  value  of  $TERMCAP</span><br><span class="line">       cannot be modified by parent processes.</span><br><span class="line"></span><br><span class="line">       The  &quot;alternate  screen&quot; capability is not enabled by default.  Set the</span><br><span class="line">       altscreen .screenrc command to enable it.</span><br><span class="line"></span><br><span class="line">       The following is a list of  control  sequences  recognized  by  screen.</span><br><span class="line">       &quot;(V)&quot; and &quot;(A)&quot; indicate VT100-specific and ANSI- or ISO-specific func-</span><br><span class="line">       tions, respectively.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       ESC E                      Next Line</span><br><span class="line"></span><br><span class="line">       ESC D                      Index</span><br><span class="line"></span><br><span class="line">       ESC M                      Reverse Index</span><br><span class="line"></span><br><span class="line">       ESC H                      Horizontal Tab Set</span><br><span class="line"></span><br><span class="line">       ESC Z                      Send VT100 Identification String</span><br><span class="line"></span><br><span class="line">       ESC 7                 (V)  Save Cursor and Attributes</span><br><span class="line"></span><br><span class="line">       ESC 8                 (V)  Restore Cursor and Attributes</span><br><span class="line"></span><br><span class="line">       ESC [s                (A)  Save Cursor and Attributes</span><br><span class="line"></span><br><span class="line">       ESC [u                (A)  Restore Cursor and Attributes</span><br><span class="line"></span><br><span class="line">       ESC c                      Reset to Initial State</span><br><span class="line"></span><br><span class="line">       ESC g                      Visual Bell</span><br><span class="line"></span><br><span class="line">       ESC Pn p                   Cursor Visibility (97801)</span><br><span class="line"></span><br><span class="line">           Pn = 6                 Invisible</span><br><span class="line"></span><br><span class="line">                7                 Visible</span><br><span class="line"></span><br><span class="line">       ESC =                 (V)  Application Keypad Mode</span><br><span class="line"></span><br><span class="line">       ESC &gt;                 (V)  Numeric Keypad Mode</span><br><span class="line"></span><br><span class="line">       ESC # 8               (V)  Fill Screen with E&#x27;s</span><br><span class="line"></span><br><span class="line">       ESC \                 (A)  String Terminator</span><br><span class="line"></span><br><span class="line">       ESC ^                 (A)  Privacy Message String (Message Line)</span><br><span class="line"></span><br><span class="line">       ESC !                      Global Message String (Message Line)</span><br><span class="line"></span><br><span class="line">       ESC k                      A.k.a. Definition String</span><br><span class="line"></span><br><span class="line">       ESC P                 (A)  Device Control  String.   Outputs  a  string</span><br><span class="line">                                  directly to the host terminal without inter-</span><br><span class="line">                                  pretation.</span><br><span class="line"></span><br><span class="line">       ESC _                 (A)  Application Program Command (Hardstatus)</span><br><span class="line"></span><br><span class="line">       ESC ] 0 ; string ^G   (A)  Operating System Command (Hardstatus,  xterm</span><br><span class="line">                                  title hack)</span><br><span class="line"></span><br><span class="line">       ESC ] 83 ; cmd ^G     (A)  Execute  screen  command. This only works if</span><br><span class="line">                                  multi-user support is compiled into  screen.</span><br><span class="line">                                  The  pseudo-user &quot;:window:&quot; is used to check</span><br><span class="line">                                  the access control list. Use  &quot;addacl  :win-</span><br><span class="line">                                  dow:  -rwx  #?&quot;  to  create  a  user with no</span><br><span class="line">                                  rights and allow only the needed commands.</span><br><span class="line"></span><br><span class="line">       Control-N             (A)  Lock Shift G1 (SO)</span><br><span class="line"></span><br><span class="line">       Control-O             (A)  Lock Shift G0 (SI)</span><br><span class="line"></span><br><span class="line">       ESC n                 (A)  Lock Shift G2</span><br><span class="line"></span><br><span class="line">       ESC o                 (A)  Lock Shift G3</span><br><span class="line"></span><br><span class="line">       ESC N                 (A)  Single Shift G2</span><br><span class="line"></span><br><span class="line">       ESC O                 (A)  Single Shift G3</span><br><span class="line"></span><br><span class="line">       ESC ( Pcs             (A)  Designate character set as G0</span><br><span class="line"></span><br><span class="line">       ESC ) Pcs             (A)  Designate character set as G1</span><br><span class="line"></span><br><span class="line">       ESC * Pcs             (A)  Designate character set as G2</span><br><span class="line"></span><br><span class="line">       ESC + Pcs             (A)  Designate character set as G3</span><br><span class="line"></span><br><span class="line">       ESC [ Pn ; Pn H            Direct Cursor Addressing</span><br><span class="line"></span><br><span class="line">       ESC [ Pn ; Pn f            same as above</span><br><span class="line"></span><br><span class="line">       ESC [ Pn J                 Erase in Display</span><br><span class="line"></span><br><span class="line">             Pn = None or 0       From Cursor to End of Screen</span><br><span class="line"></span><br><span class="line">                  1               From Beginning of Screen to Cursor</span><br><span class="line"></span><br><span class="line">                  2               Entire Screen</span><br><span class="line"></span><br><span class="line">       ESC [ Pn K                 Erase in Line</span><br><span class="line"></span><br><span class="line">             Pn = None or 0       From Cursor to End of Line</span><br><span class="line"></span><br><span class="line">                  1               From Beginning of Line to Cursor</span><br><span class="line"></span><br><span class="line">                  2               Entire Line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn X                 Erase character</span><br><span class="line"></span><br><span class="line">       ESC [ Pn A                 Cursor Up</span><br><span class="line"></span><br><span class="line">       ESC [ Pn B                 Cursor Down</span><br><span class="line"></span><br><span class="line">       ESC [ Pn C                 Cursor Right</span><br><span class="line"></span><br><span class="line">       ESC [ Pn D                 Cursor Left</span><br><span class="line"></span><br><span class="line">       ESC [ Pn E                 Cursor next line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn F                 Cursor previous line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn G                 Cursor horizontal position</span><br><span class="line"></span><br><span class="line">       ESC [ Pn `                 same as above</span><br><span class="line"></span><br><span class="line">       ESC [ Pn d                 Cursor vertical position</span><br><span class="line"></span><br><span class="line">       ESC [ Ps ;...; Ps m        Select Graphic Rendition</span><br><span class="line"></span><br><span class="line">             Ps = None or 0       Default Rendition</span><br><span class="line"></span><br><span class="line">                  1               Bold</span><br><span class="line"></span><br><span class="line">                  2          (A)  Faint</span><br><span class="line"></span><br><span class="line">                  3          (A)  Standout Mode (ANSI: Italicized)</span><br><span class="line"></span><br><span class="line">                  4               Underlined</span><br><span class="line"></span><br><span class="line">                  5               Blinking</span><br><span class="line"></span><br><span class="line">                  7               Negative Image</span><br><span class="line"></span><br><span class="line">                  22         (A)  Normal Intensity</span><br><span class="line"></span><br><span class="line">                  23         (A)  Standout Mode off (ANSI: Italicized off)</span><br><span class="line"></span><br><span class="line">                  24         (A)  Not Underlined</span><br><span class="line"></span><br><span class="line">                  25         (A)  Not Blinking</span><br><span class="line"></span><br><span class="line">                  27         (A)  Positive Image</span><br><span class="line"></span><br><span class="line">                  30         (A)  Foreground Black</span><br><span class="line"></span><br><span class="line">                  31         (A)  Foreground Red</span><br><span class="line"></span><br><span class="line">                  32         (A)  Foreground Green</span><br><span class="line"></span><br><span class="line">                  33         (A)  Foreground Yellow</span><br><span class="line"></span><br><span class="line">                  34         (A)  Foreground Blue</span><br><span class="line"></span><br><span class="line">                  35         (A)  Foreground Magenta</span><br><span class="line"></span><br><span class="line">                  36         (A)  Foreground Cyan</span><br><span class="line"></span><br><span class="line">                  37         (A)  Foreground White</span><br><span class="line"></span><br><span class="line">                  39         (A)  Foreground Default</span><br><span class="line"></span><br><span class="line">                  40         (A)  Background Black</span><br><span class="line"></span><br><span class="line">                  ...</span><br><span class="line"></span><br><span class="line">                  49         (A)  Background Default</span><br><span class="line"></span><br><span class="line">       ESC [ Pn g                 Tab Clear</span><br><span class="line"></span><br><span class="line">             Pn = None or 0       Clear Tab at Current Position</span><br><span class="line"></span><br><span class="line">                  3               Clear All Tabs</span><br><span class="line"></span><br><span class="line">       ESC [ Pn ; Pn r       (V)  Set Scrolling Region</span><br><span class="line"></span><br><span class="line">       ESC [ Pn I            (A)  Horizontal Tab</span><br><span class="line"></span><br><span class="line">       ESC [ Pn Z            (A)  Backward Tab</span><br><span class="line"></span><br><span class="line">       ESC [ Pn L            (A)  Insert Line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn M            (A)  Delete Line</span><br><span class="line"></span><br><span class="line">       ESC [ Pn @            (A)  Insert Character</span><br><span class="line"></span><br><span class="line">       ESC [ Pn P            (A)  Delete Character</span><br><span class="line"></span><br><span class="line">       ESC [ Pn S                 Scroll Scrolling Region Up</span><br><span class="line"></span><br><span class="line">       ESC [ Pn T                 Scroll Scrolling Region Down</span><br><span class="line"></span><br><span class="line">       ESC [ Pn ^                 same as above</span><br><span class="line"></span><br><span class="line">       ESC [ Ps ;...; Ps h        Set Mode</span><br><span class="line"></span><br><span class="line">       ESC [ Ps ;...; Ps l        Reset Mode</span><br><span class="line"></span><br><span class="line">             Ps = 4          (A)  Insert Mode</span><br><span class="line"></span><br><span class="line">                  20         (A)  Automatic Linefeed Mode</span><br><span class="line"></span><br><span class="line">                  34              Normal Cursor Visibility</span><br><span class="line"></span><br><span class="line">                  ?1         (V)  Application Cursor Keys</span><br><span class="line"></span><br><span class="line">                  ?3         (V)  Change Terminal Width to 132 columns</span><br><span class="line"></span><br><span class="line">                  ?5         (V)  Reverse Video</span><br><span class="line"></span><br><span class="line">                  ?6         (V)  Origin Mode</span><br><span class="line"></span><br><span class="line">                  ?7         (V)  Wrap Mode</span><br><span class="line"></span><br><span class="line">                  ?9              X10 mouse tracking</span><br><span class="line"></span><br><span class="line">                  ?25        (V)  Visible Cursor</span><br><span class="line"></span><br><span class="line">                  ?47             Alternate Screen (old xterm code)</span><br><span class="line"></span><br><span class="line">                  ?1000      (V)  VT200 mouse tracking</span><br><span class="line"></span><br><span class="line">                  ?1047           Alternate Screen (new xterm code)</span><br><span class="line"></span><br><span class="line">                  ?1049           Alternate Screen (new xterm code)</span><br><span class="line"></span><br><span class="line">       ESC [ 5 i             (A)  Start relay to printer (ANSI Media Copy)</span><br><span class="line"></span><br><span class="line">       ESC [ 4 i             (A)  Stop relay to printer (ANSI Media Copy)</span><br><span class="line"></span><br><span class="line">       ESC [ 8 ; Ph ; Pw t        Resize the window to  `Ph&#x27;  lines  and  `Pw&#x27;</span><br><span class="line">                                  columns (SunView special)</span><br><span class="line"></span><br><span class="line">       ESC [ c                    Send VT100 Identification String</span><br><span class="line"></span><br><span class="line">       ESC [ x                    Send Terminal Parameter Report</span><br><span class="line"></span><br><span class="line">       ESC [ &gt; c                  Send   VT220   Secondary  Device  Attributes</span><br><span class="line">                                  String</span><br><span class="line"></span><br><span class="line">       ESC [ 6 n                  Send Cursor Position Report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INPUT TRANSLATION</span><br><span class="line">       In order to do a full VT100 emulation  screen  has  to  detect  that  a</span><br><span class="line">       sequence  of characters in the input stream was generated by a keypress</span><br><span class="line">       on the user&#x27;s keyboard and insert  the  VT100  style  escape  sequence.</span><br><span class="line">       Screen  has  a very flexible way of doing this by making it possible to</span><br><span class="line">       map arbitrary commands on arbitrary sequences of characters. For  stan-</span><br><span class="line">       dard  VT100  emulation  the  command will always insert a string in the</span><br><span class="line">       input buffer of the window (see also command stuff in the  command  ta-</span><br><span class="line">       ble).  Because the sequences generated by a keypress can change after a</span><br><span class="line">       reattach from a different terminal type, it is possible  to  bind  com-</span><br><span class="line">       mands  to the termcap name of the keys.  Screen will insert the correct</span><br><span class="line">       binding after each  reattach.  See  the  bindkey  command  for  further</span><br><span class="line">       details on the syntax and examples.</span><br><span class="line"></span><br><span class="line">       Here  is the table of the default key bindings. (A) means that the com-</span><br><span class="line">       mand is executed if the keyboard is switched into application mode.</span><br><span class="line"></span><br><span class="line">       Key name          Termcap name    Command</span><br><span class="line">       ______________________________________________________</span><br><span class="line">       Cursor up             ku          stuff \033[A</span><br><span class="line">                                         stuff \033OA    (A)</span><br><span class="line">       Cursor down           kd          stuff \033[B</span><br><span class="line">                                         stuff \033OB    (A)</span><br><span class="line">       Cursor right          kr          stuff \033[C</span><br><span class="line">                                         stuff \033OC    (A)</span><br><span class="line">       Cursor left           kl          stuff \033[D</span><br><span class="line">                                         stuff \033OD    (A)</span><br><span class="line">       Function key 0        k0          stuff \033[10~</span><br><span class="line">       Function key 1        k1          stuff \033OP</span><br><span class="line">       Function key 2        k2          stuff \033OQ</span><br><span class="line">       Function key 3        k3          stuff \033OR</span><br><span class="line">       Function key 4        k4          stuff \033OS</span><br><span class="line">       Function key 5        k5          stuff \033[15~</span><br><span class="line">       Function key 6        k6          stuff \033[17~</span><br><span class="line">       Function key 7        k7          stuff \033[18~</span><br><span class="line">       Function key 8        k8          stuff \033[19~</span><br><span class="line">       Function key 9        k9          stuff \033[20~</span><br><span class="line">       Function key 10       k;          stuff \033[21~</span><br><span class="line">       Function key 11       F1          stuff \033[23~</span><br><span class="line">       Function key 12       F2          stuff \033[24~</span><br><span class="line">       Home                  kh          stuff \033[1~</span><br><span class="line">       End                   kH          stuff \033[4~</span><br><span class="line">       Insert                kI          stuff \033[2~</span><br><span class="line">       Delete                kD          stuff \033[3~</span><br><span class="line">       Page up               kP          stuff \033[5~</span><br><span class="line">       Page down             kN          stuff \033[6~</span><br><span class="line">       Keypad 0              f0          stuff 0</span><br><span class="line">                                         stuff \033Op    (A)</span><br><span class="line">       Keypad 1              f1          stuff 1</span><br><span class="line">                                         stuff \033Oq    (A)</span><br><span class="line">       Keypad 2              f2          stuff 2</span><br><span class="line">                                         stuff \033Or    (A)</span><br><span class="line">       Keypad 3              f3          stuff 3</span><br><span class="line">                                         stuff \033Os    (A)</span><br><span class="line">       Keypad 4              f4          stuff 4</span><br><span class="line">                                         stuff \033Ot    (A)</span><br><span class="line">       Keypad 5              f5          stuff 5</span><br><span class="line">                                         stuff \033Ou    (A)</span><br><span class="line">       Keypad 6              f6          stuff 6</span><br><span class="line">                                         stuff \033Ov    (A)</span><br><span class="line">       Keypad 7              f7          stuff 7</span><br><span class="line">                                         stuff \033Ow    (A)</span><br><span class="line">       Keypad 8              f8          stuff 8</span><br><span class="line">                                         stuff \033Ox    (A)</span><br><span class="line">       Keypad 9              f9          stuff 9</span><br><span class="line">                                         stuff \033Oy    (A)</span><br><span class="line">       Keypad +              f+          stuff +</span><br><span class="line">                                         stuff \033Ok    (A)</span><br><span class="line">       Keypad -              f-          stuff -</span><br><span class="line">                                         stuff \033Om    (A)</span><br><span class="line">       Keypad *              f*          stuff *</span><br><span class="line">                                         stuff \033Oj    (A)</span><br><span class="line">       Keypad /              f/          stuff /</span><br><span class="line">                                         stuff \033Oo    (A)</span><br><span class="line">       Keypad =              fq          stuff =</span><br><span class="line">                                         stuff \033OX    (A)</span><br><span class="line">       Keypad .              f.          stuff .</span><br><span class="line">                                         stuff \033On    (A)</span><br><span class="line">       Keypad ,              f,          stuff ,</span><br><span class="line">                                         stuff \033Ol    (A)</span><br><span class="line">       Keypad enter          fe          stuff \015</span><br><span class="line">                                         stuff \033OM    (A)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SPECIAL TERMINAL CAPABILITIES</span><br><span class="line">       The following table describes all terminal capabilities that are recog-</span><br><span class="line">       nized  by  screen  and are not in the termcap(5) manual.  You can place</span><br><span class="line">       these capabilities in your termcap entries (in `/etc/termcap&#x27;)  or  use</span><br><span class="line">       them  with the commands `termcap&#x27;, `terminfo&#x27; and `termcapinfo&#x27; in your</span><br><span class="line">       screenrc files. It is often not possible to place these capabilities in</span><br><span class="line">       the terminfo database.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       LP   (bool)  Terminal  has  VT100 style margins (`magic margins&#x27;). Note</span><br><span class="line">                    that this capability is obsolete because screen  uses  the</span><br><span class="line">                    standard &#x27;xn&#x27; instead.</span><br><span class="line"></span><br><span class="line">       Z0   (str)   Change width to 132 columns.</span><br><span class="line"></span><br><span class="line">       Z1   (str)   Change width to 80 columns.</span><br><span class="line"></span><br><span class="line">       WS   (str)   Resize  display. This capability has the desired width and</span><br><span class="line">                    height as arguments. SunView(tm) example: &#x27;\E[8;%d;%dt&#x27;.</span><br><span class="line"></span><br><span class="line">       NF   (bool)  Terminal doesn&#x27;t need flow control. Send ^S and ^Q  direct</span><br><span class="line">                    to  the  application.  Same as &#x27;flow off&#x27;. The opposite of</span><br><span class="line">                    this capability is &#x27;nx&#x27;.</span><br><span class="line"></span><br><span class="line">       G0   (bool)  Terminal can deal with ISO 2022 font selection  sequences.</span><br><span class="line"></span><br><span class="line">       S0   (str)   Switch  charset  &#x27;G0&#x27; to the specified charset. Default is</span><br><span class="line">                    &#x27;\E(%.&#x27;.</span><br><span class="line"></span><br><span class="line">       E0   (str)   Switch charset &#x27;G0&#x27; back to standard charset.  Default  is</span><br><span class="line">                    &#x27;\E(B&#x27;.</span><br><span class="line"></span><br><span class="line">       C0   (str)   Use the string as a conversion table for font &#x27;0&#x27;. See the</span><br><span class="line">                    &#x27;ac&#x27; capability for more details.</span><br><span class="line"></span><br><span class="line">       CS   (str)   Switch cursor-keys to application mode.</span><br><span class="line"></span><br><span class="line">       CE   (str)   Switch cursor-keys back to normal mode.</span><br><span class="line"></span><br><span class="line">       AN   (bool)  Turn on autonuke. See  the  &#x27;autonuke&#x27;  command  for  more</span><br><span class="line">                    details.</span><br><span class="line"></span><br><span class="line">       OL   (num)   Set  the  output buffer limit. See the &#x27;obuflimit&#x27; command</span><br><span class="line">                    for more details.</span><br><span class="line"></span><br><span class="line">       KJ   (str)   Set the encoding of the terminal. See the &#x27;encoding&#x27;  com-</span><br><span class="line">                    mand for valid encodings.</span><br><span class="line"></span><br><span class="line">       AF   (str)   Change  character foreground color in an ANSI conform way.</span><br><span class="line">                    This capability will almost always  be  set  to  &#x27;\E[3%dm&#x27;</span><br><span class="line">                    (&#x27;\E[3%p1%dm&#x27; on terminfo machines).</span><br><span class="line"></span><br><span class="line">       AB   (str)   Same as &#x27;AF&#x27;, but change background color.</span><br><span class="line"></span><br><span class="line">       AX   (bool)  Does  understand  ANSI  set  default fg/bg color (\E[39m /</span><br><span class="line">                    \E[49m).</span><br><span class="line"></span><br><span class="line">       XC   (str)   Describe a translation of characters to strings  depending</span><br><span class="line">                    on  the current font. More details follow in the next sec-</span><br><span class="line">                    tion.</span><br><span class="line"></span><br><span class="line">       XT   (bool)  Terminal understands special xterm sequences  (OSC,  mouse</span><br><span class="line">                    tracking).</span><br><span class="line"></span><br><span class="line">       C8   (bool)  Terminal needs bold to display high-intensity colors (e.g.</span><br><span class="line">                    Eterm).</span><br><span class="line"></span><br><span class="line">       TF   (bool)  Add missing capabilities to the termcap/info  entry.  (Set</span><br><span class="line">                    by default).</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CHARACTER TRANSLATION</span><br><span class="line">       Screen  has  a  powerful mechanism to translate characters to arbitrary</span><br><span class="line">       strings depending on the current font and terminal type.  Use this fea-</span><br><span class="line">       ture  if  you  want  to  work with a common standard character set (say</span><br><span class="line">       ISO8851-latin1) even on terminals that scatter the more unusual charac-</span><br><span class="line">       ters over several national language font pages.</span><br><span class="line"></span><br><span class="line">       Syntax:</span><br><span class="line">           XC=&lt;charset-mapping&gt;&#123;,,&lt;charset-mapping&gt;&#125;</span><br><span class="line">           &lt;charset-mapping&gt; := &lt;designator&gt;&lt;template&gt;&#123;,&lt;mapping&gt;&#125;</span><br><span class="line">           &lt;mapping&gt; := &lt;char-to-be-mapped&gt;&lt;template-arg&gt;</span><br><span class="line"></span><br><span class="line">       The things in braces may be repeated any number of times.</span><br><span class="line"></span><br><span class="line">       A  &lt;charset-mapping&gt; tells screen how to map characters in font &lt;desig-</span><br><span class="line">       nator&gt; (&#x27;B&#x27;: Ascii, &#x27;A&#x27;: UK, &#x27;K&#x27;:  german,  etc.)   to  strings.  Every</span><br><span class="line">       &lt;mapping&gt;  describes  to  what string a single character will be trans-</span><br><span class="line">       lated. A template mechanism is used, as most of the time the codes have</span><br><span class="line">       a  lot  in  common  (for  example strings to switch to and from another</span><br><span class="line">       charset). Each occurrence of &#x27;%&#x27; in &lt;template&gt;  gets  substituted  with</span><br><span class="line">       the  &lt;template-arg&gt;  specified  together  with  the  character. If your</span><br><span class="line">       strings are not similar at all, then use &#x27;%&#x27; as a  template  and  place</span><br><span class="line">       the  full  string  in  &lt;template-arg&gt;. A quoting mechanism was added to</span><br><span class="line">       make it possible to use a real &#x27;%&#x27;. The &#x27;\&#x27; character quotes  the  spe-</span><br><span class="line">       cial characters &#x27;\&#x27;, &#x27;%&#x27;, and &#x27;,&#x27;.</span><br><span class="line"></span><br><span class="line">       Here is an example:</span><br><span class="line"></span><br><span class="line">           termcap hp700 &#x27;XC=B\E(K%\E(B,\304[,\326\\\\,\334]&#x27;</span><br><span class="line"></span><br><span class="line">       This  tells  screen how to translate ISOlatin1 (charset &#x27;B&#x27;) upper case</span><br><span class="line">       umlaut characters on a hp700 terminal that has a german charset. &#x27;\304&#x27;</span><br><span class="line">       gets  translated  to  &#x27;\E(K[\E(B&#x27;  and so on.  Note that this line gets</span><br><span class="line">       parsed *three* times before the internal lookup table is built,  there-</span><br><span class="line">       fore a lot of quoting is needed to create a single &#x27;\&#x27;.</span><br><span class="line"></span><br><span class="line">       Another  extension  was  added  to  allow  more emulation: If a mapping</span><br><span class="line">       translates the unquoted &#x27;%&#x27; char, it will be sent to the terminal when-</span><br><span class="line">       ever screen switches to the corresponding &lt;designator&gt;. In this special</span><br><span class="line">       case the template is assumed to be just &#x27;%&#x27; because the charset  switch</span><br><span class="line">       sequence and the character mappings normally haven&#x27;t much in common.</span><br><span class="line"></span><br><span class="line">       This example shows one use of the extension:</span><br><span class="line"></span><br><span class="line">           termcap xterm &#x27;XC=K%,%\E(B,[\304,\\\\\326,]\334&#x27;</span><br><span class="line"></span><br><span class="line">       Here,  a  part of the german (&#x27;K&#x27;) charset is emulated on an xterm.  If</span><br><span class="line">       screen has to change to the &#x27;K&#x27; charset, &#x27;\E(B&#x27; will  be  sent  to  the</span><br><span class="line">       terminal,  i.e. the ASCII charset is used instead. The template is just</span><br><span class="line">       &#x27;%&#x27;, so the mapping is straightforward: &#x27;[&#x27; to &#x27;\304&#x27;, &#x27;\&#x27;  to  &#x27;\326&#x27;,</span><br><span class="line">       and &#x27;]&#x27; to &#x27;\334&#x27;.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ENVIRONMENT</span><br><span class="line">       COLUMNS        Number  of  columns  on  the terminal (overrides termcap</span><br><span class="line">                      entry).</span><br><span class="line">       HOME           Directory in which to look for .screenrc.</span><br><span class="line">       LINES          Number of  lines  on  the  terminal  (overrides  termcap</span><br><span class="line">                      entry).</span><br><span class="line">       LOCKPRG        Screen lock program.</span><br><span class="line">       NETHACKOPTIONS Turns on nethack option.</span><br><span class="line">       PATH           Used for locating programs to run.</span><br><span class="line">       SCREENCAP      For customizing a terminal&#x27;s TERMCAP value.</span><br><span class="line">       SCREENDIR      Alternate socket directory.</span><br><span class="line">       SCREENRC       Alternate user screenrc file.</span><br><span class="line">       SHELL          Default  shell  program  for  opening  windows  (default</span><br><span class="line">                      &quot;/bin/sh&quot;).</span><br><span class="line">       STY            Alternate socket name.</span><br><span class="line">       SYSSCREENRC    Alternate system screenrc file.</span><br><span class="line">       TERM           Terminal name.</span><br><span class="line">       TERMCAP        Terminal description.</span><br><span class="line">       WINDOW         Window number of a window (at creation time).</span><br><span class="line"></span><br><span class="line">FILES</span><br><span class="line">       .../screen-4.?.??/etc/screenrc</span><br><span class="line">       .../screen-4.?.??/etc/etcscreenrc Examples in the  screen  distribution</span><br><span class="line">                                         package  for  private and global ini-</span><br><span class="line">                                         tialization files.</span><br><span class="line">       $SYSSCREENRC</span><br><span class="line">       /usr/local/etc/screenrc           screen initialization commands</span><br><span class="line">       $SCREENRC</span><br><span class="line">       $HOME/.screenrc                   Read in after /usr/local/etc/screenrc</span><br><span class="line">       $SCREENDIR/S-&lt;login&gt;</span><br><span class="line">       /local/screens/S-&lt;login&gt;          Socket directories (default)</span><br><span class="line">       /usr/tmp/screens/S-&lt;login&gt;        Alternate socket directories.</span><br><span class="line">       &lt;socket directory&gt;/.termcap       Written by the &quot;termcap&quot; output func-</span><br><span class="line">                                         tion</span><br><span class="line">       /usr/tmp/screens/screen-exchange  or</span><br><span class="line">       /tmp/screen-exchange              screen  `interprocess   communication</span><br><span class="line">                                         buffer&#x27;</span><br><span class="line">       hardcopy.[0-9]                    Screen images created by the hardcopy</span><br><span class="line">                                         function</span><br><span class="line">       screenlog.[0-9]                   Output log files created by  the  log</span><br><span class="line">                                         function</span><br><span class="line">       /usr/lib/terminfo/?/*             or</span><br><span class="line">       /etc/termcap                      Terminal capability databases</span><br><span class="line">       /etc/utmp                         Login records</span><br><span class="line">       $LOCKPRG                          Program that locks a terminal.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SEE ALSO</span><br><span class="line">       termcap(5), utmp(5), vi(1), captoinfo(1), tic(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTHORS</span><br><span class="line">       Originally  created by Oliver Laumann, this latest version was produced</span><br><span class="line">       by Wayne Davison, Juergen Weigert and Michael Schroeder.</span><br><span class="line"></span><br><span class="line">COPYLEFT</span><br><span class="line">       Copyright (C) 1993-2003</span><br><span class="line">            Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)</span><br><span class="line">            Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)</span><br><span class="line">       Copyright (C) 1987 Oliver Laumann</span><br><span class="line">       This program is free software; you can redistribute it and/or modify it</span><br><span class="line">       under  the  terms of the GNU General Public License as published by the</span><br><span class="line">       Free Software Foundation; either version 2, or  (at  your  option)  any</span><br><span class="line">       later version.</span><br><span class="line">       This  program  is  distributed  in the hope that it will be useful, but</span><br><span class="line">       WITHOUT ANY  WARRANTY;  without  even  the  implied  warranty  of  MER-</span><br><span class="line">       CHANTABILITY  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General</span><br><span class="line">       Public License for more details.</span><br><span class="line">       You should have received a copy of the GNU General Public License along</span><br><span class="line">       with  this  program  (see  the file COPYING); if not, write to the Free</span><br><span class="line">       Software Foundation, Inc., 59 Temple Place  -  Suite  330,  Boston,  MA</span><br><span class="line">       02111-1307, USA</span><br><span class="line"></span><br><span class="line">CONTRIBUTORS</span><br><span class="line">       Ken Beal (kbeal@amber.ssd.csd.harris.com),</span><br><span class="line">       Rudolf Koenig (rfkoenig@immd4.informatik.uni-erlangen.de),</span><br><span class="line">       Toerless Eckert (eckert@immd4.informatik.uni-erlangen.de),</span><br><span class="line">       Wayne Davison (davison@borland.com),</span><br><span class="line">       Patrick Wolfe (pat@kai.com, kailand!pat),</span><br><span class="line">       Bart Schaefer (schaefer@cse.ogi.edu),</span><br><span class="line">       Nathan Glasser (nathan@brokaw.lcs.mit.edu),</span><br><span class="line">       Larry W. Virden (lvirden@cas.org),</span><br><span class="line">       Howard Chu (hyc@hanauma.jpl.nasa.gov),</span><br><span class="line">       Tim MacKenzie (tym@dibbler.cs.monash.edu.au),</span><br><span class="line">       Markku Jarvinen (mta@&#123;cc,cs,ee&#125;.tut.fi),</span><br><span class="line">       Marc Boucher (marc@CAM.ORG),</span><br><span class="line">       Doug Siebert (dsiebert@isca.uiowa.edu),</span><br><span class="line">       Ken Stillson (stillson@tsfsrv.mitre.org),</span><br><span class="line">       Ian Frechett (frechett@spot.Colorado.EDU),</span><br><span class="line">       Brian Koehmstedt (bpk@gnu.ai.mit.edu),</span><br><span class="line">       Don Smith (djs6015@ultb.isc.rit.edu),</span><br><span class="line">       Frank van der Linden (vdlinden@fwi.uva.nl),</span><br><span class="line">       Martin Schweikert (schweik@cpp.ob.open.de),</span><br><span class="line">       David Vrona (dave@sashimi.lcu.com),</span><br><span class="line">       E. Tye McQueen (tye%spillman.UUCP@uunet.uu.net),</span><br><span class="line">       Matthew Green (mrg@eterna.com.au),</span><br><span class="line">       Christopher Williams (cgw@pobox.com),</span><br><span class="line">       Matt Mosley (mattm@access.digex.net),</span><br><span class="line">       Gregory Neil Shapiro (gshapiro@wpi.WPI.EDU),</span><br><span class="line">       Johannes Zellner (johannes@zellner.org),</span><br><span class="line">       Pablo Averbuj (pablo@averbuj.com).</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VERSION</span><br><span class="line">       This is version 4.0.2. Its roots are a merge of a custom version 2.3PR7</span><br><span class="line">       by Wayne Davison and several enhancements to Oliver  Laumann&#x27;s  version</span><br><span class="line">       2.0.  Note  that all versions numbered 2.x are copyright by Oliver Lau-</span><br><span class="line">       mann.</span><br><span class="line"></span><br><span class="line">AVAILABILITY</span><br><span class="line">       The latest official release of screen available via anonymous ftp  from</span><br><span class="line">       gnudist.gnu.org,  nic.funet.fi  or any other GNU distribution site. The</span><br><span class="line">       home site of screen is ftp.uni-erlangen.de, in the directory pub/utili-</span><br><span class="line">       ties/screen.  The subdirectory `private&#x27; contains the latest beta test-</span><br><span class="line">       ing release. If you want to help,  send  a  note  to  screen@uni-erlan-</span><br><span class="line">       gen.de.</span><br><span class="line"></span><br><span class="line">BUGS</span><br><span class="line">       o  `dm&#x27;  (delete  mode)  and  `xs&#x27;  are not handled correctly (they are</span><br><span class="line">          ignored). `xn&#x27; is treated as a magic-margin indicator.</span><br><span class="line"></span><br><span class="line">       o  Screen has no clue about double-high or double-wide characters.  But</span><br><span class="line">          this is the only area where vttest is allowed to fail.</span><br><span class="line"></span><br><span class="line">       o  It  is not possible to change the environment variable $TERMCAP when</span><br><span class="line">          reattaching under a different terminal type.</span><br><span class="line"></span><br><span class="line">       o  The support of terminfo based systems is very limited. Adding  extra</span><br><span class="line">          capabilities to $TERMCAP may not have any effects.</span><br><span class="line"></span><br><span class="line">       o  Screen does not make use of hardware tabs.</span><br><span class="line"></span><br><span class="line">       o  Screen  must be installed as set-uid with owner root on most systems</span><br><span class="line">          in order to be able to correctly change the owner of the tty  device</span><br><span class="line">          file  for  each  window.  Special permission may also be required to</span><br><span class="line">          write the file &quot;/etc/utmp&quot;.</span><br><span class="line"></span><br><span class="line">       o  Entries in &quot;/etc/utmp&quot; are not removed when screen  is  killed  with</span><br><span class="line">          SIGKILL.   This  will  cause  some  programs (like &quot;w&quot; or &quot;rwho&quot;) to</span><br><span class="line">          advertise that a user is logged on who really isn&#x27;t.</span><br><span class="line"></span><br><span class="line">       o  Screen may give a strange warning when your tty has no utmp entry.</span><br><span class="line"></span><br><span class="line">       o  When the modem line was hung up, screen may not automatically detach</span><br><span class="line">          (or  quit)  unless  the device driver is configured to send a HANGUP</span><br><span class="line">          signal.  To detach a screen session use the -D or  -d  command  line</span><br><span class="line">          option.</span><br><span class="line"></span><br><span class="line">       o  If  a  password  is  set,  the  command line options -d and -D still</span><br><span class="line">          detach a session without asking.</span><br><span class="line"></span><br><span class="line">       o  Both &quot;breaktype&quot; and  &quot;defbreaktype&quot;  change  the  break  generating</span><br><span class="line">          method  used by all terminal devices. The first should change a win-</span><br><span class="line">          dow specific setting,  where  the  latter  should  change  only  the</span><br><span class="line">          default for new windows.</span><br><span class="line"></span><br><span class="line">       o  When  attaching to a multiuser session, the user&#x27;s .screenrc file is</span><br><span class="line">          not sourced. Each user&#x27;s personal settings have to  be  included  in</span><br><span class="line">          the  .screenrc  file from which the session is booted, or have to be</span><br><span class="line">          changed manually.</span><br><span class="line"></span><br><span class="line">       o  A weird imagination is most useful to gain full advantage of all the</span><br><span class="line">          features.</span><br><span class="line"></span><br><span class="line">       o  Send bug-reports, fixes, enhancements, t-shirts, money, beer &amp; pizza</span><br><span class="line">          to screen@uni-erlangen.de.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4th Berkeley Distribution          Aug 2003                          SCREEN(1)</span><br><span class="line">skd@mdm ~ % open screen.md </span><br><span class="line">skd@mdm ~ % clear</span><br><span class="line"></span><br><span class="line">skd@mdm ~ % man  screen            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          programs (like &quot;w&quot; or &quot;rwho&quot;) to advertise that a user is logged on who really isn&#x27;t.</span><br><span class="line"></span><br><span class="line">       o  Screen may give a strange warning when your tty has no utmp entry.</span><br><span class="line"></span><br><span class="line">       o  When the modem line was hung up, screen may not automatically detach (or  quit)  unless  the  device</span><br><span class="line">          driver  is  configured to send a HANGUP signal.  To detach a screen session use the -D or -d command</span><br><span class="line">          line option.</span><br><span class="line"></span><br><span class="line">       o  If a password is set, the command line options -d and -D still detach a session without asking.</span><br><span class="line"></span><br><span class="line">       o  Both &quot;breaktype&quot; and &quot;defbreaktype&quot; change the break generating method used by all terminal devices.</span><br><span class="line">          The  first  should change a window specific setting, where the latter should change only the default</span><br><span class="line">          for new windows.</span><br><span class="line"></span><br><span class="line">       o  When attaching to a multiuser session, the user&#x27;s .screenrc file is not sourced.  Each  user&#x27;s  per-</span><br><span class="line">          sonal  settings  have to be included in the .screenrc file from which the session is booted, or have</span><br><span class="line">          to be changed manually.</span><br><span class="line"></span><br><span class="line">       o  A weird imagination is most useful to gain full advantage of all the features.</span><br><span class="line"></span><br><span class="line">       o  Send bug-reports, fixes, enhancements, t-shirts, money, beer &amp; pizza to screen@uni-erlangen.de.</span><br><span class="line"></span><br><span class="line">4th Berkeley Distribution                          Aug 2003                                          SCREEN(1)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Mac终端Screen命令使用指南</title>
    <url>/2016/03/22/system-darwin-screen/</url>
    <content><![CDATA[<h2 id="连接usb"><a href="#连接usb" class="headerlink" title="连接usb"></a>连接usb</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">screen /dev/tty.usbserial-[你的usb-id] 115200(频率)</span><br></pre></td></tr></table></figure>
<h2 id="操作screen"><a href="#操作screen" class="headerlink" title="操作screen"></a>操作screen</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+a -&gt; ESC</span><br><span class="line"># 上下翻页</span><br><span class="line">ctrl + b/f</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="挂起screen"><a href="#挂起screen" class="headerlink" title="挂起screen"></a>挂起screen</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+a -&gt; d</span><br></pre></td></tr></table></figure>
<h2 id="查看所有screen"><a href="#查看所有screen" class="headerlink" title="查看所有screen"></a>查看所有screen</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen -ls</span><br><span class="line"></span><br><span class="line">#out</span><br><span class="line">There is a screen on:</span><br><span class="line">  865.ttys000.skd	(Attached)</span><br><span class="line">1 Socket in /var/folders/qg/bmhgb4b52zbd4k126rbmlblc0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line"># 865 就是  sessionID</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="重新连接"><a href="#重新连接" class="headerlink" title="重新连接"></a>重新连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen -r + 865(sessionID)</span><br></pre></td></tr></table></figure>
<h2 id="完全关闭"><a href="#完全关闭" class="headerlink" title="完全关闭"></a>完全关闭</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+a -&gt; k</span><br></pre></td></tr></table></figure>


<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="./manScreen.md">man screen</a></li>
<li><ul>
<li><a href="./manScreen.zh.md">man screen zh</a></li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>MacOS Open tftp service</title>
    <url>/2021/07/13/system-darwin-tftp/</url>
    <content><![CDATA[<p>##开启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /System/Library/LaunchDaemons/tftp.plist</span><br><span class="line"># dd掉两行 </span><br><span class="line">&lt;key&gt;Disabled&lt;/key&gt; 和 &lt;true/&gt;</span><br><span class="line"># 添加两行(-i 开启不安全模式 -l 记录所有log) </span><br><span class="line">&lt;string&gt;-i&lt;/string&gt; </span><br><span class="line">&lt;string&gt;-l&lt;/string&gt; </span><br><span class="line"></span><br><span class="line"># 加载 </span><br><span class="line">launchctl load -F /System/Library/LaunchDaemons/tftp.plist</span><br><span class="line"># 开启</span><br><span class="line">sudo launchctl start com.apple.tftpd</span><br><span class="line"></span><br><span class="line"># tail -f /var/log/system.log</span><br><span class="line"></span><br><span class="line">### chmod 777</span><br><span class="line">sudo chmod 777  /private/tftpboot</span><br><span class="line"></span><br><span class="line"># MacOS12 /System/Library/LaunchDaemons/</span><br><span class="line">mkdir ~/Library/LaunchDaemons/</span><br><span class="line"></span><br><span class="line">cp /System/Library/LaunchDaemons/tftp.plist ~/Library/LaunchDaemons/tftp.plist</span><br><span class="line"></span><br><span class="line">sudo launchctl start ~/Library/LaunchDaemons/tftp.plist</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">launchdctl unload -F /System/Library/LaunchDaemons/tftp.plist </span><br></pre></td></tr></table></figure>

<h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><p><em><strong>注意跟ftp不同,没有ls命令,无法显示所有文件</strong></em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Commands may be abbreviated.  Commands are:</span><br><span class="line"></span><br><span class="line">connect   connect to remote tftp</span><br><span class="line">mode      set file transfer mode</span><br><span class="line">put       send file</span><br><span class="line">get       receive file</span><br><span class="line">quit      exit tftp</span><br><span class="line">verbose   toggle verbose mode</span><br><span class="line">blksize   set an alternative blocksize (def. 512)</span><br><span class="line">tsize     toggle extended tsize option</span><br><span class="line">trace     toggle packet tracing</span><br><span class="line">status    show current status</span><br><span class="line">binary    set mode to octet</span><br><span class="line">ascii     set mode to netascii</span><br><span class="line">rexmt     set per-packet retransmission timeout</span><br><span class="line">timeout   set total retransmission timeout</span><br><span class="line">tout      toggle extended timeout option</span><br><span class="line">?         print help information</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>修复MBP屏幕胶条老化</title>
    <url>/2019/10/01/system-darwin-%E4%BF%AE%E5%A4%8D%E5%B1%8F%E5%B9%95%E8%83%B6%E6%9D%A1%E8%80%81%E5%8C%96/</url>
    <content><![CDATA[<p>苹果笔记本电脑 15寸 MacBook pro A1398胶条 边框黑橡皮圈胶圈</p>
<h3 id="需要工具"><a href="#需要工具" class="headerlink" title="需要工具"></a>需要工具</h3><ul>
<li>1.2 五角螺丝刀(外壳)</li>
<li>T5 六角螺丝刀(屏幕卡扣)</li>
<li>T8 六角螺丝刀(屏幕连接轴)</li>
</ul>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><p>拆解视频购买时候商家有送</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>屏幕排线插拔保险扣扣掉后,一定要用镊子把两边翘起来,不要直接拔 比较容易损坏</p>
<p>###参考</p>
<ul>
<li>[胶圈购买地址] (<a href="https://item.taobao.com/item.htm?id=593680942248">https://item.taobao.com/item.htm?id=593680942248</a>)</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>web小计 css</title>
    <url>/2018/11/23/programming-language-and-tools-web-css-calc/</url>
    <content><![CDATA[<p>calc 支持 + - * &#x2F;  ()</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 使用autofix</span><br><span class="line">// -moz-calc</span><br><span class="line">// -webkit-calc</span><br><span class="line"><span class="attribute">width</span> :<span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">60px</span>);</span><br><span class="line">// 注意IE对calc格式要求严格</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>webpack4 2 webpack5</title>
    <url>/2020/10/11/programming-language-and-tools-web-js-webpack4-2-5/</url>
    <content><![CDATA[<h1 id="webpack4-2-webpack5"><a href="#webpack4-2-webpack5" class="headerlink" title="webpack4 2 webpack5"></a>webpack4 2 webpack5</h1><ul>
<li>新增 <a href="#%E6%A8%A1%E5%9D%97%E8%81%94%E9%82%A6">模块联邦</a>功能</li>
<li></li>
</ul>
<h2 id="模块联邦"><a href="#模块联邦" class="headerlink" title="模块联邦"></a>模块联邦</h2><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://webpack.docschina.org/concepts/module-federation/">模块联邦</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>jweixin</title>
    <url>/2021/05/16/programming-language-and-tools-web-wechat-WeixinJSBridge/</url>
    <content><![CDATA[<p>###源码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#version <span class="number">1.6</span><span class="number">.0</span></span><br><span class="line">! <span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">    <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> define &amp;&amp; (define.<span class="property">amd</span> || define.<span class="property">cmd</span>) ? <span class="title function_">define</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">n</span>(e)</span><br><span class="line">    &#125;) : <span class="title function_">n</span>(e, !<span class="number">0</span>)</span><br><span class="line">&#125;(<span class="variable language_">this</span>, <span class="keyword">function</span> (<span class="params">o, e</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!o.<span class="property">jWeixin</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, c = &#123;</span><br><span class="line">                <span class="attr">config</span>: <span class="string">&quot;preVerifyJSAPI&quot;</span>,</span><br><span class="line">                <span class="attr">onMenuShareTimeline</span>: <span class="string">&quot;menu:share:timeline&quot;</span>,</span><br><span class="line">                <span class="attr">onMenuShareAppMessage</span>: <span class="string">&quot;menu:share:appmessage&quot;</span>,</span><br><span class="line">                <span class="attr">onMenuShareQQ</span>: <span class="string">&quot;menu:share:qq&quot;</span>,</span><br><span class="line">                <span class="attr">onMenuShareWeibo</span>: <span class="string">&quot;menu:share:weiboApp&quot;</span>,</span><br><span class="line">                <span class="attr">onMenuShareQZone</span>: <span class="string">&quot;menu:share:QZone&quot;</span>,</span><br><span class="line">                <span class="attr">previewImage</span>: <span class="string">&quot;imagePreview&quot;</span>,</span><br><span class="line">                <span class="attr">getLocation</span>: <span class="string">&quot;geoLocation&quot;</span>,</span><br><span class="line">                <span class="attr">openProductSpecificView</span>: <span class="string">&quot;openProductViewWithPid&quot;</span>,</span><br><span class="line">                <span class="attr">addCard</span>: <span class="string">&quot;batchAddCard&quot;</span>,</span><br><span class="line">                <span class="attr">openCard</span>: <span class="string">&quot;batchViewCard&quot;</span>,</span><br><span class="line">                <span class="attr">chooseWXPay</span>: <span class="string">&quot;getBrandWCPayRequest&quot;</span>,</span><br><span class="line">                <span class="attr">openEnterpriseRedPacket</span>: <span class="string">&quot;getRecevieBizHongBaoRequest&quot;</span>,</span><br><span class="line">                <span class="attr">startSearchBeacons</span>: <span class="string">&quot;startMonitoringBeacons&quot;</span>,</span><br><span class="line">                <span class="attr">stopSearchBeacons</span>: <span class="string">&quot;stopMonitoringBeacons&quot;</span>,</span><br><span class="line">                <span class="attr">onSearchBeacons</span>: <span class="string">&quot;onBeaconsInRange&quot;</span>,</span><br><span class="line">                <span class="attr">consumeAndShareCard</span>: <span class="string">&quot;consumedShareCard&quot;</span>,</span><br><span class="line">                <span class="attr">openAddress</span>: <span class="string">&quot;editAddress&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            a = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> e = &#123;&#125;;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> n <span class="keyword">in</span> c) e[c[n]] = n;</span><br><span class="line">                <span class="keyword">return</span> e</span><br><span class="line">            &#125;(),</span><br><span class="line">            i = o.<span class="property">document</span>,</span><br><span class="line">            t = i.<span class="property">title</span>,</span><br><span class="line">            r = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>(),</span><br><span class="line">            s = navigator.<span class="property">platform</span>.<span class="title function_">toLowerCase</span>(),</span><br><span class="line">            d = !(!s.<span class="title function_">match</span>(<span class="string">&quot;mac&quot;</span>) &amp;&amp; !s.<span class="title function_">match</span>(<span class="string">&quot;win&quot;</span>)),</span><br><span class="line">            u = -<span class="number">1</span> != r.<span class="title function_">indexOf</span>(<span class="string">&quot;wxdebugger&quot;</span>),</span><br><span class="line">            l = -<span class="number">1</span> != r.<span class="title function_">indexOf</span>(<span class="string">&quot;micromessenger&quot;</span>),</span><br><span class="line">            p = -<span class="number">1</span> != r.<span class="title function_">indexOf</span>(<span class="string">&quot;android&quot;</span>),</span><br><span class="line">            f = -<span class="number">1</span> != r.<span class="title function_">indexOf</span>(<span class="string">&quot;iphone&quot;</span>) || -<span class="number">1</span> != r.<span class="title function_">indexOf</span>(<span class="string">&quot;ipad&quot;</span>),</span><br><span class="line">            m = (n = r.<span class="title function_">match</span>(<span class="regexp">/micromessenger\/(\d+\.\d+\.\d+)/</span>) || r.<span class="title function_">match</span>(<span class="regexp">/micromessenger\/(\d+\.\d+)/</span>)) ? n[<span class="number">1</span>] :</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            g = &#123;</span><br><span class="line">                <span class="attr">initStartTime</span>: <span class="title function_">L</span>(),</span><br><span class="line">                <span class="attr">initEndTime</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">preVerifyStartTime</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">preVerifyEndTime</span>: <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            h = &#123;</span><br><span class="line">                <span class="attr">version</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">appId</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="attr">initTime</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">preVerifyTime</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">networkType</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="attr">isPreVerifyOk</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">systemType</span>: f ? <span class="number">1</span> : p ? <span class="number">2</span> : -<span class="number">1</span>,</span><br><span class="line">                <span class="attr">clientVersion</span>: m,</span><br><span class="line">                <span class="attr">url</span>: <span class="built_in">encodeURIComponent</span>(location.<span class="property">href</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            v = &#123;&#125;,</span><br><span class="line">            S = &#123;</span><br><span class="line">                <span class="attr">_completes</span>: []</span><br><span class="line">            &#125;,</span><br><span class="line">            y = &#123;</span><br><span class="line">                <span class="attr">state</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">data</span>: &#123;&#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            g.<span class="property">initEndTime</span> = <span class="title function_">L</span>()</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> I = !<span class="number">1</span>,</span><br><span class="line">            _ = [],</span><br><span class="line">            w = &#123;</span><br><span class="line">                <span class="attr">config</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">B</span>(<span class="string">&quot;config&quot;</span>, v = e);</span><br><span class="line">                    <span class="keyword">var</span> t = !<span class="number">1</span> !== v.<span class="property">check</span>;</span><br><span class="line">                    <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (t) <span class="title function_">M</span>(c.<span class="property">config</span>, &#123;</span><br><span class="line">                            <span class="attr">verifyJsApiList</span>: <span class="title function_">C</span>(v.<span class="property">jsApiList</span>),</span><br><span class="line">                            <span class="attr">verifyOpenTagList</span>: <span class="title function_">C</span>(v.<span class="property">openTagList</span>)</span><br><span class="line">                        &#125;, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            S.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                g.<span class="property">preVerifyEndTime</span> = <span class="title function_">L</span>(), y.<span class="property">state</span> = <span class="number">1</span>, y.<span class="property">data</span> = e</span><br><span class="line">                            &#125;, S.<span class="property">success</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                h.<span class="property">isPreVerifyOk</span> = <span class="number">0</span></span><br><span class="line">                            &#125;, S.<span class="property">fail</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                S.<span class="property">_fail</span> ? S.<span class="title function_">_fail</span>(e) : y.<span class="property">state</span> = -<span class="number">1</span></span><br><span class="line">                            &#125;;</span><br><span class="line">                            <span class="keyword">var</span> t = S.<span class="property">_completes</span>;</span><br><span class="line">                            <span class="keyword">return</span> t.<span class="title function_">push</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                ! <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (!(d || u || v.<span class="property">debug</span> || m &lt; <span class="string">&quot;6.0.2&quot;</span> || h.<span class="property">systemType</span> &lt;</span><br><span class="line">                                            <span class="number">0</span>)) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="title class_">Image</span>;</span><br><span class="line">                                        h.<span class="property">appId</span> = v.<span class="property">appId</span>, h.<span class="property">initTime</span> = g.<span class="property">initEndTime</span> -</span><br><span class="line">                                            g.<span class="property">initStartTime</span>, h.<span class="property">preVerifyTime</span> = g.<span class="property">preVerifyEndTime</span> -</span><br><span class="line">                                            g.<span class="property">preVerifyStartTime</span>, w.<span class="title function_">getNetworkType</span>(&#123;</span><br><span class="line">                                                <span class="attr">isInnerInvoke</span>: !<span class="number">0</span>,</span><br><span class="line">                                                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                                    h.<span class="property">networkType</span> = e.<span class="property">networkType</span>;</span><br><span class="line">                                                    <span class="keyword">var</span> n =</span><br><span class="line">                                                        <span class="string">&quot;https://open.weixin.qq.com/sdk/report?v=&quot;</span> +</span><br><span class="line">                                                        h.<span class="property">version</span> + <span class="string">&quot;&amp;o=&quot;</span> + h.<span class="property">isPreVerifyOk</span> +</span><br><span class="line">                                                        <span class="string">&quot;&amp;s=&quot;</span> + h.<span class="property">systemType</span> +</span><br><span class="line">                                                        <span class="string">&quot;&amp;c=&quot;</span> + h.<span class="property">clientVersion</span> +</span><br><span class="line">                                                        <span class="string">&quot;&amp;a=&quot;</span> + h.<span class="property">appId</span> + <span class="string">&quot;&amp;n=&quot;</span> +</span><br><span class="line">                                                        h.<span class="property">networkType</span> + <span class="string">&quot;&amp;i=&quot;</span> +</span><br><span class="line">                                                        h.<span class="property">initTime</span> + <span class="string">&quot;&amp;p=&quot;</span> + h.<span class="property">preVerifyTime</span> +</span><br><span class="line">                                                        <span class="string">&quot;&amp;u=&quot;</span> + h.<span class="property">url</span>;</span><br><span class="line">                                                    i.<span class="property">src</span> = n</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            &#125;)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;()</span><br><span class="line">                            &#125;), S.<span class="property">complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>, i = t.<span class="property">length</span>; n &lt; i; ++n) t[n]();</span><br><span class="line">                                S.<span class="property">_completes</span> = []</span><br><span class="line">                            &#125;, S</span><br><span class="line">                        &#125;()), g.<span class="property">preVerifyStartTime</span> = <span class="title function_">L</span>();</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            y.<span class="property">state</span> = <span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> e = S.<span class="property">_completes</span>, n = <span class="number">0</span>, i = e.<span class="property">length</span>; n &lt; i; ++n) e[n]();</span><br><span class="line">                            S.<span class="property">_completes</span> = []</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;), w.<span class="property">invoke</span> || (w.<span class="property">invoke</span> = <span class="keyword">function</span> (<span class="params">e, n, i</span>) &#123;</span><br><span class="line">                        o.<span class="property">WeixinJSBridge</span> &amp;&amp; <span class="title class_">WeixinJSBridge</span>.<span class="title function_">invoke</span>(e, <span class="title function_">x</span>(n), i)</span><br><span class="line">                    &#125;, w.<span class="property">on</span> = <span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">                        o.<span class="property">WeixinJSBridge</span> &amp;&amp; <span class="title class_">WeixinJSBridge</span>.<span class="title function_">on</span>(e, n)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">ready</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="number">0</span> != y.<span class="property">state</span> ? <span class="title function_">e</span>() : (S.<span class="property">_completes</span>.<span class="title function_">push</span>(e), !l &amp;&amp; v.<span class="property">debug</span> &amp;&amp; <span class="title function_">e</span>())</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    m &lt; <span class="string">&quot;6.0.2&quot;</span> || (-<span class="number">1</span> == y.<span class="property">state</span> ? <span class="title function_">e</span>(y.<span class="property">data</span>) : S.<span class="property">_fail</span> = e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">checkJsApi</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;checkJsApi&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">jsApiList</span>: <span class="title function_">C</span>(e.<span class="property">jsApiList</span>)</span><br><span class="line">                    &#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (p) &#123;</span><br><span class="line">                            <span class="keyword">var</span> n = e.<span class="property">checkResult</span>;</span><br><span class="line">                            n &amp;&amp; (e.<span class="property">checkResult</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(n))</span><br><span class="line">                        &#125;</span><br><span class="line">                        e = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> n = e.<span class="property">checkResult</span>;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> n) &#123;</span><br><span class="line">                                <span class="keyword">var</span> t = a[i];</span><br><span class="line">                                t &amp;&amp; (n[t] = n[i], <span class="keyword">delete</span> n[i])</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span> e</span><br><span class="line">                        &#125;(e)</span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">onMenuShareTimeline</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">P</span>(c.<span class="property">onMenuShareTimeline</span>, &#123;</span><br><span class="line">                        <span class="attr">complete</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;shareTimeline&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">title</span>: e.<span class="property">title</span> || t,</span><br><span class="line">                                <span class="attr">desc</span>: e.<span class="property">title</span> || t,</span><br><span class="line">                                <span class="attr">img_url</span>: e.<span class="property">imgUrl</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">link</span>: e.<span class="property">link</span> || location.<span class="property">href</span>,</span><br><span class="line">                                <span class="attr">type</span>: e.<span class="property">type</span> || <span class="string">&quot;link&quot;</span>,</span><br><span class="line">                                <span class="attr">data_url</span>: e.<span class="property">dataUrl</span> || <span class="string">&quot;&quot;</span></span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">onMenuShareAppMessage</span>: <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                    <span class="title function_">P</span>(c.<span class="property">onMenuShareAppMessage</span>, &#123;</span><br><span class="line">                        <span class="attr">complete</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="string">&quot;favorite&quot;</span> === e.<span class="property">scene</span> ? <span class="title function_">M</span>(<span class="string">&quot;sendAppMessage&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">title</span>: n.<span class="property">title</span> || t,</span><br><span class="line">                                <span class="attr">desc</span>: n.<span class="property">desc</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">link</span>: n.<span class="property">link</span> || location.<span class="property">href</span>,</span><br><span class="line">                                <span class="attr">img_url</span>: n.<span class="property">imgUrl</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">type</span>: n.<span class="property">type</span> || <span class="string">&quot;link&quot;</span>,</span><br><span class="line">                                <span class="attr">data_url</span>: n.<span class="property">dataUrl</span> || <span class="string">&quot;&quot;</span></span><br><span class="line">                            &#125;) : <span class="title function_">M</span>(<span class="string">&quot;sendAppMessage&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">title</span>: n.<span class="property">title</span> || t,</span><br><span class="line">                                <span class="attr">desc</span>: n.<span class="property">desc</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">link</span>: n.<span class="property">link</span> || location.<span class="property">href</span>,</span><br><span class="line">                                <span class="attr">img_url</span>: n.<span class="property">imgUrl</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">type</span>: n.<span class="property">type</span> || <span class="string">&quot;link&quot;</span>,</span><br><span class="line">                                <span class="attr">data_url</span>: n.<span class="property">dataUrl</span> || <span class="string">&quot;&quot;</span></span><br><span class="line">                            &#125;, n)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, n)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">onMenuShareQQ</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">P</span>(c.<span class="property">onMenuShareQQ</span>, &#123;</span><br><span class="line">                        <span class="attr">complete</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;shareQQ&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">title</span>: e.<span class="property">title</span> || t,</span><br><span class="line">                                <span class="attr">desc</span>: e.<span class="property">desc</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">img_url</span>: e.<span class="property">imgUrl</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">link</span>: e.<span class="property">link</span> || location.<span class="property">href</span></span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">onMenuShareWeibo</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">P</span>(c.<span class="property">onMenuShareWeibo</span>, &#123;</span><br><span class="line">                        <span class="attr">complete</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;shareWeiboApp&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">title</span>: e.<span class="property">title</span> || t,</span><br><span class="line">                                <span class="attr">desc</span>: e.<span class="property">desc</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">img_url</span>: e.<span class="property">imgUrl</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">link</span>: e.<span class="property">link</span> || location.<span class="property">href</span></span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">onMenuShareQZone</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">P</span>(c.<span class="property">onMenuShareQZone</span>, &#123;</span><br><span class="line">                        <span class="attr">complete</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;shareQZone&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">title</span>: e.<span class="property">title</span> || t,</span><br><span class="line">                                <span class="attr">desc</span>: e.<span class="property">desc</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">img_url</span>: e.<span class="property">imgUrl</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">link</span>: e.<span class="property">link</span> || location.<span class="property">href</span></span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">updateTimelineShareData</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;updateTimelineShareData&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">title</span>: e.<span class="property">title</span>,</span><br><span class="line">                        <span class="attr">link</span>: e.<span class="property">link</span>,</span><br><span class="line">                        <span class="attr">imgUrl</span>: e.<span class="property">imgUrl</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">updateAppMessageShareData</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;updateAppMessageShareData&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">title</span>: e.<span class="property">title</span>,</span><br><span class="line">                        <span class="attr">desc</span>: e.<span class="property">desc</span>,</span><br><span class="line">                        <span class="attr">link</span>: e.<span class="property">link</span>,</span><br><span class="line">                        <span class="attr">imgUrl</span>: e.<span class="property">imgUrl</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">startRecord</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;startRecord&quot;</span>, &#123;&#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">stopRecord</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;stopRecord&quot;</span>, &#123;&#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">onVoiceRecordEnd</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">P</span>(<span class="string">&quot;onVoiceRecordEnd&quot;</span>, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">playVoice</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;playVoice&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">localId</span>: e.<span class="property">localId</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">pauseVoice</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;pauseVoice&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">localId</span>: e.<span class="property">localId</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">stopVoice</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;stopVoice&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">localId</span>: e.<span class="property">localId</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">onVoicePlayEnd</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">P</span>(<span class="string">&quot;onVoicePlayEnd&quot;</span>, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">uploadVoice</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;uploadVoice&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">localId</span>: e.<span class="property">localId</span>,</span><br><span class="line">                        <span class="attr">isShowProgressTips</span>: <span class="number">0</span> == e.<span class="property">isShowProgressTips</span> ? <span class="number">0</span> : <span class="number">1</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">downloadVoice</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;downloadVoice&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">serverId</span>: e.<span class="property">serverId</span>,</span><br><span class="line">                        <span class="attr">isShowProgressTips</span>: <span class="number">0</span> == e.<span class="property">isShowProgressTips</span> ? <span class="number">0</span> : <span class="number">1</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">translateVoice</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;translateVoice&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">localId</span>: e.<span class="property">localId</span>,</span><br><span class="line">                        <span class="attr">isShowProgressTips</span>: <span class="number">0</span> == e.<span class="property">isShowProgressTips</span> ? <span class="number">0</span> : <span class="number">1</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">chooseImage</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;chooseImage&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">scene</span>: <span class="string">&quot;1|2&quot;</span>,</span><br><span class="line">                        <span class="attr">count</span>: e.<span class="property">count</span> || <span class="number">9</span>,</span><br><span class="line">                        <span class="attr">sizeType</span>: e.<span class="property">sizeType</span> || [<span class="string">&quot;original&quot;</span>, <span class="string">&quot;compressed&quot;</span>],</span><br><span class="line">                        <span class="attr">sourceType</span>: e.<span class="property">sourceType</span> || [<span class="string">&quot;album&quot;</span>, <span class="string">&quot;camera&quot;</span>]</span><br><span class="line">                    &#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (p) &#123;</span><br><span class="line">                            <span class="keyword">var</span> n = e.<span class="property">localIds</span>;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                n &amp;&amp; (e.<span class="property">localIds</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(n))</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">getLocation</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;&#125;,</span><br><span class="line">                <span class="attr">previewImage</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">previewImage</span>, &#123;</span><br><span class="line">                        <span class="attr">current</span>: e.<span class="property">current</span>,</span><br><span class="line">                        <span class="attr">urls</span>: e.<span class="property">urls</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">uploadImage</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;uploadImage&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">localId</span>: e.<span class="property">localId</span>,</span><br><span class="line">                        <span class="attr">isShowProgressTips</span>: <span class="number">0</span> == e.<span class="property">isShowProgressTips</span> ? <span class="number">0</span> : <span class="number">1</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">downloadImage</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;downloadImage&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">serverId</span>: e.<span class="property">serverId</span>,</span><br><span class="line">                        <span class="attr">isShowProgressTips</span>: <span class="number">0</span> == e.<span class="property">isShowProgressTips</span> ? <span class="number">0</span> : <span class="number">1</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">getLocalImgData</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    !<span class="number">1</span> === I ? (I = !<span class="number">0</span>, <span class="title function_">M</span>(<span class="string">&quot;getLocalImgData&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">localId</span>: e.<span class="property">localId</span></span><br><span class="line">                    &#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (I = !<span class="number">1</span>, <span class="number">0</span> &lt; _.<span class="property">length</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> n = _.<span class="title function_">shift</span>();</span><br><span class="line">                            wx.<span class="title function_">getLocalImgData</span>(n)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e))) : _.<span class="title function_">push</span>(e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">getNetworkType</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;getNetworkType&quot;</span>, &#123;&#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        e = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> n = e.<span class="property">errMsg</span>;</span><br><span class="line">                            e.<span class="property">errMsg</span> = <span class="string">&quot;getNetworkType:ok&quot;</span>;</span><br><span class="line">                            <span class="keyword">var</span> i = e.<span class="property">subtype</span>;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="keyword">delete</span> e.<span class="property">subtype</span>, i) e.<span class="property">networkType</span> = i;</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">var</span> t = n.<span class="title function_">indexOf</span>(<span class="string">&quot;:&quot;</span>),</span><br><span class="line">                                    o = n.<span class="title function_">substring</span>(t + <span class="number">1</span>);</span><br><span class="line">                                <span class="keyword">switch</span> (o) &#123;</span><br><span class="line">                                    <span class="keyword">case</span> <span class="string">&quot;wifi&quot;</span>:</span><br><span class="line">                                    <span class="keyword">case</span> <span class="string">&quot;edge&quot;</span>:</span><br><span class="line">                                    <span class="keyword">case</span> <span class="string">&quot;wwan&quot;</span>:</span><br><span class="line">                                        e.<span class="property">networkType</span> = o;</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    <span class="attr">default</span>:</span><br><span class="line">                                        e.<span class="property">errMsg</span> = <span class="string">&quot;getNetworkType:fail&quot;</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span> e</span><br><span class="line">                        &#125;(e)</span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">openLocation</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;openLocation&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">latitude</span>: e.<span class="property">latitude</span>,</span><br><span class="line">                        <span class="attr">longitude</span>: e.<span class="property">longitude</span>,</span><br><span class="line">                        <span class="attr">name</span>: e.<span class="property">name</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="attr">address</span>: e.<span class="property">address</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="attr">scale</span>: e.<span class="property">scale</span> || <span class="number">28</span>,</span><br><span class="line">                        <span class="attr">infoUrl</span>: e.<span class="property">infoUrl</span> || <span class="string">&quot;&quot;</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">getLocation</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">getLocation</span>, &#123;</span><br><span class="line">                        <span class="attr">type</span>: (e = e || &#123;&#125;).<span class="property">type</span> || <span class="string">&quot;wgs84&quot;</span></span><br><span class="line">                    &#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="keyword">delete</span> e.<span class="property">type</span></span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">hideOptionMenu</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;hideOptionMenu&quot;</span>, &#123;&#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">showOptionMenu</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;showOptionMenu&quot;</span>, &#123;&#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">closeWindow</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;closeWindow&quot;</span>, &#123;&#125;, e = e || &#123;&#125;)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">hideMenuItems</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;hideMenuItems&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">menuList</span>: e.<span class="property">menuList</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">showMenuItems</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;showMenuItems&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">menuList</span>: e.<span class="property">menuList</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">hideAllNonBaseMenuItem</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;hideAllNonBaseMenuItem&quot;</span>, &#123;&#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">showAllNonBaseMenuItem</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;showAllNonBaseMenuItem&quot;</span>, &#123;&#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">scanQRCode</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;scanQRCode&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">needResult</span>: (e = e || &#123;&#125;).<span class="property">needResult</span> || <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">scanType</span>: e.<span class="property">scanType</span> || [<span class="string">&quot;qrCode&quot;</span>, <span class="string">&quot;barCode&quot;</span>]</span><br><span class="line">                    &#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (f) &#123;</span><br><span class="line">                            <span class="keyword">var</span> n = e.<span class="property">resultStr</span>;</span><br><span class="line">                            <span class="keyword">if</span> (n) &#123;</span><br><span class="line">                                <span class="keyword">var</span> i = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(n);</span><br><span class="line">                                e.<span class="property">resultStr</span> = i &amp;&amp; i.<span class="property">scan_code</span> &amp;&amp; i.<span class="property">scan_code</span>.<span class="property">scan_result</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">openAddress</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">openAddress</span>, &#123;&#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        e = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> e.<span class="property">postalCode</span> = e.<span class="property">addressPostalCode</span>, <span class="keyword">delete</span> e.<span class="property">addressPostalCode</span>,</span><br><span class="line">                                e.<span class="property">provinceName</span> = e.<span class="property">proviceFirstStageName</span>, <span class="keyword">delete</span> e.<span class="property">proviceFirstStageName</span>,</span><br><span class="line">                                e.<span class="property">cityName</span> = e.<span class="property">addressCitySecondStageName</span>, <span class="keyword">delete</span> e.<span class="property">addressCitySecondStageName</span>,</span><br><span class="line">                                e.<span class="property">countryName</span> = e.<span class="property">addressCountiesThirdStageName</span>, <span class="keyword">delete</span> e.<span class="property">addressCountiesThirdStageName</span>,</span><br><span class="line">                                e.<span class="property">detailInfo</span> = e.<span class="property">addressDetailInfo</span>, <span class="keyword">delete</span> e.<span class="property">addressDetailInfo</span>,</span><br><span class="line">                                e</span><br><span class="line">                        &#125;(e)</span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">openProductSpecificView</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">openProductSpecificView</span>, &#123;</span><br><span class="line">                        <span class="attr">pid</span>: e.<span class="property">productId</span>,</span><br><span class="line">                        <span class="attr">view_type</span>: e.<span class="property">viewType</span> || <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">ext_info</span>: e.<span class="property">extInfo</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">addCard</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> n = e.<span class="property">cardList</span>, i = [], t = <span class="number">0</span>, o = n.<span class="property">length</span>; t &lt; o; ++t) &#123;</span><br><span class="line">                        <span class="keyword">var</span> r = n[t],</span><br><span class="line">                            a = &#123;</span><br><span class="line">                                <span class="attr">card_id</span>: r.<span class="property">cardId</span>,</span><br><span class="line">                                <span class="attr">card_ext</span>: r.<span class="property">cardExt</span></span><br><span class="line">                            &#125;;</span><br><span class="line">                        i.<span class="title function_">push</span>(a)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">addCard</span>, &#123;</span><br><span class="line">                        <span class="attr">card_list</span>: i</span><br><span class="line">                    &#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> n = e.<span class="property">card_list</span>;</span><br><span class="line">                        <span class="keyword">if</span> (n) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, t = (n = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(n)).<span class="property">length</span>; i &lt; t; ++i) &#123;</span><br><span class="line">                                <span class="keyword">var</span> o = n[i];</span><br><span class="line">                                o.<span class="property">cardId</span> = o.<span class="property">card_id</span>, o.<span class="property">cardExt</span> = o.<span class="property">card_ext</span>, o.<span class="property">isSuccess</span> = !!o.<span class="property">is_succ</span>,</span><br><span class="line">                                    <span class="keyword">delete</span> o.<span class="property">card_id</span>, <span class="keyword">delete</span> o.<span class="property">card_ext</span>, <span class="keyword">delete</span> o.<span class="property">is_succ</span></span><br><span class="line">                            &#125;</span><br><span class="line">                            e.<span class="property">cardList</span> = n, <span class="keyword">delete</span> e.<span class="property">card_list</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">chooseCard</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;chooseCard&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">app_id</span>: v.<span class="property">appId</span>,</span><br><span class="line">                        <span class="attr">location_id</span>: e.<span class="property">shopId</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="attr">sign_type</span>: e.<span class="property">signType</span> || <span class="string">&quot;SHA1&quot;</span>,</span><br><span class="line">                        <span class="attr">card_id</span>: e.<span class="property">cardId</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="attr">card_type</span>: e.<span class="property">cardType</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="attr">card_sign</span>: e.<span class="property">cardSign</span>,</span><br><span class="line">                        <span class="attr">time_stamp</span>: e.<span class="property">timestamp</span> + <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="attr">nonce_str</span>: e.<span class="property">nonceStr</span></span><br><span class="line">                    &#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        e.<span class="property">cardList</span> = e.<span class="property">choose_card_info</span>, <span class="keyword">delete</span> e.<span class="property">choose_card_info</span></span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">openCard</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> n = e.<span class="property">cardList</span>, i = [], t = <span class="number">0</span>, o = n.<span class="property">length</span>; t &lt; o; ++t) &#123;</span><br><span class="line">                        <span class="keyword">var</span> r = n[t],</span><br><span class="line">                            a = &#123;</span><br><span class="line">                                <span class="attr">card_id</span>: r.<span class="property">cardId</span>,</span><br><span class="line">                                <span class="attr">code</span>: r.<span class="property">code</span></span><br><span class="line">                            &#125;;</span><br><span class="line">                        i.<span class="title function_">push</span>(a)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">openCard</span>, &#123;</span><br><span class="line">                        <span class="attr">card_list</span>: i</span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">consumeAndShareCard</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">consumeAndShareCard</span>, &#123;</span><br><span class="line">                        <span class="attr">consumedCardId</span>: e.<span class="property">cardId</span>,</span><br><span class="line">                        <span class="attr">consumedCode</span>: e.<span class="property">code</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">chooseWXPay</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">chooseWXPay</span>, <span class="title function_">V</span>(e), e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">openEnterpriseRedPacket</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">openEnterpriseRedPacket</span>, <span class="title function_">V</span>(e), e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">startSearchBeacons</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">startSearchBeacons</span>, &#123;</span><br><span class="line">                        <span class="attr">ticket</span>: e.<span class="property">ticket</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">stopSearchBeacons</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(c.<span class="property">stopSearchBeacons</span>, &#123;&#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">onSearchBeacons</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">P</span>(c.<span class="property">onSearchBeacons</span>, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">openEnterpriseChat</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;openEnterpriseChat&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">useridlist</span>: e.<span class="property">userIds</span>,</span><br><span class="line">                        <span class="attr">chatname</span>: e.<span class="property">groupName</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">launchMiniProgram</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;launchMiniProgram&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">targetAppId</span>: e.<span class="property">targetAppId</span>,</span><br><span class="line">                        <span class="attr">path</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; <span class="number">0</span> &lt; e.<span class="property">length</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = e.<span class="title function_">split</span>(<span class="string">&quot;?&quot;</span>)[<span class="number">0</span>],</span><br><span class="line">                                    i = e.<span class="title function_">split</span>(<span class="string">&quot;?&quot;</span>)[<span class="number">1</span>];</span><br><span class="line">                                <span class="keyword">return</span> n += <span class="string">&quot;.html&quot;</span>, <span class="keyword">void</span> <span class="number">0</span> !== i ? n + <span class="string">&quot;?&quot;</span> + i : n</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;(e.<span class="property">path</span>),</span><br><span class="line">                        <span class="attr">envVersion</span>: e.<span class="property">envVersion</span></span><br><span class="line">                    &#125;, e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">openBusinessView</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="title function_">M</span>(<span class="string">&quot;openBusinessView&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">businessType</span>: e.<span class="property">businessType</span>,</span><br><span class="line">                        <span class="attr">queryString</span>: e.<span class="property">queryString</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        <span class="attr">envVersion</span>: e.<span class="property">envVersion</span></span><br><span class="line">                    &#125;, (e.<span class="property">_complete</span> = <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (p) &#123;</span><br><span class="line">                            <span class="keyword">var</span> e = n.<span class="property">extraData</span>;</span><br><span class="line">                            <span class="keyword">if</span> (e) <span class="keyword">try</span> &#123;</span><br><span class="line">                                n.<span class="property">extraData</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(e)</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                                n.<span class="property">extraData</span> = &#123;&#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, e))</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">miniProgram</span>: &#123;</span><br><span class="line">                    <span class="attr">navigateBack</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        e = e || &#123;&#125;, <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;invokeMiniProgramAPI&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">name</span>: <span class="string">&quot;navigateBack&quot;</span>,</span><br><span class="line">                                <span class="attr">arg</span>: &#123;</span><br><span class="line">                                    <span class="attr">delta</span>: e.<span class="property">delta</span> || <span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">navigateTo</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;invokeMiniProgramAPI&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">name</span>: <span class="string">&quot;navigateTo&quot;</span>,</span><br><span class="line">                                <span class="attr">arg</span>: &#123;</span><br><span class="line">                                    <span class="attr">url</span>: e.<span class="property">url</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">redirectTo</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;invokeMiniProgramAPI&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">name</span>: <span class="string">&quot;redirectTo&quot;</span>,</span><br><span class="line">                                <span class="attr">arg</span>: &#123;</span><br><span class="line">                                    <span class="attr">url</span>: e.<span class="property">url</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">switchTab</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;invokeMiniProgramAPI&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">name</span>: <span class="string">&quot;switchTab&quot;</span>,</span><br><span class="line">                                <span class="attr">arg</span>: &#123;</span><br><span class="line">                                    <span class="attr">url</span>: e.<span class="property">url</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">reLaunch</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;invokeMiniProgramAPI&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">name</span>: <span class="string">&quot;reLaunch&quot;</span>,</span><br><span class="line">                                <span class="attr">arg</span>: &#123;</span><br><span class="line">                                    <span class="attr">url</span>: e.<span class="property">url</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">postMessage</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">M</span>(<span class="string">&quot;invokeMiniProgramAPI&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">name</span>: <span class="string">&quot;postMessage&quot;</span>,</span><br><span class="line">                                <span class="attr">arg</span>: e.<span class="property">data</span> || &#123;&#125;</span><br><span class="line">                            &#125;, e)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">getEnv</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="title function_">O</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="title function_">e</span>(&#123;</span><br><span class="line">                                <span class="attr">miniprogram</span>: <span class="string">&quot;miniprogram&quot;</span> === o.<span class="property">__wxjs_environment</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            T = <span class="number">1</span>,</span><br><span class="line">            k = &#123;&#125;;</span><br><span class="line">        <span class="keyword">return</span> i.<span class="title function_">addEventListener</span>(<span class="string">&quot;error&quot;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!p) &#123;</span><br><span class="line">                <span class="keyword">var</span> n = e.<span class="property">target</span>,</span><br><span class="line">                    i = n.<span class="property">tagName</span>,</span><br><span class="line">                    t = n.<span class="property">src</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;IMG&quot;</span> == i || <span class="string">&quot;VIDEO&quot;</span> == i || <span class="string">&quot;AUDIO&quot;</span> == i || <span class="string">&quot;SOURCE&quot;</span> == i)</span><br><span class="line">                    <span class="keyword">if</span> (-<span class="number">1</span> != t.<span class="title function_">indexOf</span>(<span class="string">&quot;wxlocalresource://&quot;</span>)) &#123;</span><br><span class="line">                        e.<span class="title function_">preventDefault</span>(), e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">                        <span class="keyword">var</span> o = n[<span class="string">&quot;wx-id&quot;</span>];</span><br><span class="line">                        <span class="keyword">if</span> (o || (o = T++, n[<span class="string">&quot;wx-id&quot;</span>] = o), k[o]) <span class="keyword">return</span>;</span><br><span class="line">                        k[o] = !<span class="number">0</span>, wx.<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            wx.<span class="title function_">getLocalImgData</span>(&#123;</span><br><span class="line">                                <span class="attr">localId</span>: t,</span><br><span class="line">                                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                    n.<span class="property">src</span> = e.<span class="property">localData</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, !<span class="number">0</span>), i.<span class="title function_">addEventListener</span>(<span class="string">&quot;load&quot;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!p) &#123;</span><br><span class="line">                <span class="keyword">var</span> n = e.<span class="property">target</span>,</span><br><span class="line">                    i = n.<span class="property">tagName</span>;</span><br><span class="line">                n.<span class="property">src</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;IMG&quot;</span> == i || <span class="string">&quot;VIDEO&quot;</span> == i || <span class="string">&quot;AUDIO&quot;</span> == i || <span class="string">&quot;SOURCE&quot;</span> == i) &#123;</span><br><span class="line">                    <span class="keyword">var</span> t = n[<span class="string">&quot;wx-id&quot;</span>];</span><br><span class="line">                    t &amp;&amp; (k[t] = !<span class="number">1</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, !<span class="number">0</span>), e &amp;&amp; (o.<span class="property">wx</span> = o.<span class="property">jWeixin</span> = w), w</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">M</span>(<span class="params">n, e, i</span>) &#123;</span><br><span class="line">        o.<span class="property">WeixinJSBridge</span> ? <span class="title class_">WeixinJSBridge</span>.<span class="title function_">invoke</span>(n, <span class="title function_">x</span>(e), <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="title function_">A</span>(n, e, i)</span><br><span class="line">        &#125;) : <span class="title function_">B</span>(n, i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">P</span>(<span class="params">n, i, t</span>) &#123;</span><br><span class="line">        o.<span class="property">WeixinJSBridge</span> ? <span class="title class_">WeixinJSBridge</span>.<span class="title function_">on</span>(n, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            t &amp;&amp; t.<span class="property">trigger</span> &amp;&amp; t.<span class="title function_">trigger</span>(e), <span class="title function_">A</span>(n, e, i)</span><br><span class="line">        &#125;) : <span class="title function_">B</span>(n, t || i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">x</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> (e = e || &#123;&#125;).<span class="property">appId</span> = v.<span class="property">appId</span>, e.<span class="property">verifyAppId</span> = v.<span class="property">appId</span>, e.<span class="property">verifySignType</span> = <span class="string">&quot;sha1&quot;</span>, e.<span class="property">verifyTimestamp</span> =</span><br><span class="line">            v.<span class="property">timestamp</span> + <span class="string">&quot;&quot;</span>, e.<span class="property">verifyNonceStr</span> = v.<span class="property">nonceStr</span>, e.<span class="property">verifySignature</span> = v.<span class="property">signature</span>, e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">V</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">timeStamp</span>: e.<span class="property">timestamp</span> + <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">nonceStr</span>: e.<span class="property">nonceStr</span>,</span><br><span class="line">            <span class="attr">package</span>: e.<span class="property">package</span>,</span><br><span class="line">            <span class="attr">paySign</span>: e.<span class="property">paySign</span>,</span><br><span class="line">            <span class="attr">signType</span>: e.<span class="property">signType</span> || <span class="string">&quot;SHA1&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">A</span>(<span class="params">e, n, i</span>) &#123;</span><br><span class="line">        <span class="string">&quot;openEnterpriseChat&quot;</span> != e &amp;&amp; <span class="string">&quot;openBusinessView&quot;</span> !== e || (n.<span class="property">errCode</span> = n.<span class="property">err_code</span>), <span class="keyword">delete</span> n.<span class="property">err_code</span>,</span><br><span class="line">            <span class="keyword">delete</span> n.<span class="property">err_desc</span>, <span class="keyword">delete</span> n.<span class="property">err_detail</span>;</span><br><span class="line">        <span class="keyword">var</span> t = n.<span class="property">errMsg</span>;</span><br><span class="line">        t || (t = n.<span class="property">err_msg</span>, <span class="keyword">delete</span> n.<span class="property">err_msg</span>, t = <span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> i = e,</span><br><span class="line">                    t = a[i];</span><br><span class="line">                t &amp;&amp; (i = t);</span><br><span class="line">                <span class="keyword">var</span> o = <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (n) &#123;</span><br><span class="line">                    <span class="keyword">var</span> r = n.<span class="title function_">indexOf</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">                    <span class="string">&quot;confirm&quot;</span> == (o = n.<span class="title function_">substring</span>(r + <span class="number">1</span>)) &amp;&amp; (o = <span class="string">&quot;ok&quot;</span>), <span class="string">&quot;failed&quot;</span> == o &amp;&amp; (o = <span class="string">&quot;fail&quot;</span>), -<span class="number">1</span> != o</span><br><span class="line">                        .<span class="title function_">indexOf</span>(<span class="string">&quot;failed_&quot;</span>) &amp;&amp; (o = o.<span class="title function_">substring</span>(<span class="number">7</span>)), -<span class="number">1</span> != o.<span class="title function_">indexOf</span>(<span class="string">&quot;fail_&quot;</span>) &amp;&amp; (o = o.<span class="title function_">substring</span>(</span><br><span class="line">                            <span class="number">5</span>)), <span class="string">&quot;access denied&quot;</span> != (o = (o = o.<span class="title function_">replace</span>(<span class="regexp">/_/g</span>, <span class="string">&quot; &quot;</span>)).<span class="title function_">toLowerCase</span>()) &amp;&amp;</span><br><span class="line">                        <span class="string">&quot;no permission to execute&quot;</span> != o || (o = <span class="string">&quot;permission denied&quot;</span>), <span class="string">&quot;config&quot;</span> == i &amp;&amp;</span><br><span class="line">                        <span class="string">&quot;function not exist&quot;</span> == o &amp;&amp; (o = <span class="string">&quot;ok&quot;</span>), <span class="string">&quot;&quot;</span> == o &amp;&amp; (o = <span class="string">&quot;fail&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> n = i + <span class="string">&quot;:&quot;</span> + o</span><br><span class="line">            &#125;(e, t), n.<span class="property">errMsg</span> = t), (i = i || &#123;&#125;).<span class="property">_complete</span> &amp;&amp; (i.<span class="title function_">_complete</span>(n), <span class="keyword">delete</span> i.<span class="property">_complete</span>), t = n.<span class="property">errMsg</span> ||</span><br><span class="line">            <span class="string">&quot;&quot;</span>, v.<span class="property">debug</span> &amp;&amp; !i.<span class="property">isInnerInvoke</span> &amp;&amp; <span class="title function_">alert</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(n));</span><br><span class="line">        <span class="keyword">var</span> o = t.<span class="title function_">indexOf</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">        <span class="keyword">switch</span> (t.<span class="title function_">substring</span>(o + <span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;ok&quot;</span>:</span><br><span class="line">                i.<span class="property">success</span> &amp;&amp; i.<span class="title function_">success</span>(n);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;cancel&quot;</span>:</span><br><span class="line">                i.<span class="property">cancel</span> &amp;&amp; i.<span class="title function_">cancel</span>(n);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                i.<span class="property">fail</span> &amp;&amp; i.<span class="title function_">fail</span>(n)</span><br><span class="line">        &#125;</span><br><span class="line">        i.<span class="property">complete</span> &amp;&amp; i.<span class="title function_">complete</span>(n)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">C</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>, i = e.<span class="property">length</span>; n &lt; i; ++n) &#123;</span><br><span class="line">                <span class="keyword">var</span> t = e[n],</span><br><span class="line">                    o = c[t];</span><br><span class="line">                o &amp;&amp; (e[n] = o)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> e</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">B</span>(<span class="params">e, n</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(!v.<span class="property">debug</span> || n &amp;&amp; n.<span class="property">isInnerInvoke</span>)) &#123;</span><br><span class="line">            <span class="keyword">var</span> i = a[e];</span><br><span class="line">            i &amp;&amp; (e = i), n &amp;&amp; n.<span class="property">_complete</span> &amp;&amp; <span class="keyword">delete</span> n.<span class="property">_complete</span>, <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;&quot;&#x27;</span> + e + <span class="string">&#x27;&quot;,&#x27;</span>, n || <span class="string">&quot;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">L</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">O</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        l &amp;&amp; (o.<span class="property">WeixinJSBridge</span> ? <span class="title function_">e</span>() : i.<span class="property">addEventListener</span> &amp;&amp; i.<span class="title function_">addEventListener</span>(<span class="string">&quot;WeixinJSBridgeReady&quot;</span>, e, !<span class="number">1</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="下载jweixin源码"><a href="#下载jweixin源码" class="headerlink" title="下载jweixin源码"></a>下载jweixin源码</h3><ul>
<li><a href="https://res.wx.qq.com/open/js/jweixin-1.2.0.js">Jweixin-1.2.0</a></li>
<li><a href="https://res.wx.qq.com/open/js/jweixin-1.6.0.js">Jweixin-1.6.0</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Learn iOS 5 by Stanford</title>
    <url>/2011/09/30/programming-language-and-tools-iOS-Stanford-CS139p-iOS5-index/</url>
    <content><![CDATA[<p>##iOS 5 iPad and iPhone App Development </p>
]]></content>
  </entry>
</search>
